<?xml version="1.0" encoding="UTF-8"?>
<!-- generator="podbean/3.2" -->
<rss version="2.0" 
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd"
	xmlns:media="http://search.yahoo.com/mrss/"
>

<channel>
	<title>Podcast.__init__ - Python and the people who make it great</title>
	<atom:link href="http://podcastinit.podbean.com/feed/" rel="self" type="application/rss+xml" />
    <link>http://pythonpodcast.com</link>
	<description>Python and the people who make it great</description>
	<pubDate>Fri, 18 Mar 2016 10:25:30 +0000</pubDate>
	<generator>http://podbean.com/?v=3.2</generator>
	<language>en</language>
		<!-- podcast_generator="Podbean Engine/5.0" -->
		<copyright>Copyright 2015 All rights reserved.</copyright>
		<category>Technology</category>
		<ttl>360</ttl>
		<itunes:subtitle>Python and the people who make it great		</itunes:subtitle>
		<itunes:summary>This is a long form podcast about Python and the people who make it great. We conduct interviews about projects and topics that are of particular interest to people in the Python community.</itunes:summary>
		<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:category text="Technology"/>
		<itunes:owner>
			<itunes:name>Tobias Macey &#x26; Chris Patti</itunes:name>
			<itunes:email>hosts@podcastinit.com</itunes:email>
		</itunes:owner>
		<itunes:block>No</itunes:block>
		<itunes:explicit>No</itunes:explicit>
		<itunes:image href="http://imglogo.podbean.com/image-logo/752308/podcast_init_logo.png" />
		<image>
			<url>http://imglogo.podbean.com/image-logo/752308/podcast_init_logo.png</url>
			<title>Podcast.__init__ - Python and the people who make it great</title>
			<link>http://pythonpodcast.com</link>
			<width>144</width>
			<height>144</height>
		</image>
			<item>
		<title>Episode 49 - VPython with Ruth Chabay and Bruce Sherwood</title>
		<link>http://podcastinit.podbean.com/e/episode-49-vpython-with-ruth-chabay-and-bruce-sherwood/</link>
		<comments>http://podcastinit.podbean.com/e/episode-49-vpython-with-ruth-chabay-and-bruce-sherwood/#comments</comments>
		<pubDate>Fri, 18 Mar 2016 10:25:30 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Learning</category>
	<category>Data Visualization</category>
	<category>Open Source</category>
	<category>Science</category>
	<category>Web</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-49-vpython-with-ruth-chabay-and-bruce-sherwood/</guid>

		<description><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, join our <a href="https://discourse.pythonpodcast.com">community</a>, and sign up for our mailing list.</p>
<h3>Summary</h3>
<p>Wouldn’t it be nice to be able to generate interactive 3D visualizations of physical systems in a declarative manner with Python? In this episode we spoke with Ruth Chabay and Bruce Sherwood about the VPython project which does just that. They tell us about how the use VPython in their classrooms, how the project got started, and the work they have done to bring it into the browser.</p>
<h3>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&#38;uo=6&#38;at=&#38;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&#38;refid=stpr">Stitcher</a>, <a href=""></a></li></ul>]]></description>
			<content:encoded><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, join our <a href="https://discourse.pythonpodcast.com">community</a>, and sign up for our mailing list.</p>
<h3>Summary</h3>
<p>Wouldn’t it be nice to be able to generate interactive 3D visualizations of physical systems in a declarative manner with Python? In this episode we spoke with Ruth Chabay and Bruce Sherwood about the VPython project which does just that. They tell us about how the use VPython in their classrooms, how the project got started, and the work they have done to bring it into the browser.</p>
<h3>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&amp;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p726240/#">TuneIn</a> or <a href="http://podcastinit.podbean.com/feed/">RSS</a></li>
<li>Follow us on <a href="https://twitter.com/Podcast__init__">Twitter</a> or <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>Give us feedback! Leave a review on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="https://twitter.com/Podcast__init__">Tweet</a> to us, send us an <a href="mailto:hosts@podcastinit.com">email</a> or leave us a message on <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>Join our community! Visit <a href="https://discourse.pythonpodcast.com">discourse.pythonpodcast.com</a> for your opportunity to find out about upcoming guests, suggest questions, and propose show ideas.</li>
<li>I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at <a href="http://pythonpodcast.com">pythonpodcast.com</a></li>
<li>Linode is sponsoring us this week. Check them out at <a href="http://linode.com/podcastinit">linode.com/podcastinit</a> and get a $20 credit to try out their fast and reliable Linux virtual servers for your next project</li>
<li>I would also like to thank Hired, a job marketplace for developers and designers, for sponsoring this episode of Podcast.__init__. Use the link <a href="http://hired.com/podcastinit">hired.com/podcastinit</a> to double your signing bonus.</li>
<li>Your hosts as usual are Tobias Macey and Chris Patti</li>
<li>Today we are interviewing Ruth Chabay and Bruce Sherwood about their work on VPython</li>
</ul><div class="well"><a href="http://linode.com/podcastinit"><img src="http://podcastinit.podbean.com/mf/web/tdegpr/linode-banner-sponsor-large.png" alt="Linode Sponsor Banner" /></a>

<p>Use the promo code <strong>podcastinit20</strong> to get a $20 credit when you sign up!</p>
</div>
<div class="well"><a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit"><img src="http://podcastinit.podbean.com/mf/web/ehi957/hired-logo-dark-padding.png" alt="Hired Logo" /></a>
<p>On Hired software engineers &amp; designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our <a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit">special link</a> to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.</p>
</div>
<h3>Interview</h3>
<ul><li>Introductions</li>
<li>How did you get introduced to Python? - Chris</li>
<li>What is VPython and how did it get started? - Tobias</li>
<li>What problems inspired you to create VPython? - Chris</li>
<li>How do you design an API that allows for such powerful 3D visualization while still making it accessible to students who are focusing on learning new concepts in mathematics and physics so that they don’t get overwhelmed by the tool? - Tobias</li>
<li>I know many schools have embraced the open curriculum idea, have any of your physics courses using VPython been made available to the non matriculating public? - Chris</li>
<li>How does VPython perform its rendering? If you were to reimplement it would you do anything differently? - Tobias</li>
<li>One of the remarkable points about VPython is its ability to execute the simulations in a browser environment. Can you explain the technologies involved to make that work? - Tobias</li>
<li>Given the real-time rendering capabilities in VPython I’m sure that performance is a core concern for the project. What are some of the methods that are used to ensure an appropriate level of speed and does the cross-platform nature of the package pose any additional challenges? - Tobias</li>
<li>How does collision detection work in VPython, and does it handle more complex assemblies of component objects? - Chris</li>
<li>Can you talk a little bit about VPython’s design, and perhaps walk us through how a simple scene is rendered, say the results of the sphere() call? - Chris</li>
</ul><h3>Keep In Touch</h3>
<ul><li><a href="https://groups.google.com/forum/?fromgroups&amp;hl=en#!forum/vpython-users">VPython Forum</a></li>
<li><a href="https://groups.google.com/forum/?fromgroups#!forum/glowscript-users">Glowscript Forum</a></li>
<li><a href="https://github.com/BruceSherwood?tab=repositories">Github</a></li>
</ul><h3>Picks</h3>
<ul><li>Tobias
<ul><li><a href="http://www.jdoqocy.com/l5115xdmjdl089618A60223712A9025593A331A111?url=http%3A%2F%2Fshop.oreilly.com%2Fproduct%2F9781593272814.do%3Fcmp%3Daf-na-books-videos-product_cj_9781593273491_%2525zp&amp;cjsku=SKU-KIT-9781593273491-EBOOK">Land of Lisp</a> by Conrad Barsky M.D.</li>
</ul></li>
<li>Chris
<ul><li><a href="http://www.syfy.com/themagicians">The Magicians</a></li>
<li><a href="http://www.apple.com/swift/">Swift</a></li>
<li><a href="https://en.wikipedia.org/wiki/Atari_Logo">Atari Logo</a></li>
</ul></li>
<li>Bruce
<ul><li><a href="http://vpython.org">VPython.org</a></li>
<li><a href="http://glowscript.org">Glowscript.org</a></li>
</ul></li>
<li>Ruth
<ul><li><a href="http://matterandinteractions.org/student">matterandinteractions.org/student</a></li>
<li><a href="https://ccl.northwestern.edu/netlogo/">NetLogo</a></li>
</ul></li>
</ul><h3>Links</h3>
<ul><li><a href="https://www.coursera.org/course/phys1">Coursera GATech Intro to Physics</a></li>
<li><a href="http://www.alice.org/index.php">Alice Project</a></li>
<li><a href="http://www.glowscript.org/">glowscript.org</a></li>
<li><a href="https://github.com/BruceSherwood/vpython-jupyter">Jupyter VPython</a></li>
<li><a href="http://www.rapydscript.com/">RapydScript</a></li>
</ul><p>The intro and outro music is from Requiem for a Fish <a href="http://freemusicarchive.org/music/The_Freak_Fandango_Orchestra/">The Freak Fandango Orchestra</a>  / <a href="http://creativecommons.org/licenses/by-sa/3.0/">CC BY-SA</a></p>
]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/twx8jp/Episode_49_-_VPython_with_Ruth_Chabay_and_Bruce_Sherwood.mp3" length="41893810" type="audio/mpeg"/>
				<itunes:subtitle>Visit our site to listen to past episodes, support the show, join our community, and sign up for our mailing list.Summary
Wouldn't it be nice to ...</itunes:subtitle>
		<itunes:summary>Visit our site to listen to past episodes, support the show, join our community, and sign up for our mailing list.Summary
Wouldn't it be nice to be able to generate interactive 3D visualizations of physical systems in a declarative manner with Python? In this episode we spoke with Ruth Chabay and Bruce Sherwood about the VPython project which does just that. They tell us about how the use VPython in their classrooms, how the project got started, and the work they have done to bring it into the browser.Brief IntroductionHello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.Subscribe on iTunes, Stitcher, TuneIn or RSSFollow us on Twitter or Google+Give us feedback! Leave a review on iTunes, Tweet to us, send us an email or leave us a message on Google+Join our community! Visit discourse.pythonpodcast.com for your opportunity to find out about upcoming guests, suggest questions, and propose show ideas.I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at pythonpodcast.comLinode is sponsoring us this week. Check them out at linode.com/podcastinit and get a $20 credit to try out their fast and reliable Linux virtual servers for your next projectI would also like to thank Hired, a job marketplace for developers and designers, for sponsoring this episode of Podcast.__init__. Use the link hired.com/podcastinit to double your signing bonus.Your hosts as usual are Tobias Macey and Chris PattiToday we are interviewing Ruth Chabay and Bruce Sherwood about their work on VPython
Use the promo code podcastinit20 to get a $20 credit when you sign up!

On Hired software engineers  designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our special link to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.InterviewIntroductionsHow did you get introduced to Python? - ChrisWhat is VPython and how did it get started? - TobiasWhat problems inspired you to create VPython? - ChrisHow do you design an API that allows for such powerful 3D visualization while still making it accessible to students who are focusing on learning new concepts in mathematics and physics so that they don't get overwhelmed by the tool? - TobiasI know many schools have embraced the open curriculum idea, have any of your physics courses using VPython been made available to the non matriculating public? - ChrisHow does VPython perform its rendering? If you were to reimplement it would you do anything differently? - TobiasOne of the remarkable points about VPython is its ability to execute the simulations in a browser environment. Can you explain the technologies involved to make that work? - TobiasGiven the real-time rendering capabilities in VPython I'm sure that performance is a core concern for the project. What are some of the methods that are used to ensure an appropriate level of speed and does the cross-platform nature of the package pose any additional challenges? - TobiasHow does collision detection work in VPython, and does it handle more complex assemblies of component objects? - ChrisCan you talk a little bit about VPython's design, and perhaps walk us through how a simple scene is rendered, say the results of the sphere() call? - ChrisKeep In TouchVPython ForumGlowscript ForumGithubPicksTobiasLand of Lisp by Conrad Barsky M.D.ChrisThe MagiciansSw</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>01:03:03</itunes:duration>
		</item>
		<item>
		<title>Episode 48 - PyData London with Ian Ozsvald and Emlyn Clay</title>
		<link>http://podcastinit.podbean.com/e/episode-48-pydata-london-with-ian-ozsvald-and-emlyn-clay/</link>
		<comments>http://podcastinit.podbean.com/e/episode-48-pydata-london-with-ian-ozsvald-and-emlyn-clay/#comments</comments>
		<pubDate>Sat, 12 Mar 2016 16:01:00 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Learning</category>
	<category>Data Science</category>
	<category>Data Analysis</category>
	<category>Data Visualization</category>
	<category>Community</category>
	<category>Open Source</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-48-pydata-london-with-ian-ozsvald-and-emlyn-clay/</guid>

		<description><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, join our <a href="https://discourse.pythonpodcast.com">community</a>, and sign up for our mailing list.</p>
<h3>Summary</h3>
<p>Ian Ozsvald and Emlyn Clay are co-chairs of the London chapter of the PyData organization. In this episode we talked to them about their experience managing the PyData conference and meetup, what the PyData organization does, and their thoughts on using Python for data analytics in their work.</p>
<h3>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&#38;uo=6&#38;at=&#38;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&#38;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p726240/#">TuneIn</a> or <a href="http://podcastinit.podbean.com/feed/">RSS</a></li><li>[...]</li></ul>]]></description>
			<content:encoded><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, join our <a href="https://discourse.pythonpodcast.com">community</a>, and sign up for our mailing list.</p>
<h3>Summary</h3>
<p>Ian Ozsvald and Emlyn Clay are co-chairs of the London chapter of the PyData organization. In this episode we talked to them about their experience managing the PyData conference and meetup, what the PyData organization does, and their thoughts on using Python for data analytics in their work.</p>
<h3>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&amp;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p726240/#">TuneIn</a> or <a href="http://podcastinit.podbean.com/feed/">RSS</a></li>
<li>Follow us on <a href="https://twitter.com/Podcast__init__">Twitter</a> or <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>Give us feedback! Leave a review on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="https://twitter.com/Podcast__init__">Tweet</a> to us, send us an <a href="mailto:hosts@podcastinit.com">email</a> or leave us a message on <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>Join our community! Visit <a href="https://discourse.pythonpodcast.com">discourse.pythonpodcast.com</a> for your opportunity to find out about upcoming guests, suggest questions, and propose show ideas.</li>
<li>I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at <a href="http://pythonpodcast.com">pythonpodcast.com</a></li>
<li>Linode is sponsoring us this week. Check them out at <a href="http://linode.com/podcastinit">linode.com/podcastinit</a> and get a $20 credit to try out their fast and reliable Linux virtual servers for your next project</li>
<li>I would also like to thank Hired, a job marketplace for developers and designers, for sponsoring this episode of Podcast.__init__. Use the link <a href="http://hired.com/podcastinit">hired.com/podcastinit</a> to double your signing bonus.</li>
<li>Your hosts as usual are Tobias Macey and Chris Patti</li>
<li>Today we are interviewing Ian Ozsvald and Emlyn Clay about their work with PyData London, a group within the PyData organization. PyData London represents the largest Python group in London at ~2850 members, they hold regular monthly meetups for ~200 members at AHL near Bank and a yearly conference for around ~300 members. Last year, they and their sponsors raised over £26,000 to sponsor the development of core numerical libraries in Python.</li>
</ul><div class="well"><a href="http://linode.com/podcastinit"><img src="http://podcastinit.podbean.com/mf/web/tdegpr/linode-banner-sponsor-large.png" alt="Linode Sponsor Banner" /></a>
<br /><p>Use the promo code <strong>podcastinit20</strong> to get a $20 credit when you sign up!</p>
</div>
<div class="well"><a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit"><img src="http://podcastinit.podbean.com/mf/web/ehi957/hired-logo-dark-padding.png" alt="Hired Logo" /></a>
<p>On Hired software engineers &amp; designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our <a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit">special link</a> to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.</p>
</div>
<h3>Interview</h3>
<ul><li>Introductions</li>
<li>How did you get introduced to Python? - Chris</li>
<li>What is the PyData organization, how does PyData London fit into it and what is your relationship with it? - Tobias</li>
<li>In what ways does a PyData conference differ from a PyCon? - Tobias</li>
<li>Does PyData do anything in particular to encourage users from disciplines that might not be aware of how much our community has to offer to choose the Python suite of data analysis tools? - Chris</li>
<li>You have both spent a good portion of your careers using Python for working with and analyzing data from various domains. How has that experience evolved over the past several years as newer tools have become available? - Tobias</li>
<li>For someone who is just getting started in the data analytics space, what advice can you give? - Tobias</li>
<li>How can conferences like PyData help strengthen the bonds and synergies between the Python software community and the sciences? - Chris</li>
<li>There are a number of different subtopics within the blanket categorization of data science. Is it difficult to balance the subject matter in PyData conferences and meetups to keep members of the audience from being alienated? - Tobias</li>
<li>Data science is a young field and we’ve yet to see lots of examples of the successful use of data. How are London-based companies using data with Python? - Ian</li>
<li>Is there a Python data science library you think needs a little love? - Emlyn</li>
</ul><h3>Keep In Touch</h3>
<ul><li>Ian
<ul><li><a href="http://ianozsvald.com">Blog</a></li>
<li><a href="https://twitter.com/ianozsvald">Twitter</a></li>
</ul></li>
<li>Emlyn
<ul><li><a href="https://twitter.com/emlynclay">Twitter</a></li>
</ul></li>
</ul><h3>Picks</h3>
<ul><li>Tobias
<ul><li><a href="https://github.com/alols/xcape">xcape</a></li>
<li><a href="https://keybase.io/docs/kbfs">Keybase Filesystem</a></li>
</ul></li>
<li>Chris
<ul><li><a href="http://smile.amazon.com/gp/product/B002WM3HC2/ref=dp-kindle-redirect?ie=UTF8&amp;btkr=1">The Player of Games</a></li>
<li><a href="http://store.steampowered.com/app/391540/">Undertale</a></li>
<li><a href="http://www.rottentomatoes.com/m/the_big_short/">The Big Short</a></li>
</ul></li>
<li>Ian
<ul><li><a href="http://stanford.edu/~mwaskom/software/seaborn/">Seaborn: Python visualisation tool</a></li>
<li><a href="https://www.packtpub.com/application-development/mastering-predictive-analytics-r">Mastering Predictive Analytics with R: Rui Miguel Forte</a></li>
<li><a href="http://ianozsvald.com/2016/01/11/allergic-rhinitis-why-do-i-always-sneeze-research-project-using-machine-learning/">Allergect Rhinitis research using ML</a></li>
<li><a href="http://unrealcityaudio.co.uk/">London Unreal City Audio Tour</a></li>
</ul></li>
<li>Emlyn
<ul><li><a href="https://ipython.org/ipython-doc/1/interactive/nbconvert.html">ipython nbconvert –template flag</a></li>
<li><a href="http://www.damian.oquanta.info/posts/make-your-slides-with-ipython.html">Damian Avila’s Blog post on making slides with iPython Notebook</a></li>
</ul></li>
</ul><p>The intro and outro music is from Requiem for a Fish <a href="http://freemusicarchive.org/music/The_Freak_Fandango_Orchestra/">The Freak Fandango Orchestra</a>  / <a href="http://creativecommons.org/licenses/by-sa/3.0/">CC BY-SA</a></p>
]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/j535id/Episode_48_-_PyData_London_with_Ian_Ozsvald_and_Emlyn_Clay.mp3" length="55532594" type="audio/mpeg"/>
				<itunes:subtitle>Visit our site to listen to past episodes, support the show, join our community, and sign up for our mailing list.Summary
Ian Ozsvald and Emlyn Clay ...</itunes:subtitle>
		<itunes:summary>Visit our site to listen to past episodes, support the show, join our community, and sign up for our mailing list.Summary
Ian Ozsvald and Emlyn Clay are co-chairs of the London chapter of the PyData organization. In this episode we talked to them about their experience managing the PyData conference and meetup, what the PyData organization does, and their thoughts on using Python for data analytics in their work.Brief IntroductionHello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.Subscribe on iTunes, Stitcher, TuneIn or RSSFollow us on Twitter or Google+Give us feedback! Leave a review on iTunes, Tweet to us, send us an email or leave us a message on Google+Join our community! Visit discourse.pythonpodcast.com for your opportunity to find out about upcoming guests, suggest questions, and propose show ideas.I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at pythonpodcast.comLinode is sponsoring us this week. Check them out at linode.com/podcastinit and get a $20 credit to try out their fast and reliable Linux virtual servers for your next projectI would also like to thank Hired, a job marketplace for developers and designers, for sponsoring this episode of Podcast.__init__. Use the link hired.com/podcastinit to double your signing bonus.Your hosts as usual are Tobias Macey and Chris PattiToday we are interviewing Ian Ozsvald and Emlyn Clay about their work with PyData London, a group within the PyData organization. PyData London represents the largest Python group in London at ~2850 members, they hold regular monthly meetups for ~200 members at AHL near Bank and a yearly conference for around ~300 members. Last year, they and their sponsors raised over £26,000 to sponsor the development of core numerical libraries in Python.


Use the promo code podcastinit20 to get a $20 credit when you sign up!

On Hired software engineers  designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our special link to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.InterviewIntroductionsHow did you get introduced to Python? - ChrisWhat is the PyData organization, how does PyData London fit into it and what is your relationship with it? - TobiasIn what ways does a PyData conference differ from a PyCon? - TobiasDoes PyData do anything in particular to encourage users from disciplines that might not be aware of how much our community has to offer to choose the Python suite of data analysis tools? - ChrisYou have both spent a good portion of your careers using Python for working with and analyzing data from various domains. How has that experience evolved over the past several years as newer tools have become available? - TobiasFor someone who is just getting started in the data analytics space, what advice can you give? - TobiasHow can conferences like PyData help strengthen the bonds and synergies between the Python software community and the sciences? - ChrisThere are a number of different subtopics within the blanket categorization of data science. Is it difficult to balance the subject matter in PyData conferences and meetups to keep members of the audience from being alienated? - TobiasData science is a young field and we've yet to see lots of examples of the successful use of data. How are London-based compa</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>01:03:12</itunes:duration>
		</item>
		<item>
		<title>Episode 47 - Efene with Mariano Guerra</title>
		<link>http://podcastinit.podbean.com/e/episode-47-efene-with-mariano-guerra/</link>
		<comments>http://podcastinit.podbean.com/e/episode-47-efene-with-mariano-guerra/#comments</comments>
		<pubDate>Fri, 04 Mar 2016 01:48:49 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Open Source</category>
	<category>Concurrency</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-47-efene-with-mariano-guerra/</guid>

		<description><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, join our <a href="https://discourse.pythonpodcast.com">community</a>, and sign up for our mailing list.</p>
<h3>Summary</h3>
<p>Efene is a language that runs on the Erlang Virtual Machine (BEAM) and is inspired by the Zen of Python. It is intended as a bridge language that serves to ease the transition into the Erlang ecosystem for people who are coming from languages like Python. In this episode I spoke with Mariano Guerra, the creator of Efene, about how Python influenced his design choices, why you might want to use it, and when Python is the better tool.</p>
<h3>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&#38;uo=6&#38;at=&#38;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&#38;refid=s%20%5B...%5D"></a></li></ul>]]></description>
			<content:encoded><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, join our <a href="https://discourse.pythonpodcast.com">community</a>, and sign up for our mailing list.</p>
<h3>Summary</h3>
<p>Efene is a language that runs on the Erlang Virtual Machine (BEAM) and is inspired by the Zen of Python. It is intended as a bridge language that serves to ease the transition into the Erlang ecosystem for people who are coming from languages like Python. In this episode I spoke with Mariano Guerra, the creator of Efene, about how Python influenced his design choices, why you might want to use it, and when Python is the better tool.</p>
<h3>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&amp;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p726240/#">TuneIn</a> or <a href="http://podcastinit.podbean.com/feed/">RSS</a></li>
<li>Follow us on <a href="https://twitter.com/Podcast__init__">Twitter</a> or <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>Give us feedback! Leave a review on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="https://twitter.com/Podcast__init__">Tweet</a> to us, send us an <a href="mailto:hosts@podcastinit.com">email</a> or leave us a message on <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>Join our community! Visit <a href="https://discourse.pythonpodcast.com">discourse.pythonpodcast.com</a> for your opportunity to find out about upcoming guests, suggest questions, and propose show ideas.</li>
<li>I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at <a href="http://pythonpodcast.com">pythonpodcast.com</a></li>
<li>Linode is sponsoring us this week. Check them out at <a href="http://linode.com/podcastinit">linode.com/podcastinit</a> and get a $20 credit to try out their fast and reliable Linux virtual servers for your next project</li>
<li>I would also like to thank Hired, a job marketplace for developers, for sponsoring this episode of Podcast.__init__. Use the link <a href="http://hired.com/podcastinit">hired.com/podcastinit</a> to double your signing bonus.</li>
<li>Your host today is Tobias Macey</li>
<li>Today we are interviewing Mariano Guerra about his work on the Efene language.</li>
</ul><div class="well"><a href="http://linode.com/podcastinit"><img src="http://podcastinit.podbean.com/mf/web/tdegpr/linode-banner-sponsor-large.png" alt="Linode Sponsor Banner" /></a>

<p>Use the promo code <strong>podcastinit20</strong> to get a $20 credit when you sign up!</p>
</div>
<div class="well"><a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit"><img src="http://podcastinit.podbean.com/mf/web/ehi957/hired-logo-dark-padding.png" alt="Hired Logo" /></a>
<p>On Hired software engineers &amp; designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our <a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit">special link</a> to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.</p>
</div>
<h3>Interview with Mariano Guerra</h3>
<ul><li>Introductions</li>
<li>How did you get introduced to Python? - Chris</li>
<li>So Efene is a language that runs on the BEAM VM which you say was at least partially inspired by the Zen of Python. Can you explain in greater detail in what form that inspiration manifested and some of the process involved in the creation of Efene? - Tobias</li>
<li>What inspired you to create Efene and what problems does it solve? - Tobias</li>
<li>How does Efene compare to other BEAM based languages such as Elixir? - Tobias</li>
<li>When would a Python developer want to consider using Efene? - Tobias</li>
<li>What benefits does the BEAM provide that can’t be easily replicated in the Python ecosystem? - Tobias</li>
<li>Does the Efene language ease the transition to a more functional mindset for developers who are already familiar with Python paradigms? - Tobias</li>
<li>I understand that you are experimenting with another language implementation that runs on the BEAM. Can you describe that project and compare it to Efene? What were your inspirations? - Tobias</li>
</ul><h3>Keep In Touch</h3>
<ul><li><a href="https://twitter.com/warianoguerra">Twitter</a></li>
<li><a href="https://github.com/marianoguerra">GitHub</a></li>
<li><a href="http://marianoguerra.org">Blog</a></li>
<li><a href="http://efene.org">Efene</a></li>
<li><a href="http://blog.emesene.org/">Emesene</a></li>
<li><a href="http://python.org.ar/">Python Argentina</a></li>
</ul><h3>Picks</h3>
<ul><li>Tobias
<ul><li><a href="https://github.com/dotphiles/dotphiles">Dotphiles</a></li>
<li><a href="https://vimeo.com/74354480">The Unreasonable Effectiveness of Dynamic Typing for Practical Programs</a></li>
</ul></li>
<li>Mariano
<ul><li><a href="https://github.com/omcljs/om/wiki/Documentation-(om.next)#omnext-1">Om Next</a></li>
<li><a href="https://www.youtube.com/watch?v=ByNs9TG30E8">David Nolan on Om Next</a></li>
<li><a href="https://github.com/clojure/clojurescript">Clojurescript</a></li>
<li><a href="http://thethingsnetwork.org/">Things Network</a></li>
</ul></li>
</ul><h3>Links</h3>
<ul><li><a href="http://erlang.org">Erlang</a></li>
<li><a href="http://elixir-lang.org">Elixir</a></li>
<li><a href="http://lfe.io">Lisp Flavored Erlang</a></li>
<li><a href="http://joxa.org/">Joxa</a></li>
<li><a href="http://rebar3.org">Rebar3</a></li>
<li><a href="http://erlang.mk">Erlang MK</a></li>
<li><a href="https://hex.pm">Hex</a></li>
<li><a href="https://github.com/marianoguerra/interfix">Interfix</a></li>
</ul><p>The intro and outro music is from Requiem for a Fish <a href="http://freemusicarchive.org/music/The_Freak_Fandango_Orchestra/">The Freak Fandango Orchestra</a>  / <a href="http://creativecommons.org/licenses/by-sa/3.0/">CC BY-SA</a></p>
]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/82gauk/Episode47-EfenewithMarianoGuerra.mp3" length="46815887" type="audio/mpeg"/>
				<itunes:subtitle>Visit our site to listen to past episodes, support the show, join our community, and sign up for our mailing list.Summary
Efene is a language that ...</itunes:subtitle>
		<itunes:summary>Visit our site to listen to past episodes, support the show, join our community, and sign up for our mailing list.Summary
Efene is a language that runs on the Erlang Virtual Machine (BEAM) and is inspired by the Zen of Python. It is intended as a bridge language that serves to ease the transition into the Erlang ecosystem for people who are coming from languages like Python. In this episode I spoke with Mariano Guerra, the creator of Efene, about how Python influenced his design choices, why you might want to use it, and when Python is the better tool.Brief IntroductionHello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.Subscribe on iTunes, Stitcher, TuneIn or RSSFollow us on Twitter or Google+Give us feedback! Leave a review on iTunes, Tweet to us, send us an email or leave us a message on Google+Join our community! Visit discourse.pythonpodcast.com for your opportunity to find out about upcoming guests, suggest questions, and propose show ideas.I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at pythonpodcast.comLinode is sponsoring us this week. Check them out at linode.com/podcastinit and get a $20 credit to try out their fast and reliable Linux virtual servers for your next projectI would also like to thank Hired, a job marketplace for developers, for sponsoring this episode of Podcast.__init__. Use the link hired.com/podcastinit to double your signing bonus.Your host today is Tobias MaceyToday we are interviewing Mariano Guerra about his work on the Efene language.
Use the promo code podcastinit20 to get a $20 credit when you sign up!

On Hired software engineers  designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our special link to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.Interview with Mariano GuerraIntroductionsHow did you get introduced to Python? - ChrisSo Efene is a language that runs on the BEAM VM which you say was at least partially inspired by the Zen of Python. Can you explain in greater detail in what form that inspiration manifested and some of the process involved in the creation of Efene? - TobiasWhat inspired you to create Efene and what problems does it solve? - TobiasHow does Efene compare to other BEAM based languages such as Elixir? - TobiasWhen would a Python developer want to consider using Efene? - TobiasWhat benefits does the BEAM provide that can't be easily replicated in the Python ecosystem? - TobiasDoes the Efene language ease the transition to a more functional mindset for developers who are already familiar with Python paradigms? - TobiasI understand that you are experimenting with another language implementation that runs on the BEAM. Can you describe that project and compare it to Efene? What were your inspirations? - TobiasKeep In TouchTwitterGitHubBlogEfeneEmesenePython ArgentinaPicksTobiasDotphilesThe Unreasonable Effectiveness of Dynamic Typing for Practical ProgramsMarianoOm NextDavid Nolan on Om NextClojurescriptThings NetworkLinksErlangElixirLisp Flavored ErlangJoxaRebar3Erlang MKHexInterfixThe intro and outro music is from Requiem for a Fish The Freak Fandango Orchestra  / CC BY-SA</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>00:59:36</itunes:duration>
		</item>
		<item>
		<title>Episode 46 - Functional Python with Matthew Rocklin and Alexander Schepanovsky</title>
		<link>http://podcastinit.podbean.com/e/episode-46-functional-python-with-matthew-rocklin-and-alexander-schepanovsky/</link>
		<comments>http://podcastinit.podbean.com/e/episode-46-functional-python-with-matthew-rocklin-and-alexander-schepanovsky/#comments</comments>
		<pubDate>Mon, 29 Feb 2016 03:11:21 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-46-functional-python-with-matthew-rocklin-and-alexander-schepanovsky/</guid>

		<description><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, join our <a href="https://discourse.pythonpodcast.com">community</a>, and sign up for our mailing list.</p>
<h3>Summary</h3>
<p>What is functional programming, why would you want to use it, and how can you get started with it in Python? Our guests this week, Matthew Rocklin and Alexander Schepanovsky, help us understand all of that and more. Matthew and Alexander have each created their own Python libraries to make it easier to employ functional paradigms in your Python code. In this episode they help us understand the benefits that functional styles can have and the benefits that can be realized by trying them out for yourself.</p>
<h3>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&#38;uo=6&#38;at=&#38;c%20%5B...%5D"></a></li></ul>]]></description>
			<content:encoded><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, join our <a href="https://discourse.pythonpodcast.com">community</a>, and sign up for our mailing list.</p>
<h3>Summary</h3>
<p>What is functional programming, why would you want to use it, and how can you get started with it in Python? Our guests this week, Matthew Rocklin and Alexander Schepanovsky, help us understand all of that and more. Matthew and Alexander have each created their own Python libraries to make it easier to employ functional paradigms in your Python code. In this episode they help us understand the benefits that functional styles can have and the benefits that can be realized by trying them out for yourself.</p>
<h3>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&amp;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p726240/#">TuneIn</a> or <a href="http://podcastinit.podbean.com/feed/">RSS</a></li>
<li>Follow us on <a href="https://twitter.com/Podcast__init__">Twitter</a> or <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>Give us feedback! Leave a review on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="https://twitter.com/Podcast__init__">Tweet</a> to us, send us an <a href="mailto:hosts@podcastinit.com">email</a> or leave us a message on <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>Join our community! Visit <a href="https://discourse.pythonpodcast.com">discourse.pythonpodcast.com</a> for your opportunity to find out about upcoming guests, suggest questions, and propose show ideas.</li>
<li>I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at <a href="http://pythonpodcast.com">pythonpodcast.com</a></li>
<li>Linode is sponsoring us this week. Check them out at <a href="http://linode.com/podcastinit">linode.com/podcastinit</a> and get a $20 credit to try out their fast and reliable Linux virtual servers for your next project</li>
<li>I would also like to thank Hired, a job marketplace for developers and designers, for sponsoring this episode of Podcast.__init__. Use the link <a href="http://hired.com/podcastinit">hired.com/podcastinit</a> to double your signing bonus.</li>
<li>Your host today is Tobias Macey</li>
<li>Today we are interviewing Matthew Rocklin and Alexander Schepanovski about their work on functional libraries for Python.</li>
</ul><div class="well"><a href="http://linode.com/podcastinit"><img src="http://podcastinit.podbean.com/mf/web/tdegpr/linode-banner-sponsor-large.png" alt="Linode Sponsor Banner" /></a>

<p>Use the promo code <strong>podcastinit20</strong> to get a $20 credit when you sign up!</p>
</div>
<div class="well"><a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit"><img src="http://podcastinit.podbean.com/mf/web/ehi957/hired-logo-dark-padding.png" alt="hired-logo-dark-padding.png" /></a>
<p>On Hired software engineers &amp; designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our <a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit">special link</a> to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.</p>
</div>
<h3>Interview with Alexander and Matthew</h3>
<ul><li>Introductions</li>
<li>How did you get introduced to Python? - Chris</li>
<li>Can you first explain what functional programming is and how it differs from the procedural or object oriented programming that most Pythonistas are familiar with? - Tobias</li>
<li>How did you get started with functional programming? - Tobias</li>
<li>What are the benefits of functional programming and when might someone want to use functional paradigms in their projects? - Tobias</li>
<li>What is it about functional programming that people find so intimidating and what do you think has led to its recent rise in popularity? - Tobias</li>
<li>What aspects of the Python language lend themselves to being used in a functional manner and where does it fall down? - Tobias</li>
<li>Can you each describe what your respective libraries provide in terms of functional capabilities and what their particular focus is? Are they distinct enough from each other that it would make sense to use them both in a single project? - Tobias</li>
<li>What inspired each of you to create your respective libraries? - Tobias</li>
<li>There is a functools module in the Python standard library that provides some methods that enable functional paradigms. Where does that module fall short and how do your respective libraries augment or replace the functionality in that module? - Tobias</li>
<li>There is also a library named fn.py which provides functional paradigms for use in Python. Can you each compare and contrast it with your own work? - Tobias</li>
<li>There are a number of concepts involved in functional programming such as currying, function composition, immutable data, and pure functions. Can you describe some of those concepts and then explain which of them you tried to incorporate into your libraries? - Tobias</li>
<li>What are some of the resources that you have found to be most helpful when trying to learn and apply functional principles to your programs? - Tobias</li>
</ul><h3>Keep In Touch</h3>
<ul><li>Alexander
<ul><li><a href="https://twitter.com/hackflow">Twitter</a></li>
<li><a href="http://hackflow.com">Blog</a></li>
</ul></li>
<li>Matthew
<ul><li><a href="http://matthewrocklin.com">Website</a></li>
<li><a href="http://toolz.readthedocs.org">Toolz</a></li>
<li><a href="https://twitter.com/mrocklin">Twitter</a></li>
<li><a href="https://github.com/mrocklin">GitHub</a></li>
</ul></li>
</ul><h3>Picks</h3>
<ul><li>Tobias
<ul><li><a href="https://www.datadoghq.com">DataDog</a></li>
</ul></li>
<li>Alexander
<ul><li><a href="http://www.syfy.com/theexpanse">The Expanse</a></li>
<li><a href="https://revolut.com/">Revolut</a></li>
</ul></li>
<li>Matthew
<ul><li><a href="http://riemann.io">Riemann</a></li>
<li><a href="http://www.fivedancesthemovie.com/">Five Dances</a></li>
<li><a href="http://distributed.readthedocs.org/en/latest/">Distributed</a></li>
</ul></li>
</ul><h3>Links</h3>
<ul><li><a href="http://rosettacode.org/wiki/Rosetta_Code">Rosetta Code</a></li>
<li><a href="http://toolz.readthedocs.org">PyToolz</a></li>
<li><a href="http://funcy.readthedocs.org/en/stable/">Funcy</a></li>
<li><a href="https://github.com/kachayev/fn.py">Fn.py</a></li>
<li><a href="https://github.com/lihaoyi/macropy">MacroPy</a></li>
<li><a href="https://github.com/llllllllll/codetransformer">Code Transformer</a></li>
<li><a href="http://www.infoq.com/presentations/Simple-Made-Easy">Simple Made Easy by Rich Hickey</a></li>
</ul><p>The intro and outro music is from Requiem for a Fish <a href="http://freemusicarchive.org/music/The_Freak_Fandango_Orchestra/">The Freak Fandango Orchestra</a>  / <a href="http://creativecommons.org/licenses/by-sa/3.0/">CC BY-SA</a></p>
]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/abw4vv/Episode46-FunctionalPython.mp3" length="94239852" type="audio/mpeg"/>
				<itunes:subtitle>Visit our site to listen to past episodes, support the show, join our community, and sign up for our mailing list.Summary
What is functional programming, why ...</itunes:subtitle>
		<itunes:summary>Visit our site to listen to past episodes, support the show, join our community, and sign up for our mailing list.Summary
What is functional programming, why would you want to use it, and how can you get started with it in Python? Our guests this week, Matthew Rocklin and Alexander Schepanovsky, help us understand all of that and more. Matthew and Alexander have each created their own Python libraries to make it easier to employ functional paradigms in your Python code. In this episode they help us understand the benefits that functional styles can have and the benefits that can be realized by trying them out for yourself.Brief IntroductionHello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.Subscribe on iTunes, Stitcher, TuneIn or RSSFollow us on Twitter or Google+Give us feedback! Leave a review on iTunes, Tweet to us, send us an email or leave us a message on Google+Join our community! Visit discourse.pythonpodcast.com for your opportunity to find out about upcoming guests, suggest questions, and propose show ideas.I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at pythonpodcast.comLinode is sponsoring us this week. Check them out at linode.com/podcastinit and get a $20 credit to try out their fast and reliable Linux virtual servers for your next projectI would also like to thank Hired, a job marketplace for developers and designers, for sponsoring this episode of Podcast.__init__. Use the link hired.com/podcastinit to double your signing bonus.Your host today is Tobias MaceyToday we are interviewing Matthew Rocklin and Alexander Schepanovski about their work on functional libraries for Python.
Use the promo code podcastinit20 to get a $20 credit when you sign up!

On Hired software engineers  designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our special link to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.Interview with Alexander and MatthewIntroductionsHow did you get introduced to Python? - ChrisCan you first explain what functional programming is and how it differs from the procedural or object oriented programming that most Pythonistas are familiar with? - TobiasHow did you get started with functional programming? - TobiasWhat are the benefits of functional programming and when might someone want to use functional paradigms in their projects? - TobiasWhat is it about functional programming that people find so intimidating and what do you think has led to its recent rise in popularity? - TobiasWhat aspects of the Python language lend themselves to being used in a functional manner and where does it fall down? - TobiasCan you each describe what your respective libraries provide in terms of functional capabilities and what their particular focus is? Are they distinct enough from each other that it would make sense to use them both in a single project? - TobiasWhat inspired each of you to create your respective libraries? - TobiasThere is a functools module in the Python standard library that provides some methods that enable functional paradigms. Where does that module fall short and how do your respective libraries augment or replace the functionality in that module? - TobiasThere is also a library named fn.py which provides functional paradigms for use in Python. Can you each compare </itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>00:18:49</itunes:duration>
		</item>
		<item>
		<title>Episode 45 - Cython with Craig Citro and Robert Bradshaw</title>
		<link>http://podcastinit.podbean.com/e/episode-45-cython-with-craig-citro-and-robert-bradshaw/</link>
		<comments>http://podcastinit.podbean.com/e/episode-45-cython-with-craig-citro-and-robert-bradshaw/#comments</comments>
		<pubDate>Fri, 19 Feb 2016 02:06:45 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Data Science</category>
	<category>Community</category>
	<category>Open Source</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-45-cython-with-craig-citro-and-robert-bradshaw/</guid>

		<description><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, join our <a href="https://discourse.pythonpodcast.com">community</a>, and sign up for our mailing list.</p>
<h3>Summary</h3>
<p>Do you find yourself reaching for a different language when you need some extra speed? With Cython you can get the best of both worlds by writing your code in Python and executing it as compiled code. In this episode we were joined by Craig Citro and Robert Bradshaw from the Cython project to discuss how and when you might want to incorporate it into your applications.</p>
<h3>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&#38;uo=6&#38;at=&#38;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&#38;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p72624%20%5B...%5D"></a></li></ul>]]></description>
			<content:encoded><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, join our <a href="https://discourse.pythonpodcast.com">community</a>, and sign up for our mailing list.</p>
<h3>Summary</h3>
<p>Do you find yourself reaching for a different language when you need some extra speed? With Cython you can get the best of both worlds by writing your code in Python and executing it as compiled code. In this episode we were joined by Craig Citro and Robert Bradshaw from the Cython project to discuss how and when you might want to incorporate it into your applications.</p>
<h3>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&amp;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p726240/#">TuneIn</a> or <a href="http://podcastinit.podbean.com/feed/">RSS</a></li>
<li>Follow us on <a href="https://twitter.com/Podcast__init__">Twitter</a> or <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>Give us feedback! Leave a review on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="https://twitter.com/Podcast__init__">Tweet</a> to us, send us an <a href="mailto:hosts@podcastinit.com">email</a> or leave us a message on <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>Join our community! Visit <a href="https://discourse.pythonpodcast.com">discourse.pythonpodcast.com</a> for your opportunity to find out about upcoming guests, suggest questions, and propose show ideas.</li>
<li>I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at <a href="http://pythonpodcast.com">pythonpodcast.com</a></li>
<li>Linode is sponsoring us this week. Check them out at <a href="http://linode.com/podcastinit">linode.com/podcastinit</a> and get a $20 credit to try out their fast and reliable Linux virtual servers for your next project</li>
<li>I would also like to thank Hired, a job marketplace for developers, for sponsoring this episode of Podcast.__init__. Use the link <a href="http://hired.com/podcastinit">hired.com/podcastinit</a> to double your signing bonus.</li>
<li>Your hosts as usual are Tobias Macey and Chris Patti</li>
<li>Today we are interviewing Craig Citro and Robert Bradshaw</li>
</ul><div class="well">
<a href="https://linode.com/podcastinit/?utm_source=podcastinit&amp;utm_medium=podcast&amp;utm_content=20%20dollar&amp;utm_campaign=podcastinit20"><img src="http://podcastinit.podbean.com/mf/web/tdegpr/linode-banner-sponsor-large.png" alt="Linode Sponsor Banner" /></a>
<p>Use the promo code <strong>podcastinit20</strong> to get a $20 credit when you sign up!</p>
</div>
<div class="well">
<a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit"><img src="http://podcastinit.podbean.com/mf/web/ehi957/hired-logo-dark-padding.png" alt="Hired Logo" /></a>
<p>
On Hired software engineers &amp; designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our <a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit">special link</a> to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.
</p>
</div>
<h3>Interview with Craig Citro and Robert Bradshaw</h3>
<ul><li>Introductions</li>
<li>How did you get introduced to Python? - Chris</li>
<li>What is Cython and how did the project get started? - Tobias</li>
<li>My understanding is that Cython can improve the performance of a Python program without even having to provide any type annotations. How does it manage to do that? - Tobias</li>
<li>Can a Cython module be used as a way to sidestep the GIL? What are some of the pitfalls that can be caused by doing so? - Tobias</li>
<li>Can you give some examples of how Cython can be used to improve the perfomance of Python programs? - Tobias</li>
<li>How does Cython work under the covers? - Tobias</li>
<li>What were some of the challenges during the creation of Cython and what design decisions were made to overcome them? - Tobias</li>
<li>Does Python’s cross platform nature create any unique challenges when compiling down to the C level? - Chris</li>
<li>What processor and system architectures does Cython support and are there plans to expand that support? - Tobias</li>
<li>How do generators and list comprehensions map to C, and did those higher level language constructs pose any special challenges in Cython’s design? - Chris</li>
<li>Would Rust ever be a potential compile target for performance and safety optimized modules? - Tobias</li>
</ul><h3>Keep In Touch</h3>
<ul><li>Craig
<ul><li><a href="https://twitter.com/craigcitro">Twitter</a></li>
<li><a href="https://github.com/craigcitro">GitHub</a></li>
<li><a href="http://www.craigcitro.org/">Website</a></li>
</ul></li>
<li>Robert
<ul><li><a href="mailto:robertwb@gmail.com">Email</a></li>
</ul></li>
</ul><h3>Picks</h3>
<ul><li>Tobias
<ul><li><a href="https://medium.com/mit-media-lab/certificates-reputation-and-the-blockchain-aee03622426f#.ctvv32ymo">Certificates, Reputation, and the Blockchain</a></li>
</ul></li>
<li>Craig
<ul><li><a href="http://amzn.to/1oNSmtc">Curious Kids Science Book</a> by Asia Citro</li>
<li><a href="https://github.com/hadley/dplyr">dplyr</a></li>
<li><a href="https://github.com/smbache/magrittr">magrittr</a></li>
<li><a href="http://amzn.to/1PUMYLE">Everything Is Obvious: How Common Sense Fails Us</a> by Duncan Watts</li>
</ul></li>
<li>Robert
<ul><li><a href="http://www.mowillems.com/">Mo Willems</a></li>
<li><a href="http://amzn.to/1Rbenvc">Philips Hue Lights</a></li>
<li><a href="http://cloud.sagemath.org/">Sage Math Cloud</a></li>
</ul></li>
</ul><h3>Links</h3>
<ul><li><a href="http://www.sagemath.org/">Sage</a> (Math)</li>
<li><a href="https://en.wikipedia.org/wiki/Pyrex_(programming_language">Pyrex</a>)</li>
</ul><p>The intro and outro music is from Requiem for a Fish <a href="http://freemusicarchive.org/music/The_Freak_Fandango_Orchestra/">The Freak Fandango Orchestra</a>  / <a href="http://creativecommons.org/licenses/by-sa/3.0/">CC BY-SA</a></p>
]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/i5nq22/Episode45-Cython.mp3" length="58083626" type="audio/mpeg"/>
				<itunes:subtitle>Visit our site to listen to past episodes, support the show, join our community, and sign up for our mailing list.

Summary

Do you find yourself reaching ...</itunes:subtitle>
		<itunes:summary>Visit our site to listen to past episodes, support the show, join our community, and sign up for our mailing list.

Summary

Do you find yourself reaching for a different language when you need some extra speed? With Cython you can get the best of both worlds by writing your code in Python and executing it as compiled code. In this episode we were joined by Craig Citro and Robert Bradshaw from the Cython project to discuss how and when you might want to incorporate it into your applications.

Brief Introduction

Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.
Subscribe on iTunes, Stitcher, TuneIn or RSS
Follow us on Twitter or Google+
Give us feedback! Leave a review on iTunes, Tweet to us, send us an email or leave us a message on Google+
Join our community! Visit discourse.pythonpodcast.com for your opportunity to find out about upcoming guests, suggest questions, and propose show ideas.
I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at pythonpodcast.com
Linode is sponsoring us this week. Check them out at linode.com/podcastinit and get a $20 credit to try out their fast and reliable Linux virtual servers for your next project
I would also like to thank Hired, a job marketplace for developers, for sponsoring this episode of Podcast.__init__. Use the link hired.com/podcastinit to double your signing bonus.
Your hosts as usual are Tobias Macey and Chris Patti
Today we are interviewing Craig Citro and Robert Bradshaw

Use the promo code podcastinit20 to get a $20 credit when you sign up!





On Hired software engineers  designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our special link to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.



Interview with Craig Citro and Robert Bradshaw

Introductions
How did you get introduced to Python? - Chris
What is Cython and how did the project get started? - Tobias
My understanding is that Cython can improve the performance of a Python program without even having to provide any type annotations. How does it manage to do that? - Tobias
Can a Cython module be used as a way to sidestep the GIL? What are some of the pitfalls that can be caused by doing so? - Tobias
Can you give some examples of how Cython can be used to improve the perfomance of Python programs? - Tobias
How does Cython work under the covers? - Tobias
What were some of the challenges during the creation of Cython and what design decisions were made to overcome them? - Tobias
Does Python's cross platform nature create any unique challenges when compiling down to the C level? - Chris
What processor and system architectures does Cython support and are there plans to expand that support? - Tobias
How do generators and list comprehensions map to C, and did those higher level language constructs pose any special challenges in Cython's design? - Chris
Would Rust ever be a potential compile target for performance and safety optimized modules? - Tobias
Keep In Touch

Craig
Twitter
GitHub
Website

Robert
Email

Picks

Tobias
Certificates, Reputation, and the Blockchain

Craig
Curious Kids Science Book by Asia Citro
dplyr
magrittr
Everything Is Obvious: How Common Sense Fails Us by Duncan Watts

Robert
Mo Willems
Philips Hue Lights
Sage Math Cloud

Links

Sage (Math)
Pyrex)
The intro and outro m</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>00:52:03</itunes:duration>
		</item>
		<item>
		<title>Episode 44 - Airflow with Maxime Beauchemin</title>
		<link>http://podcastinit.podbean.com/e/episode-44-airflow-with-maxime-beauchemin/</link>
		<comments>http://podcastinit.podbean.com/e/episode-44-airflow-with-maxime-beauchemin/#comments</comments>
		<pubDate>Sat, 13 Feb 2016 11:11:53 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Data Science</category>
	<category>Data Analysis</category>
	<category>Community</category>
	<category>Open Source</category>
	<category>Stream Processing</category>
	<category>Infrastructure</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-44-airflow-with-maxime-beauchemin/</guid>

		<description><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, join our <a href="https://discourse.pythonpodcast.com">community</a>, and sign up for our mailing list.</p>
<h3>Summary</h3>
<p>Are you struggling with trying to manage a series of related, interdependent batch jobs? Then you should check out <a href="https://github.com/airbnb/airflow">Airflow</a>. In this episode we spoke with the project’s creator Maxime Beauchemin about what inspired him to create it, how it works, and why you might want to use it. Airflow is a data pipeline management tool that will simplify how you build, deploy, and monitor your complex data processing tasks so that you can focus on getting the insights you need from your data.</p>
<h3>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425%20%5B...%5D"></a></li></ul>]]></description>
			<content:encoded><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, join our <a href="https://discourse.pythonpodcast.com">community</a>, and sign up for our mailing list.</p>
<h3>Summary</h3>
<p>Are you struggling with trying to manage a series of related, interdependent batch jobs? Then you should check out <a href="https://github.com/airbnb/airflow">Airflow</a>. In this episode we spoke with the project’s creator Maxime Beauchemin about what inspired him to create it, how it works, and why you might want to use it. Airflow is a data pipeline management tool that will simplify how you build, deploy, and monitor your complex data processing tasks so that you can focus on getting the insights you need from your data.</p>
<h3>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&amp;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p726240/#">TuneIn</a> or <a href="http://podcastinit.podbean.com/feed/">RSS</a></li>
<li>Follow us on <a href="https://twitter.com/Podcast__init__">Twitter</a> or <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>Give us feedback! Leave a review on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="https://twitter.com/Podcast__init__">Tweet</a> to us, send us an <a href="mailto:hosts@podcastinit.com">email</a> or leave us a message on <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>Join our community! Visit <a href="https://discourse.pythonpodcast.com">discourse.pythonpodcast.com</a> for your opportunity to find out about upcoming guests, suggest questions, and propose show ideas.</li>
<li>I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at <a href="http://pythonpodcast.com">pythonpodcast.com</a></li>
<li>Linode is sponsoring us this week. Check them out at <a href="https://linode.com/podcastinit/?utm_source=podcastinit&amp;utm_medium=podcast&amp;utm_content=20%20dollar&amp;utm_campaign=podcastinit20">linode.com/podcastinit</a> and get a $20 credit to try out their fast and reliable Linux virtual servers for your next project</li>
<li>I would also like to thank Hired, a job marketplace for developers and designers, for sponsoring this episode of Podcast.__init__. Use the link <a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit">hired.com/podcastinit</a> to double your signing bonus.</li>
<li>Your hosts as usual are Tobias Macey and Chris Patti</li>
<li>Today we are interviewing Maxime Beauchemin about his work on the Airflow project.</li>
</ul><div class="well">
<a href="https://linode.com/podcastinit/?utm_source=podcastinit&amp;utm_medium=podcast&amp;utm_content=20%20dollar&amp;utm_campaign=podcastinit20"><img src="http://podcastinit.podbean.com/mf/web/tdegpr/linode-banner-sponsor-large.png" alt="Linode Sponsor Banner" /></a>
<p>Use the promo code <strong>podcastinit20</strong> to get a $20 credit when you sign up!</p>
</div>
<div class="well">
<a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit"><img src="http://podcastinit.podbean.com/mf/web/ehi957/hired-logo-dark-padding.png" alt="Hired Logo" /></a>
<p>
On Hired software engineers &amp; designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our <a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit">special link</a> to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.
</p>
</div>
<h3>Interview with Maxime Beauchemin</h3>
<ul><li>Introductions</li>
<li>How did you get introduced to Python? - Chris</li>
<li>What is Airflow and what are some of the kinds of problems it can be used to solve? - Chris</li>
<li>What are some of the biggest challenges that you have seen when implementing a data pipeline with a workflow engine? - Tobias</li>
<li>What are some of the signs that a workflow engine is needed? - Tobias</li>
<li>Can you share some of the design and architecture of Airflow and how you arrived at those decisions? - Tobias</li>
<li>How does Airflow compare to other workflow management solutions, and why did you choose to write your own? - Chris</li>
<li>One of the features of Airflow that is emphasized in the documentation is the ability to dynamically generate pipelines. Can you describe how that works and why it is useful? - Tobias</li>
<li>For anyone who wants to get started with using Airflow, what are the infrastructure requirements? - Tobias</li>
<li>Airflow, like a number of the other tools in the space, support interoperability with Hadoop and its ecosystem. Can you elaborate on why JVM technologies have become so prevalent in the big data space and how Python fits into that overall problem domain? - Tobias</li>
<li>Airflow comes with a web UI for visualizing workflows, as do a few of the other Python workflow engines. Why is that an important feature for this kind of tool and what are some of the tasks and use cases that are supported in the Airflow web portal? - Tobias</li>
<li>One problem with data management is tracking the provenance of data as it is manipulated and shuttled between different systems. Does Airflow have any support for maintaining that kind of information and if not do you have recommendations for how practitioners can approach the issue? - Tobias</li>
<li>What other kinds of metadata can Airflow track as it executes tasks and what are some of the interesting uses you have seen or created for that information? - Tobias</li>
<li>With all the other languages competing for mindshare, what made you choose Python when you built Airflow? - Chris</li>
<li>I notice that Airflow supports Kerberos. It’s an incredibly capable security model but that comes at a high price in terms of complexity. What were the challenges and was it worth the additional implementation effort? - Chris</li>
<li>When does the data pipeline/workflow management paradigm break down and what other approaches or tools can be used in those cases? - Tobias</li>
<li>So, you wrote another tool recently called Panoramix. Can you describe what it is and maybe explain how it fits in the data management domain in relation to Airflow? - Tobias</li>
</ul><h3>Keep In Touch</h3>
<ul><li><a href="https://groups.google.com/forum/#!forum/airbnb_airflow">Google Group</a></li>
<li><a href="https://gitter.im/airbnb/airflow">Gitter</a></li>
<li><a href="https://github.com/airbnb/airflow">GitHub</a></li>
</ul><h3>Picks</h3>
<ul><li>Tobias
<ul><li><a href="http://www.anrdoezrs.net/jk122gv30v2IQROJQSOIKLMOLQMJIKNNQJSQJJJJJJ?url=http%3A%2F%2Fwww.thriftbooks.com%2Fw%2Fempire-of-the-east_fred-saberhagen%2F563595%2F%23isbn%3D0765307421&amp;cjsku=4537235">Empire of the East</a> by Fred Saberhagen</li>
<li><a href="http://www.anrdoezrs.net/f281nmvsmu9HIFAHJF9BCDFCHDA9BEEHAJHAAAAAA?url=http%3A%2F%2Fwww.thriftbooks.com%2Fw%2Fbook-of-swords-books-1-to-3_fred-saberhagen%2F308963%2F%23isbn%3D1568650094&amp;cjsku=1993429">The Book of Swords</a> by Fred Saberhagen</li>
</ul></li>
<li>Chris
<ul><li><a href="https://en.wikipedia.org/wiki/Buraka_Som_Sistema">Buraka Son Sistema</a></li>
<li><a href="http://originaltrilogy.com/topic/Harmys-STAR-WARS-Despecialized-Edition-HD-V25-MKV-IS-OUT-NOW/id/12713">Star Wars - Despecialized Edition</a></li>
<li><a href="http://www.anrdoezrs.net/links/7850795/type/dlg/http://www.thriftbooks.com/series/the-iron-druid-chronicles/38373">The Iron Druid Chronicles</a></li>
</ul></li>
<li>Maxime
<ul><li><a href="http://flask-appbuilder.readthedocs.org/en/latest/">Flask App Builder</a></li>
</ul></li>
</ul><p>The intro and outro music is from Requiem for a Fish <a href="http://freemusicarchive.org/music/The_Freak_Fandango_Orchestra/">The Freak Fandango Orchestra</a>  / <a href="http://creativecommons.org/licenses/by-sa/3.0/">CC BY-SA</a></p>
]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/y7u4bs/Episode44-AirflowwithMaximeBeauchemin.mp3" length="74751846" type="audio/mpeg"/>
				<itunes:subtitle>Visit our site to listen to past episodes, support the show, join our community, and sign up for our mailing list.

Summary

Are you struggling with trying ...</itunes:subtitle>
		<itunes:summary>Visit our site to listen to past episodes, support the show, join our community, and sign up for our mailing list.

Summary

Are you struggling with trying to manage a series of related, interdependent batch jobs? Then you should check out Airflow. In this episode we spoke with the project's creator Maxime Beauchemin about what inspired him to create it, how it works, and why you might want to use it. Airflow is a data pipeline management tool that will simplify how you build, deploy, and monitor your complex data processing tasks so that you can focus on getting the insights you need from your data.

Brief Introduction

Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.
Subscribe on iTunes, Stitcher, TuneIn or RSS
Follow us on Twitter or Google+
Give us feedback! Leave a review on iTunes, Tweet to us, send us an email or leave us a message on Google+
Join our community! Visit discourse.pythonpodcast.com for your opportunity to find out about upcoming guests, suggest questions, and propose show ideas.
I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at pythonpodcast.com
Linode is sponsoring us this week. Check them out at linode.com/podcastinit and get a $20 credit to try out their fast and reliable Linux virtual servers for your next project
I would also like to thank Hired, a job marketplace for developers and designers, for sponsoring this episode of Podcast.__init__. Use the link hired.com/podcastinit to double your signing bonus.
Your hosts as usual are Tobias Macey and Chris Patti
Today we are interviewing Maxime Beauchemin about his work on the Airflow project.

Use the promo code podcastinit20 to get a $20 credit when you sign up!





On Hired software engineers  designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our special link to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.



Interview with Maxime Beauchemin

Introductions
How did you get introduced to Python? - Chris
What is Airflow and what are some of the kinds of problems it can be used to solve? - Chris
What are some of the biggest challenges that you have seen when implementing a data pipeline with a workflow engine? - Tobias
What are some of the signs that a workflow engine is needed? - Tobias
Can you share some of the design and architecture of Airflow and how you arrived at those decisions? - Tobias
How does Airflow compare to other workflow management solutions, and why did you choose to write your own? - Chris
One of the features of Airflow that is emphasized in the documentation is the ability to dynamically generate pipelines. Can you describe how that works and why it is useful? - Tobias
For anyone who wants to get started with using Airflow, what are the infrastructure requirements? - Tobias
Airflow, like a number of the other tools in the space, support interoperability with Hadoop and its ecosystem. Can you elaborate on why JVM technologies have become so prevalent in the big data space and how Python fits into that overall problem domain? - Tobias
Airflow comes with a web UI for visualizing workflows, as do a few of the other Python workflow engines. Why is that an important feature for this kind of tool and what are some of the tasks and use cases that are supported in the Airflow web portal? - Tobias
One pr</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>01:03:18</itunes:duration>
		</item>
		<item>
		<title>Episode 43 - WSGI 2</title>
		<link>http://podcastinit.podbean.com/e/episode-43-wsgi-2/</link>
		<comments>http://podcastinit.podbean.com/e/episode-43-wsgi-2/#comments</comments>
		<pubDate>Sun, 07 Feb 2016 02:57:12 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Community</category>
	<category>Open Source</category>
	<category>Web</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-43-wsgi-2/</guid>

		<description><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, join our <a href="https://discourse.pythonpodcast.com">community</a>, and sign up for our mailing list.</p>
<h3>Summary</h3>
<p>The Web Server Gateway Interface, or WSGI for short, is a long-standing pillar of the Python ecosystem. It has enabled a vast number of web frameworks to proliferate by not having to worry about how exactly to interact with the HTTP protocol and focus instead on building a library that is robust, extensible, and easy to use. With recent evolutions to how we interact with the web, it appears that WSGI may be in need of an update and that is what our guests on this episode came to discuss. Cory Benfield is leading an effort to determine what if any modifications should be made to the WSGI standard or if it is time to retire it in favor of something new. Andrew Godwin has been hard at work building the Channels framework for Django to allow for interoperability [...]</p>]]></description>
			<content:encoded><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, join our <a href="https://discourse.pythonpodcast.com">community</a>, and sign up for our mailing list.</p>
<h3>Summary</h3>
<p>The Web Server Gateway Interface, or WSGI for short, is a long-standing pillar of the Python ecosystem. It has enabled a vast number of web frameworks to proliferate by not having to worry about how exactly to interact with the HTTP protocol and focus instead on building a library that is robust, extensible, and easy to use. With recent evolutions to how we interact with the web, it appears that WSGI may be in need of an update and that is what our guests on this episode came to discuss. Cory Benfield is leading an effort to determine what if any modifications should be made to the WSGI standard or if it is time to retire it in favor of something new. Andrew Godwin has been hard at work building the Channels framework for Django to allow for interoperability with websockets. They bring their unique perspectives to bear on how and why we may want to consider bringing WSGI into the current state of the web.</p>
<h3>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&amp;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p726240/#">TuneIn</a> or <a href="http://podcastinit.podbean.com/feed/">RSS</a></li>
<li>Follow us on <a href="https://twitter.com/Podcast__init__">Twitter</a> or <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>Give us feedback! Leave a review on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="https://twitter.com/Podcast__init__">Tweet</a> to us, send us an <a href="mailto:hosts@podcastinit.com">email</a> or leave us a message on <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>Join our community! Visit <a href="https://discourse.pythonpodcast.com">discourse.pythonpodcast.com</a> for your opportunity to find out about upcoming guests, suggest questions, and propose show ideas.</li>
<li>I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at <a href="http://pythonpodcast.com">pythonpodcast.com</a></li>
<li>Linode is sponsoring us this week. Check them out at <a href="http://linode.com/podcastinit">linode.com/podcastinit</a> and get a $20 credit to try out their fast and reliable Linux virtual servers for your next project</li>
<li>I would also like to thank Hired, a job marketplace for developers, for sponsoring this episode of Podcast.__init__. Use the link <a href="http://hired.com/podcastinit">hired.com/podcastinit</a> to double your signing bonus.</li>
<li>Your hosts as usual are Tobias Macey and Chris Patti</li>
<li>Today we are interviewing Cory Benfield and Andrew Godwin about a proposed update to the WSGI specification.</li>
</ul><div class="well">
<a href="https://linode.com/podcastinit/?utm_source=podcastinit&amp;utm_medium=podcast&amp;utm_content=20%20dollar&amp;utm_campaign=podcastinit20"><img src="http://podcastinit.podbean.com/mf/web/tdegpr/linode-banner-sponsor-large.png" alt="Linode Sponsor Banner" /></a>
<p>Use the promo code <strong>podcastinit20</strong> to get a $20 credit when you sign up!</p>
</div>
<div class="well">
<a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit"><img src="http://podcastinit.podbean.com/mf/web/ehi957/hired-logo-dark-padding.png" alt="Hired Logo" /></a>
<p>
On Hired software engineers &amp; designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our <a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit">special link</a> to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.
</p>
</div>
<h3>Interview with Cory Benfield and Andrew Godwin</h3>
<ul><li>Introductions</li>
<li>How did you get introduced to Python? - Chris</li>
<li>First off, what is WSGI? - Tobias</li>
<li>What are some of the ways the current WSGI spec has fallen out of step with the needs of the modern developer? - Chris</li>
<li>How did you come to be involved with the new WSGI specification? What brought you into this process? - Chris</li>
<li>Do you think the WSGI name itself brings a lot of expectation, or is it good to keep it as a well-recognised Python landmark? - Tobias</li>
<li>Would it be better to make a clean break and implement an entirely new set of APIs and style of interaction? - Tobias</li>
<li>What kind of compatibility guarantees should be made between the current spec and the proposed upgrade? What would the impact be if the new specification was incompatible? - Tobias</li>
<li>How has the response been to your call for comments? What are some of the most frequently raised concerns or suggestions? - Tobias</li>
<li>What are some of the proposed changes to the specification? - Tobias</li>
<li>Are there any future directions you think WSGI should take that perhaps haven’t been considered yet? - Chris</li>
<li>Has your opinion or vision of the proposed update changed as you reviewed responses to the conversation on the mailing list? - Tobias</li>
<li>Do you have any ideas of how to design the new specification in order to avoid a similar situation of needing to deprecate the current standards in order to accomodate new web protocols? - Tobias</li>
<li>What are some of the points of contention or rigorous debate that have kept previous WSGI 2 attempts from succeeding? - Chris</li>
</ul><h3>Keep In Touch</h3>
<ul><li>Andrew
<ul><li><a href="https://twitter.com/andrewgodwin">Twitter</a></li>
<li><a href="https://github.com/andrewgodwin">GitHub</a></li>
</ul></li>
<li>Cory
<ul><li><a href="lukasaoz">Twitter</a></li>
<li><a href="lukasa">GitHub</a></li>
</ul></li>
</ul><h3>Picks</h3>
<ul><li>Tobias
<ul><li><a href="http://www.discourse.org/">Discourse</a></li>
</ul></li>
<li>Chris
<ul><li><a href="http://www.syfy.com/theexpanse">The Expanse</a></li>
<li><a href="https://itunes.apple.com/us/app/puerto-rico-hd/id438437326?mt%3D8">Puerto Rico for IOS</a></li>
<li><a href="https://itunes.apple.com/us/app/dominion/id948405722?mt%3D8">Dominion for IOS</a></li>
<li><a href="https://itunes.apple.com/us/app/splendor/id971215921?mt%3D8">Splendor for IOS</a></li>
</ul></li>
<li>Cory
<ul><li><a href="http://www.wusthof.com/usa/index.jsp">Wusthof Knives</a></li>
<li><a href="https://en.wikipedia.org/wiki/Australian_rules_football">Australian Football</a></li>
<li><a href="https://xcom.com/agegate/">XCOM 2</a></li>
</ul></li>
<li>Andrew
<ul><li><a href="https://en.wikipedia.org/wiki/Archery">Archery</a></li>
<li><a href="https://en.wikipedia.org/wiki/Troms%C3%B8">Tromsø Norway</a></li>
</ul></li>
</ul><p>The intro and outro music is from Requiem for a Fish <a href="http://freemusicarchive.org/music/The_Freak_Fandango_Orchestra/">The Freak Fandango Orchestra</a>  / <a href="http://creativecommons.org/licenses/by-sa/3.0/">CC BY-SA</a></p>
]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/gpmdf7/Episode43-WSGI2.mp3" length="72868831" type="audio/mpeg"/>
				<itunes:subtitle>Visit our site to listen to past episodes, support the show, join our community, and sign up for our mailing list.

Summary

The Web Server Gateway Interface, ...</itunes:subtitle>
		<itunes:summary>Visit our site to listen to past episodes, support the show, join our community, and sign up for our mailing list.

Summary

The Web Server Gateway Interface, or WSGI for short, is a long-standing pillar of the Python ecosystem. It has enabled a vast number of web frameworks to proliferate by not having to worry about how exactly to interact with the HTTP protocol and focus instead on building a library that is robust, extensible, and easy to use. With recent evolutions to how we interact with the web, it appears that WSGI may be in need of an update and that is what our guests on this episode came to discuss. Cory Benfield is leading an effort to determine what if any modifications should be made to the WSGI standard or if it is time to retire it in favor of something new. Andrew Godwin has been hard at work building the Channels framework for Django to allow for interoperability with websockets. They bring their unique perspectives to bear on how and why we may want to consider bringing WSGI into the current state of the web.

Brief Introduction

Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.
Subscribe on iTunes, Stitcher, TuneIn or RSS
Follow us on Twitter or Google+
Give us feedback! Leave a review on iTunes, Tweet to us, send us an email or leave us a message on Google+
Join our community! Visit discourse.pythonpodcast.com for your opportunity to find out about upcoming guests, suggest questions, and propose show ideas.
I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at pythonpodcast.com
Linode is sponsoring us this week. Check them out at linode.com/podcastinit and get a $20 credit to try out their fast and reliable Linux virtual servers for your next project
I would also like to thank Hired, a job marketplace for developers, for sponsoring this episode of Podcast.__init__. Use the link hired.com/podcastinit to double your signing bonus.
Your hosts as usual are Tobias Macey and Chris Patti
Today we are interviewing Cory Benfield and Andrew Godwin about a proposed update to the WSGI specification.

Use the promo code podcastinit20 to get a $20 credit when you sign up!





On Hired software engineers  designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our special link to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.



Interview with Cory Benfield and Andrew Godwin

Introductions
How did you get introduced to Python? - Chris
First off, what is WSGI? - Tobias
What are some of the ways the current WSGI spec has fallen out of step with the needs of the modern developer? - Chris
How did you come to be involved with the new WSGI specification? What brought you into this process? - Chris
Do you think the WSGI name itself brings a lot of expectation, or is it good to keep it as a well-recognised Python landmark? - Tobias
Would it be better to make a clean break and implement an entirely new set of APIs and style of interaction? - Tobias
What kind of compatibility guarantees should be made between the current spec and the proposed upgrade? What would the impact be if the new specification was incompatible? - Tobias
How has the response been to your call for comments? What are some of the most frequently raised concerns or suggestions? - Tobias
What are some of the proposed changes to the </itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>01:04:47</itunes:duration>
		</item>
		<item>
		<title>Episode 42 - SymPy With Aaron Meurer</title>
		<link>http://podcastinit.podbean.com/e/episode-42-sympy-with-aaron-meurer/</link>
		<comments>http://podcastinit.podbean.com/e/episode-42-sympy-with-aaron-meurer/#comments</comments>
		<pubDate>Sun, 31 Jan 2016 14:02:03 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Learning</category>
	<category>Data Analysis</category>
	<category>Open Source</category>
	<category>Science</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-42-sympy-with-aaron-meurer/</guid>

		<description><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, join our <a href="https://discourse.pythonpodcast.com">community</a>, and sign up for our mailing list.</p>
<h3>Summary</h3>
<p>Looking for an open source alternative to Mathematica or MatLab for solving algebraic equations? Look no further than the excellent SymPy project. It is a well built and easy to use Computer Algebra System (CAS) and in this episode we spoke with the current project maintainer Aaron Meurer about its capabilities and when you might want to use it.</p>
<h3>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&#38;uo=6&#38;at=&#38;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&#38;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p726240/#">TuneIn</a> or <a></a></li></ul>]]></description>
			<content:encoded><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, join our <a href="https://discourse.pythonpodcast.com">community</a>, and sign up for our mailing list.</p>
<h3>Summary</h3>
<p>Looking for an open source alternative to Mathematica or MatLab for solving algebraic equations? Look no further than the excellent SymPy project. It is a well built and easy to use Computer Algebra System (CAS) and in this episode we spoke with the current project maintainer Aaron Meurer about its capabilities and when you might want to use it.</p>
<h3>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&amp;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p726240/#">TuneIn</a> or <a href="http://podcastinit.podbean.com/feed/">RSS</a></li>
<li>Follow us on <a href="https://twitter.com/Podcast__init__">Twitter</a> or <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>Give us feedback! Leave a review on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="https://twitter.com/Podcast__init__">Tweet</a> to us, send us an <a href="mailto:hosts@podcastinit.com">email</a> or leave us a message on <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>Join our community at <a href="https://discouse.pythonpodcast.com">discourse.pythonpodcast.com</a> to follow up with the guests and help us make the show better!</li>
<li>
nn</li>
<li>I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at <a href="http://pythonpodcast.com">pythonpodcast.com</a></li>
<li>Linode is sponsoring us this week. Check them out at <a href="http://linode.com/podcastinit">linode.com/podcastinit</a> and get a $20 credit to try out their fast and reliable Linux virtual servers for your next project</li>
<li>I would also like to thank Hired, a job marketplace for developers, for sponsoring this episode of Podcast.__init__. Use the link <a href="http://hired.com/podcastinit">hired.com/podcastinit</a> and double your signing bonus to $4,000.</li>
<li>We are recording today on January 18th, 2016 and your hosts as usual are Tobias Macey and Chris Patti</li>
<li>Today we are interviewing Aaron Meurer about SymPy</li>
</ul><div class="well">
<a href="https://linode.com/podcastinit/?utm_source=podcastinit&amp;utm_medium=podcast&amp;utm_content=20%20dollar&amp;utm_campaign=podcastinit20"><img src="http://podcastinit.podbean.com/mf/web/tdegpr/linode-banner-sponsor-large.png" alt="Linode Sponsor Banner" /></a>
<p>Use the promo code <strong>podcastinit20</strong> to get a $20 credit when you sign up!</p>
</div>
<div class="well">
<a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit"><img src="http://podcastinit.podbean.com/mf/web/ehi957/hired-logo-dark-padding.png" alt="Hired Logo" /></a>
<p>
On Hired software engineers &amp; designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our <a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit">special link</a> to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.
</p>
</div>
<h3>Interview with Aaron Meurer</h3>
<ul><li>Introductions</li>
<li>How did you get introduced to Python? - Chris</li>
<li>What is Sympy and what kinds of problems does it aim to solve? - Chris</li>
<li>How did the SymPy project get started? - Tobias</li>
<li>How did you get started with the SymPy project? - Chris</li>
<li>Are there any limits to the complexity of the equations SymPy can model and solve? - Chris</li>
<li>How does SymPy compare to similar projects in other languages? - Tobias</li>
<li>How does Sympy render results using such beautiful mathematical symbols when the inputs are simple ASCII? - Chris</li>
<li>What are some of the challenges in creating documentation for a project like SymPy that is accessible to non-experts while still having the necessary information for professionals in the fields of mathematics? - Tobias</li>
<li>Which fields of academia and business seem to be most heavily represented in the users of SymPy? - Tobias</li>
<li>What are some of the uses of Sympy in education outside of the obvious like students checking their homework? - Chris</li>
<li>How does SymPy integrate with the Jupyter Notebook? - Chris</li>
<li>Is SymPy generally used more as an interactive mathematics environment or as a library integrated within a larger application? - Tobias</li>
<li>What were the challenges moving SymPy from Python 2 to Python 3? - Chris</li>
<li>Are there features of Python 3 that simplify your work on SymPy or that make it possible to add new features that would have been too difficult previously? - Tobias</li>
<li>Were there any performance bottlenecks you needed to overcome in creating Sympy? - Chris</li>
<li>What are some of the interesting design or implementation challenges you’ve found when creating and maintaining SymPy? - Chris</li>
<li>Are there any new features or major updates to SymPy that are planned? - Tobias</li>
<li>How is the evolution of SymPy managed from a feature perspective? Have there been any occasions in recent memory where a pull request had to be rejected because it didn’t fit with the vision for the project? - Tobias</li>
<li>Which of the features of SymPy do you find yourself using most often? - Tobias</li>
</ul><h3>Picks</h3>
<ul><li>Tobias
<ul><li><a href="https://www.functionalgeekery.com/">Functional Geekery</a></li>
<li><a href="https://nekrogoblikon.bandcamp.com/">Nekrogoblikon</a>
<ul><li><a href="http://amzn.to/1NhqdyO">Heavy Meta</a></li>
</ul></li>
<li><a href="http://amzn.to/1T082Fe">Marble Fun Run</a></li>
</ul></li>
<li>Chris
<ul><li><a href="https://gimletmedia.com/show/surprisingly-awesome/">Surprisingly Awesome</a></li>
<li><a href="http://topdocumentaryfilms.com/all-watched-over-by-machines-of-loving-grace/">All Watched Over by Machines of Loving Grace</a></li>
<li><a href="https://en.wikipedia.org/wiki/Pizzicato_Five">Pizzicato 5</a></li>
<li><a href="https://untappd.com/b/mayflower-brewing-company-cooper-s-series-brown-ale/1356335">Mayflower Hoppy Brown Ale</a></li>
</ul></li>
<li>Aaron
<ul><li><a href="http://fermatslibrary.com/">Fermat’s Library</a></li>
<li><a href="https://github.com/asmeurer/catimg">catimg</a></li>
<li><a href="https://www.iterm2.com/">iTerm2</a></li>
</ul></li>
</ul><h3>Keep In Touch</h3>
<ul><li><a href="https://twitter.com/asmeurer">Twitter</a></li>
<li><a href="https://groups.google.com/forum/#!forum/sympy">Mailing List</a></li>
<li><a href="https://gitter.im/sympy/sympy">Gitter Channel</a></li>
</ul><h3>Links</h3>
<ul><li><a href="https://projecteuler.net/">Project Euler</a></li>
<li><a href="https://en.wikipedia.org/wiki/Richardson%27s_theorem">Richardson’s Theorem</a></li>
<li><a href="http://www.kqzyfj.com/56102p-85-7NVWTOVXTNPPQUOPXWNPSSWQXQQOXOOO?url=http%3A%2F%2Fshop.oreilly.com%2Fproduct%2F9781593276409.do%3Fcmp%3Daf-na-books-videos-product_cj_9781593276409_%2525zp&amp;cjsku=9781593276409">Doing Math With Python</a> by Amit Saha (and <a href="https://asmeurer.github.io/blog/posts/doing-math-with-python-by-amit-saha-book-review/">Aaron’s book review</a>)</li>
</ul><p>The intro and outro music is from Requiem for a Fish <a href="http://freemusicarchive.org/music/The_Freak_Fandango_Orchestra/">The Freak Fandango Orchestra</a>  / <a href="http://creativecommons.org/licenses/by-sa/3.0/">CC BY-SA</a></p>
]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/gc6dq9/Episode42-AaronMeureronSymPy.mp3" length="72610847" type="audio/mpeg"/>
				<itunes:subtitle>Visit our site to listen to past episodes, support the show, join our community, and sign up for our mailing list.

Summary

Looking for an open source ...</itunes:subtitle>
		<itunes:summary>Visit our site to listen to past episodes, support the show, join our community, and sign up for our mailing list.

Summary

Looking for an open source alternative to Mathematica or MatLab for solving algebraic equations? Look no further than the excellent SymPy project. It is a well built and easy to use Computer Algebra System (CAS) and in this episode we spoke with the current project maintainer Aaron Meurer about its capabilities and when you might want to use it.

Brief Introduction

Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.
Subscribe on iTunes, Stitcher, TuneIn or RSS
Follow us on Twitter or Google+
Give us feedback! Leave a review on iTunes, Tweet to us, send us an email or leave us a message on Google+
Join our community at discourse.pythonpodcast.com to follow up with the guests and help us make the show better!
nnI would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at pythonpodcast.com
Linode is sponsoring us this week. Check them out at linode.com/podcastinit and get a $20 credit to try out their fast and reliable Linux virtual servers for your next project
I would also like to thank Hired, a job marketplace for developers, for sponsoring this episode of Podcast.__init__. Use the link hired.com/podcastinit and double your signing bonus to $4,000.
We are recording today on January 18th, 2016 and your hosts as usual are Tobias Macey and Chris Patti
Today we are interviewing Aaron Meurer about SymPy

Use the promo code podcastinit20 to get a $20 credit when you sign up!





On Hired software engineers  designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our special link to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.



Interview with Aaron Meurer

Introductions
How did you get introduced to Python? - Chris
What is Sympy and what kinds of problems does it aim to solve? - Chris
How did the SymPy project get started? - Tobias
How did you get started with the SymPy project? - Chris
Are there any limits to the complexity of the equations SymPy can model and solve? - Chris
How does SymPy compare to similar projects in other languages? - Tobias
How does Sympy render results using such beautiful mathematical symbols when the inputs are simple ASCII? - Chris
What are some of the challenges in creating documentation for a project like SymPy that is accessible to non-experts while still having the necessary information for professionals in the fields of mathematics? - Tobias
Which fields of academia and business seem to be most heavily represented in the users of SymPy? - Tobias
What are some of the uses of Sympy in education outside of the obvious like students checking their homework? - Chris
How does SymPy integrate with the Jupyter Notebook? - Chris
Is SymPy generally used more as an interactive mathematics environment or as a library integrated within a larger application? - Tobias
What were the challenges moving SymPy from Python 2 to Python 3? - Chris
Are there features of Python 3 that simplify your work on SymPy or that make it possible to add new features that would have been too difficult previously? - Tobias
Were there any performance bottlenecks you needed to overcome in creating Sympy? - Chris
What are some of the interesting design or implementation challenges you've foun</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>01:03:07</itunes:duration>
		</item>
		<item>
		<title>Episode 41 - RPython with Maciej Fijalkowski</title>
		<link>http://podcastinit.podbean.com/e/episode-41-rpython-with-maciej-fijalkowski/</link>
		<comments>http://podcastinit.podbean.com/e/episode-41-rpython-with-maciej-fijalkowski/#comments</comments>
		<pubDate>Fri, 22 Jan 2016 18:32:17 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Open Source</category>
	<category>Concurrency</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-41-rpython-with-maciej-fijalkowski/</guid>

		<description><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, join our <a href="https://discourse.pythonpodcast.com">community</a>, and sign up for our mailing list.</p>
<h3>Summary</h3>
<p>RPython is a subset of Python that is used for writing high performance interpreters for dynamic languages. The most well-known product of this tooling is the PyPy interpreter. In this episode we had the pleasure of speaking with Maciej Fijalkowski about what RPython is, what it isn’t, what kinds of projects it has been used for, and what makes it so interesting.</p>
<h3>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&#38;uo=6&#38;at=&#38;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&#38;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p72624%20%5B...%5D"></a></li></ul>]]></description>
			<content:encoded><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, join our <a href="https://discourse.pythonpodcast.com">community</a>, and sign up for our mailing list.</p>
<h3>Summary</h3>
<p>RPython is a subset of Python that is used for writing high performance interpreters for dynamic languages. The most well-known product of this tooling is the PyPy interpreter. In this episode we had the pleasure of speaking with Maciej Fijalkowski about what RPython is, what it isn’t, what kinds of projects it has been used for, and what makes it so interesting.</p>
<h3>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&amp;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p726240/#">TuneIn</a> or <a href="http://podcastinit.podbean.com/feed/">RSS</a></li>
<li>Follow us on <a href="https://twitter.com/Podcast__init__">Twitter</a> or <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>Give us feedback! Leave a review on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="https://twitter.com/Podcast__init__">Tweet</a> to us, send us an <a href="mailto:hosts@podcastinit.com">email</a> or leave us a message on <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>Join our community! Visit <a href="https://discourse.pythonpodcast.com">discourse.pythonpodcast.com</a> for your opportunity to find out about upcoming guests, suggest questions, and propose show ideas.</li>
<li>I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at <a href="http://pythonpodcast.com">pythonpodcast.com</a></li>
<li>Linode is sponsoring us this week. Check them out at <a href="http://linode.com/podcastinit">linode.com/podcastinit</a> and get a $20 credit to try out their fast and reliable Linux virtual servers for your next project</li>
<li>I would also like to thank Hired, a job marketplace for developers, for sponsoring this episode of Podcast.__init__. Use the link <a href="http://hired.com/podcastinit">hired.com/podcastinit</a> to double your signing bonus.</li>
<li>We are recording today on December 17th, 2015 and your hosts as usual are Tobias Macey and Chris Patti</li>
<li>Today we are interviewing Maciej Fijalkowski on RPython</li>
</ul><div class="well">
<a href="http://linode.com/podcastinit"><img src="http://podcastinit.podbean.com/mf/web/tdegpr/linode-banner-sponsor-large.png" alt="Linode Sponsor Banner" /></a>
<p>Use the promo code <strong>podcastinit20</strong> to get a $20 credit when you sign up!</p>
</div>
<div class="well">
<a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit"><img src="http://podcastinit.podbean.com/mf/web/ehi957/hired-logo-dark-padding.png" alt="Hired Logo" /></a>
<p>
On Hired software engineers &amp; designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our <a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit">special link</a> to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.
</p>
</div>
<h3>Interview with Maciej Fijalkowski</h3>
<ul><li>Introductions</li>
<li>How did you get introduced to Python? - Chris</li>
<li>What is RPython and how does it differ from CPython? - Tobias</li>
<li>Can you share some of the history of RPython in terms of the major improvements and design choices? - Tobias</li>
<li>In the documentation it says that RPython is able to generate a Just In Time compiler for dynamic languages. Can you explain why that is significant and some of the ways that it does that? - Tobias</li>
<li>The most well-known use of RPython is the PyPy interpreter for Python. Can you share some of the other languages that have been ported to the RPython runtime and how their performance has been improved or altered in the process? - Tobias</li>
<li>Are there any languages that have been designed entirely for use with RPython, rather than translating an existing language to run on it? - Tobias</li>
<li>Do you know of any cases where an application has been written to run directly on RPython? - Tobias</li>
<li>What are the computer architecture and operating system platforms that RPython supports and do you have any plans to expand that support? - Tobias</li>
<li>Are there any minimum hardware specifications that are necessary to be able to effectively run a language written against the RPython platform? - Tobias</li>
<li>Is RPython similar in concept to other efforts like Parrot in the Perl world? - Chris</li>
<li>Are there any particular areas of the project that you need help with and how can people get involved with the project? - Tobias</li>
</ul><h3>Picks</h3>
<ul><li>Tobias
<ul><li><a href="http://us4.campaign-archive2.com/?u=9735795484d2e4c204da82a29&amp;id=22fde1c28d&amp;e=b0190ae72d">PyCoders 2015 Recap</a></li>
<li><a href="http://amzn.to/1TPJNaY">Shape Up</a></li>
<li><a href="http://amzn.to/1TPJVY5">Xbox One</a></li>
<li><a href="http://amzn.to/1IYVyLN">Xbox One Kinect</a></li>
<li><a href="http://amzn.to/1IYVBHt">Selfless</a></li>
</ul></li>
<li>Chris
<ul><li><a href="http://skunkbear.tumblr.com/">Skunk Bear</a></li>
<li><a href="https://en.wikipedia.org/wiki/6_Nimmt!">Category 6</a></li>
<li><a href="https://en.wikipedia.org/wiki/Environments_(album_series">Environments</a>)</li>
</ul></li>
<li>Maciej
<ul><li><a href="https://za.pycon.org/">PyCon South Africa</a></li>
</ul></li>
</ul><h3>Keep In Touch</h3>
<ul><li><a href="https://botbot.me/freenode/pypy/">IRC</a></li>
<li><a href="https://mail.python.org/mailman/listinfo/pypy-dev">Mailing List</a></li>
<li><a href="http://baroquesoftware.com/">PyPy consultancy</a></li>
</ul><h3>Links</h3>
<ul><li><a href="http://psyco.sourceforge.net/">Psyco</a> (Python JIT)</li>
<li><a href="https://bitbucket.org/ssllab/zippy">Truffle</a></li>
<li><a href="http://hippyvm.com/">HippyVM</a></li>
<li><a href="https://github.com/topazproject/topaz">Topaz</a></li>
<li><a href="https://github.com/samth/pycket">Pycket</a></li>
<li><a href="http://www.sparkslabs.com/pyxie/">Pyxie-lang</a></li>
</ul><p>The intro and outro music is from Requiem for a Fish <a href="http://freemusicarchive.org/music/The_Freak_Fandango_Orchestra/">The Freak Fandango Orchestra</a>  / <a href="http://creativecommons.org/licenses/by-sa/3.0/">CC BY-SA</a></p>
]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/pfuyhv/Episode41-MaciejFijalkowskionRPython.mp3" length="40069253" type="audio/mpeg"/>
				<itunes:subtitle>Visit our site to listen to past episodes, support the show, join our community, and sign up for our mailing list.

Summary

RPython is a subset of ...</itunes:subtitle>
		<itunes:summary>Visit our site to listen to past episodes, support the show, join our community, and sign up for our mailing list.

Summary

RPython is a subset of Python that is used for writing high performance interpreters for dynamic languages. The most well-known product of this tooling is the PyPy interpreter. In this episode we had the pleasure of speaking with Maciej Fijalkowski about what RPython is, what it isn't, what kinds of projects it has been used for, and what makes it so interesting.

Brief Introduction

Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.
Subscribe on iTunes, Stitcher, TuneIn or RSS
Follow us on Twitter or Google+
Give us feedback! Leave a review on iTunes, Tweet to us, send us an email or leave us a message on Google+
Join our community! Visit discourse.pythonpodcast.com for your opportunity to find out about upcoming guests, suggest questions, and propose show ideas.
I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at pythonpodcast.com
Linode is sponsoring us this week. Check them out at linode.com/podcastinit and get a $20 credit to try out their fast and reliable Linux virtual servers for your next project
I would also like to thank Hired, a job marketplace for developers, for sponsoring this episode of Podcast.__init__. Use the link hired.com/podcastinit to double your signing bonus.
We are recording today on December 17th, 2015 and your hosts as usual are Tobias Macey and Chris Patti
Today we are interviewing Maciej Fijalkowski on RPython

Use the promo code podcastinit20 to get a $20 credit when you sign up!





On Hired software engineers  designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our special link to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.



Interview with Maciej Fijalkowski

Introductions
How did you get introduced to Python? - Chris
What is RPython and how does it differ from CPython? - Tobias
Can you share some of the history of RPython in terms of the major improvements and design choices? - Tobias
In the documentation it says that RPython is able to generate a Just In Time compiler for dynamic languages. Can you explain why that is significant and some of the ways that it does that? - Tobias
The most well-known use of RPython is the PyPy interpreter for Python. Can you share some of the other languages that have been ported to the RPython runtime and how their performance has been improved or altered in the process? - Tobias
Are there any languages that have been designed entirely for use with RPython, rather than translating an existing language to run on it? - Tobias
Do you know of any cases where an application has been written to run directly on RPython? - Tobias
What are the computer architecture and operating system platforms that RPython supports and do you have any plans to expand that support? - Tobias
Are there any minimum hardware specifications that are necessary to be able to effectively run a language written against the RPython platform? - Tobias
Is RPython similar in concept to other efforts like Parrot in the Perl world? - Chris
Are there any particular areas of the project that you need help with and how can people get involved with the project? - Tobias
Picks

Tobias
PyCoders 2015 Recap
Shape Up
Xbox One
Xbox One Kinect
Self</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>00:35:35</itunes:duration>
		</item>
		<item>
		<title>Episode 40 - Ben Darnell on Tornado</title>
		<link>http://podcastinit.podbean.com/e/episode-40-ben-darnell-on-tornado/</link>
		<comments>http://podcastinit.podbean.com/e/episode-40-ben-darnell-on-tornado/#comments</comments>
		<pubDate>Sat, 16 Jan 2016 20:34:08 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Open Source</category>
	<category>Concurrency</category>
	<category>Web</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-40-ben-darnell-on-tornado/</guid>

		<description><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, join our <a href="https://discourse.pythonpodcast.com">Discourse community</a>, and sign up for our mailing list.</p>
<h3>Summary</h3>
<p>If you are trying to build a web application in Python that can scale to a high number of concurrent users, or you want to leverage the power of websockets, then Tornado just may be the library you need. In this episode we interview Ben Darnell about his work as the maintainer of the Tornado project and how it can be used in a number of ways to power your next high traffic site.</p>
<h3>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&#38;uo=6&#38;at=&#38;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&#38;refid=stpr">Stitcher</a>, <a href=""></a></li></ul>]]></description>
			<content:encoded><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, join our <a href="https://discourse.pythonpodcast.com">Discourse community</a>, and sign up for our mailing list.</p>
<h3>Summary</h3>
<p>If you are trying to build a web application in Python that can scale to a high number of concurrent users, or you want to leverage the power of websockets, then Tornado just may be the library you need. In this episode we interview Ben Darnell about his work as the maintainer of the Tornado project and how it can be used in a number of ways to power your next high traffic site.</p>
<h3>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&amp;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p726240/#">TuneIn</a> or <a href="http://podcastinit.podbean.com/feed/">RSS</a></li>
<li>Follow us on <a href="https://twitter.com/Podcast__init__">Twitter</a> or <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>Give us feedback! Leave a review on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="https://twitter.com/Podcast__init__">Tweet</a> to us, send us an <a href="mailto:hosts@podcastinit.com">email</a> or leave us a message on <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>We are also running a listener survey to get feedback about the show. You can find it at <a href="http://bit.do/podcastinit-survey">bit.do/podcastinit-survey</a>.</li>
<li>I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at <a href="http://pythonpodcast.com">pythonpodcast.com</a></li>
<li>Linode is sponsoring us this week. Check them out at <a href="http://linode.com/podcastinit">linode.com/podcastinit</a> and get a $20 credit to try out their fast and reliable Linux virtual servers for your next project</li>
<li>I would also like to thank Hired, a job marketplace for developers and designers, for sponsoring this episode of Podcast.__init__. Use the link <a href="http://hired.com/podcastinit">hired.com/podcastinit</a> to double your signing bonus to $4,000.</li>
<li>Your hosts as usual are Tobias Macey and Chris Patti</li>
<li>We recently launched a new Discourse forum for the show which you can find at <a href="https://discourse.pythonpodcast.com">discourse.pythonpodcast.com</a>. Join us to discuss the show, the episodes, and ideas for future interviews.</li>
<li>Today we are interviewing Ben Darnell about his work on Tornado</li>
</ul><div class="well">
<a href="http://linode.com/podcastinit"><img src="http://podcastinit.podbean.com/mf/web/tdegpr/linode-banner-sponsor-large.png" alt="Linode Sponsor Banner" /></a>
<p>Use the promo code <strong>podcastinit20</strong> to get a $20 credit when you sign up!</p>
</div>
<div class="well">
<a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit"><img src="http://podcastinit.podbean.com/mf/web/ehi957/hired-logo-dark-padding.png" alt="Hired Logo" /></a>
<p>
On Hired software engineers &amp; designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our <a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit">special link</a> to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.
</p>
</div>
<h3>Interview with Ben Darnell</h3>
<ul><li>Introductions</li>
<li>How did you get introduced to Python? - Chris</li>
<li>What is Tornado and what sets it apart from other HTTP servers? - Chris</li>
<li>How did you get involved with Tornado? - Ben</li>
<li>What was the inspiration for the name? - Tobias</li>
<li>Tornado was created before the recent focus on asynchronous applications. What prompted that design choice and when might someone care about using async in their development? - Tobias</li>
<li>What is involved in creating an event loop and what are some of the specific design decisions that you made when implementing one for Tornado? - Tobias</li>
<li>How does Tornado’s event loop compare to other packages such as Twisted or the asyncio module in the standard library? - Tobias</li>
<li>The web module appears to provide a minimal framework for developing web apps. How scalable are those capabilities and is there a recommended architecture for people using Tornado to develop web applications? - Tobias</li>
<li>What are some use cases in which a developer might choose Tornado over other similar options? - Chris</li>
<li>Could you please give our listeners an overview of Tornado’s concurrency options including coroutines? - Chris</li>
<li>I see that Tornado supports interoperability with the WSGI protocol and one of the use cases mentioned is for running a Django application alongside a Tornado app. Is that a common way for providing websocket capabilities alongside an existing web app? - Tobias</li>
<li>I noticed that Tornado provides non-blocking versions of bare sockets and TCP connections. Are there any add-on packages available to simplify the use of various network protocols along the lines of what Twisted includes? - Tobias</li>
<li>Please tell us about the transition of Tornado to Python 3. What obstacles did you face and how did you overcome them? - Chris</li>
<li>Based on your issue tracker it looks like http2 support is definitely on the roadmap. Could you please detail your future plans in this area? - Chris</li>
<li>What are some of the common “gotcha’s” for people who are just starting to use Tornado? - Tobias</li>
</ul><h3>Picks</h3>
<ul><li>Tobias
<ul><li><a href="http://amzn.to/1O1Tq4F">Adventures of Riley</a></li>
<li><a href="http://amzn.to/1O1TuS5">Dayworld Trilogy</a> by Philip José Farmer</li>
</ul></li>
<li>Chris
<ul><li><a href="https://en.wikipedia.org/wiki/Sense8">Sense8</a></li>
<li><a href="http://amzn.to/1RWGobg">Habits of a Happy Brain</a></li>
<li><a href="https://www.ethereum.org/">Ethereum</a></li>
</ul></li>
<li>Ben
<ul><li><a href="http://thememorypalace.us/">The Memory Palace</a></li>
<li><a href="https://newsblur.com/">Newsblur</a></li>
</ul></li>
</ul><h3>Keep In Touch</h3>
<ul><li><a href="https://groups.google.com/forum/#!forum/python-tornado">Mailing List</a></li>
</ul><h3>Links</h3>
<ul><li><a href="https://motor.readthedocs.org/en/stable/">Motor</a></li>
</ul><p>The intro and outro music is from Requiem for a Fish <a href="http://freemusicarchive.org/music/The_Freak_Fandango_Orchestra/">The Freak Fandango Orchestra</a>  / <a href="http://creativecommons.org/licenses/by-sa/3.0/">CC BY-SA</a></p>
]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/8rgken/Episode40-BenDarnellonTornado.mp3" length="56736830" type="audio/mpeg"/>
				<itunes:subtitle>Visit our site to listen to past episodes, support the show, join our Discourse community, and sign up for our mailing list.

Summary

If you are trying ...</itunes:subtitle>
		<itunes:summary>Visit our site to listen to past episodes, support the show, join our Discourse community, and sign up for our mailing list.

Summary

If you are trying to build a web application in Python that can scale to a high number of concurrent users, or you want to leverage the power of websockets, then Tornado just may be the library you need. In this episode we interview Ben Darnell about his work as the maintainer of the Tornado project and how it can be used in a number of ways to power your next high traffic site.

Brief Introduction

Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.
Subscribe on iTunes, Stitcher, TuneIn or RSS
Follow us on Twitter or Google+
Give us feedback! Leave a review on iTunes, Tweet to us, send us an email or leave us a message on Google+
We are also running a listener survey to get feedback about the show. You can find it at bit.do/podcastinit-survey.
I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at pythonpodcast.com
Linode is sponsoring us this week. Check them out at linode.com/podcastinit and get a $20 credit to try out their fast and reliable Linux virtual servers for your next project
I would also like to thank Hired, a job marketplace for developers and designers, for sponsoring this episode of Podcast.__init__. Use the link hired.com/podcastinit to double your signing bonus to $4,000.
Your hosts as usual are Tobias Macey and Chris Patti
We recently launched a new Discourse forum for the show which you can find at discourse.pythonpodcast.com. Join us to discuss the show, the episodes, and ideas for future interviews.
Today we are interviewing Ben Darnell about his work on Tornado

Use the promo code podcastinit20 to get a $20 credit when you sign up!





On Hired software engineers  designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our special link to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.



Interview with Ben Darnell

Introductions
How did you get introduced to Python? - Chris
What is Tornado and what sets it apart from other HTTP servers? - Chris
How did you get involved with Tornado? - Ben
What was the inspiration for the name? - Tobias
Tornado was created before the recent focus on asynchronous applications. What prompted that design choice and when might someone care about using async in their development? - Tobias
What is involved in creating an event loop and what are some of the specific design decisions that you made when implementing one for Tornado? - Tobias
How does Tornado's event loop compare to other packages such as Twisted or the asyncio module in the standard library? - Tobias
The web module appears to provide a minimal framework for developing web apps. How scalable are those capabilities and is there a recommended architecture for people using Tornado to develop web applications? - Tobias
What are some use cases in which a developer might choose Tornado over other similar options? - Chris
Could you please give our listeners an overview of Tornado's concurrency options including coroutines? - Chris
I see that Tornado supports interoperability with the WSGI protocol and one of the use cases mentioned is for running a Django application alongside a Tornado app. Is that a common way for providing websocket capabilities alongside an</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>01:06:28</itunes:duration>
		</item>
		<item>
		<title>Episode 39 - Yves Hilpisch on Quantitative Finance</title>
		<link>http://podcastinit.podbean.com/e/episode-39-yves-hilpisch-on-quantitative-finance/</link>
		<comments>http://podcastinit.podbean.com/e/episode-39-yves-hilpisch-on-quantitative-finance/#comments</comments>
		<pubDate>Fri, 08 Jan 2016 16:08:50 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Data Science</category>
	<category>Data Analysis</category>
	<category>Data Visualization</category>
	<category>Open Source</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-39-yves-hilpisch-on-quantitative-finance/</guid>

		<description><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, join our community Discourse, support the show, and sign up for our mailing list.</p>
<h3>Summary</h3>
<p>Yves Hilpisch is a founder of The Python Quants, a consultancy that offers services in the space of quantitative financial analysis. In addition, they have created open source libraries to help with that analysis. In this episode we spoke with him about what quantitative finance is, how Python is used in that domain, and what kinds of knowledge are necessary to do these kinds of analysis.</p>
<h3>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&#38;uo=6&#38;at=&#38;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&#38;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p726240/#">TuneIn</a> or &#60; [...]</li></ul>]]></description>
			<content:encoded><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, join our community Discourse, support the show, and sign up for our mailing list.</p>
<h3>Summary</h3>
<p>Yves Hilpisch is a founder of The Python Quants, a consultancy that offers services in the space of quantitative financial analysis. In addition, they have created open source libraries to help with that analysis. In this episode we spoke with him about what quantitative finance is, how Python is used in that domain, and what kinds of knowledge are necessary to do these kinds of analysis.</p>
<h3>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&amp;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p726240/#">TuneIn</a> or <a href="http://podcastinit.podbean.com/feed/">RSS</a></li>
<li>Follow us on <a href="https://twitter.com/Podcast__init__">Twitter</a> or <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>Give us feedback! Leave a review on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="https://twitter.com/Podcast__init__">Tweet</a> to us, send us an <a href="mailto:hosts@podcastinit.com">email</a> or leave us a message on <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at <a href="http://pythonpodcast.com">pythonpodcast.com</a></li>
<li>I would also like to thank Hired, a job marketplace for developers, for sponsoring this episode of Podcast.__init__. Use the link <a href="http://hired.com/podcastinit">hired.com/podcastinit</a> to double your signing bonus to $4,000.</li>
<li>We are recording today on December 30th, 2015 and your hosts as usual are Tobias Macey and Chris Patti</li>
<li>Today we are interviewing Yves Hilpisch about Quantitative Finance</li>
</ul><div class="well">
<a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit"><img src="http://podcastinit.podbean.com/mf/web/ehi957/hired-logo-dark-padding.png" alt="Hired Logo" /></a>
<p>
On Hired software engineers &amp; designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our <a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit">special link</a> to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.
</p>
</div>
<h3>Interview with Yves Hilpisch</h3>
<ul><li>Introductions</li>
<li>How did you get introduced to Python? - Chris</li>
<li>Can you explain what Quantitative Finance is? - Tobias</li>
<li>How common is it for Python to be used in an investment bank or hedge fund? - Tobias</li>
<li>What factors contribute to the choice of whether or not to use Python in a Quantitative Finance role? - Tobias</li>
<li>Are there any performance bottle necks or other considerations inherent in using Python for quantitative finance? - Chris</li>
<li>What kind of background is necessary for getting started in Quantitative Finance? - Tobias</li>
<li>What kinds of libraries or algorithms in Python are useful for the day-to-day work of a quant? - Tobias</li>
<li>Is Python actually used to enact the trades? What protocols, APis, and libraries are used in this process? - Chris</li>
<li>Could you please walk us through how a simple analysis using DXAnalytics might work? - Chris</li>
<li>You work for a company called ‘<a href="http://tpq.io">The Python Quants</a>‘. What kinds of services do you provide and what kinds of organizations typically hire you? - Tobias</li>
</ul><h3>Picks</h3>
<ul><li>Tobias
<ul><li><a href="http://amzn.to/1JJvnn4">Kraken</a> by China Miéville</li>
<li><a href="http://amzn.to/1JJvy1Q">Heroes in Training series</a></li>
<li><a href="http://amzn.to/1JJvDTb">Olympians Graphic Novels</a></li>
<li><a href="http://dataelixir.com/">Data Elixir Newsletter</a></li>
</ul></li>
<li>Chris
<ul><li><a href="http://hillfarmstead.com/ancestral-series/">Hill Farmstead - Edward</a></li>
<li><a href="http://longtrail.com/beers/culmination">Long Trail - Brush &amp; Barrel Series - Culmination Chocolate Porter</a></li>
<li><a href="http://longtrail.com/beers/spaaaaaace-juice">Long Trail - Spaaaaaace Juice Double IPA</a></li>
<li><a href="https://flask-restless.readthedocs.org/en/latest/">Flask-RESTLess</a></li>
</ul></li>
<li>Yves
<ul><li><a href="http://amzn.to/1TpRsN5">The Willpower Instinct</a></li>
<li><a href="http://amzn.to/1JJvXRX">The Way of the Seal</a></li>
<li><a href="http://amzn.to/1TpRwfE">Sapiens: A Brief History of Humankind</a></li>
<li><a href="http://www.anrdoezrs.net/5f108tenkem19A634571334823BA1366A4B442B222?url=http%3A%2F%2Fshop.oreilly.com%2Fproduct%2F9781783288458.do%3Fcmp%3Daf-na-books-videos-product_cj_9781783288465_%2525zp&amp;cjsku=9781783288458">Python High Performance Computing</a></li>
</ul></li>
</ul><h3>Keep In Touch</h3>
<ul><li><a href="https://twitter.com/dyjh">Twitter</a></li>
<li><a href="http://hilpisch.com">Website</a></li>
</ul><h3>Links</h3>
<ul><li><a href="https://www.quandl.com/">Quandl</a></li>
<li><a href="http://finance.yahoo.com/market-overview/">Yahoo Finance Market Data</a></li>
<li><a href="http://www.ravenpack.com/">Ravenpack</a></li>
<li><a href="http://dx-analytics.com">DX Analytics</a></li>
<li><a href="http://datapark.io/">DataPark.io</a></li>
<li><a href="http://www.anrdoezrs.net/hh104gv30v2IQROJQSOIKKLPJKSRIKNNRLSLLJSJJJ?url=http%3A%2F%2Fshop.oreilly.com%2Fproduct%2F0636920032441.do%3Fcmp%3Daf-strata-books-videos-product_cj_9781491945278_%2525zp&amp;cjsku=9781491945278">Python for Finance</a></li>
<li><a href="http://www.wiley.com/WileyCDA/WileyTitle/productCd-1119037999.html">Derivatives Analytics With Python</a></li>
<li><a href="http://fpq.io/">Python Quants Conference</a></li>
<li><a href="http://osqf.tpq.io/">Open Source for Quant Finance</a></li>
</ul><p>The intro and outro music is from Requiem for a Fish <a href="http://freemusicarchive.org/music/The_Freak_Fandango_Orchestra/">The Freak Fandango Orchestra</a>  / <a href="http://creativecommons.org/licenses/by-sa/3.0/">CC BY-SA</a></p>
]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/u8a6c7/Episode39-YvesHilpischonQuantitativeFinance.mp3" length="55876045" type="audio/mpeg"/>
				<itunes:subtitle>Visit our site to listen to past episodes, join our community Discourse, support the show, and sign up for our mailing list.

Summary

Yves Hilpisch is a ...</itunes:subtitle>
		<itunes:summary>Visit our site to listen to past episodes, join our community Discourse, support the show, and sign up for our mailing list.

Summary

Yves Hilpisch is a founder of The Python Quants, a consultancy that offers services in the space of quantitative financial analysis. In addition, they have created open source libraries to help with that analysis. In this episode we spoke with him about what quantitative finance is, how Python is used in that domain, and what kinds of knowledge are necessary to do these kinds of analysis.

Brief Introduction

Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.
Subscribe on iTunes, Stitcher, TuneIn or RSS
Follow us on Twitter or Google+
Give us feedback! Leave a review on iTunes, Tweet to us, send us an email or leave us a message on Google+
I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at pythonpodcast.com
I would also like to thank Hired, a job marketplace for developers, for sponsoring this episode of Podcast.__init__. Use the link hired.com/podcastinit to double your signing bonus to $4,000.
We are recording today on December 30th, 2015 and your hosts as usual are Tobias Macey and Chris Patti
Today we are interviewing Yves Hilpisch about Quantitative Finance



On Hired software engineers  designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our special link to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.



Interview with Yves Hilpisch

Introductions
How did you get introduced to Python? - Chris
Can you explain what Quantitative Finance is? - Tobias
How common is it for Python to be used in an investment bank or hedge fund? - Tobias
What factors contribute to the choice of whether or not to use Python in a Quantitative Finance role? - Tobias
Are there any performance bottle necks or other considerations inherent in using Python for quantitative finance? - Chris
What kind of background is necessary for getting started in Quantitative Finance? - Tobias
What kinds of libraries or algorithms in Python are useful for the day-to-day work of a quant? - Tobias
Is Python actually used to enact the trades? What protocols, APis, and libraries are used in this process? - Chris
Could you please walk us through how a simple analysis using DXAnalytics might work? - Chris
You work for a company called 'The Python Quants'. What kinds of services do you provide and what kinds of organizations typically hire you? - Tobias
Picks

Tobias
Kraken by China Miéville
Heroes in Training series
Olympians Graphic Novels
Data Elixir Newsletter

Chris
Hill Farmstead - Edward
Long Trail - Brush  Barrel Series - Culmination Chocolate Porter
Long Trail - Spaaaaaace Juice Double IPA
Flask-RESTLess

Yves
The Willpower Instinct
The Way of the Seal
Sapiens: A Brief History of Humankind
Python High Performance Computing

Keep In Touch

Twitter
Website
Links

Quandl
Yahoo Finance Market Data
Ravenpack
DX Analytics
DataPark.io
Python for Finance
Derivatives Analytics With Python
Python Quants Conference
Open Source for Quant Finance
The intro and outro music is from Requiem for a Fish The Freak Fandango Orchestra  / CC BY-SA</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>01:10:31</itunes:duration>
		</item>
		<item>
		<title>Episode 38 - Scott Sanderson on Algorithmic Trading</title>
		<link>http://podcastinit.podbean.com/e/episode-38-scott-sanderson-on-algorithmic-trading/</link>
		<comments>http://podcastinit.podbean.com/e/episode-38-scott-sanderson-on-algorithmic-trading/#comments</comments>
		<pubDate>Sun, 03 Jan 2016 16:00:42 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Python</category>
	<category>Learning</category>
	<category>Data Science</category>
	<category>Data Analysis</category>
	<category>Data Visualization</category>
	<category>Open Source</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-38-scott-sanderson-on-algorithmic-trading/</guid>

		<description><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, and sign up for our mailing list.</p>
<h3>Summary</h3>
<p>Because of its easy learning curve and broad extensibility Python has found its way into the realm of algorithmic trading at <a href="https://www.quantopian.com/">Quantopian</a>. In this episode we spoke with Scott Sanderson about what algorithmic trading is, how it differs from high frequency trading, and how they leverage Python for empowering everyone to try their hand at it.</p>
<h3>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&#38;uo=6&#38;at=&#38;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&#38;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p726240/#">TuneIn</a> or <a href="http://podcastinit.podbean.com/fe%20%5B...%5D"></a></li></ul>]]></description>
			<content:encoded><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, and sign up for our mailing list.</p>
<h3>Summary</h3>
<p>Because of its easy learning curve and broad extensibility Python has found its way into the realm of algorithmic trading at <a href="https://www.quantopian.com/">Quantopian</a>. In this episode we spoke with Scott Sanderson about what algorithmic trading is, how it differs from high frequency trading, and how they leverage Python for empowering everyone to try their hand at it.</p>
<h3>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&amp;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p726240/#">TuneIn</a> or <a href="http://podcastinit.podbean.com/feed/">RSS</a></li>
<li>Follow us on <a href="https://twitter.com/Podcast__init__">Twitter</a> or <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>Give us feedback! Leave a review on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="https://twitter.com/Podcast__init__">Tweet</a> to us, send us an <a href="mailto:hosts@podcastinit.com">email</a> or leave us a message on <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at <a href="http://pythonpodcast.com">pythonpodcast.com</a></li>
<li>We are recording today on December 16th, 2015 and your hosts as usual are Tobias Macey and Chris Patti</li>
<li>Today we are interviewing Scott Sanderson on Algorithmic Trading</li>
</ul><h3>Interview with Scott Sanderson</h3>
<ul><li>Introductions</li>
<li>How did you get introduced to Python? - Chris</li>
<li>Can you explain what algorithmic trading is and how it differs from high frequency trading? - Tobias</li>
<li>What kinds of algorithms and libraries are commonly leveraged for algorithmic trading? - Tobias</li>
<li>Quantopian aims to make algorithmic trading accessible to everyone. What do people need to know in order to get started? Is it necessary to have a background in mathematics or data analysis? - Tobias</li>
<li>Does the Quantopian platform build in any safe guards to prevent user’s algorithms from spiraling out of control and creating or contributing to a market crash? - Chris</li>
<li>How is Python used within Quantopian and when do you leverage other languages? - Tobias</li>
<li>What Pypi packages does Quantopian leverage in its platform? - Chris</li>
<li>How do the financial returns compare between algorithmic vs human trading on the stock market? - Tobias</li>
<li>Can you speak about any trends you see in the trading algorithms people are creating for the Quantopian platform? - Chris</li>
</ul><h3>Picks</h3>
<ul><li>Tobias
<ul><li><a href="http://amzn.to/1m8PZzF">Kinetic Sand</a></li>
<li><a href="http://www.trivium.org/#">Trivium</a></li>
<li><a href="http://www.thriftbooks.com/share/?code=UEsuqagAMz2wULIVOi2s%252fQ%253d%253d">Thrift Books</a></li>
</ul></li>
<li>Chris
<ul><li><a href="http://asherv.com/threes/">Threes</a></li>
<li><a href="https://en.wikipedia.org/wiki/Jessica_Jones_(TV_series">Jessica Jones</a>)</li>
<li><a href="https://serialpodcast.org/">Serial</a></li>
</ul></li>
<li>Scott
<ul><li><a href="http://www.dota2.com">Dota 2</a></li>
<li><a href="https://en.wikipedia.org/wiki/Philosophical_Investigation">Philosophical Investigations</a></li>
<li><a href="http://www.logicomix.com/en/index.html">Logicomix</a></li>
<li><a href="http://amzn.to/1VySAiL">Infinite Jest</a></li>
</ul></li>
</ul><h3>Keep In Touch</h3>
<ul><li><a href="https://twitter.com/scottbsanderson">Twitter</a></li>
<li><a href="mailto:scott@quantopian.com">Email</a></li>
<li><a href="https://github.com/ssanderson">GitHub</a></li>
</ul><h3>Links</h3>
<ul><li><a href="https://github.com/quantopian/qgrid">QGrid</a></li>
<li><a href="https://github.com/mleibman/SlickGrid">SlickGrid</a></li>
<li><a href="https://github.com/jupyter/jupyterhub">Jupyter Hub</a></li>
<li><a href="http://lighttable.com/">Light Table</a></li>
<li><a href="https://codemirror.net/">CodeMirror</a></li>
<li><a href="http://cython.org/">Cython</a></li>
<li><a href="https://www.youtube.com/watch?v=8XlDvGYhlr8">PyData NYC Talk by Scott</a></li>
<li><a href="http://blaze.readthedocs.org/en/latest/index.html">Blaze</a></li>
<li><a href="http://dask.readthedocs.org/en/latest/">Dask</a></li>
<li><a href="http://deeplearning.net/software/theano/">Theano</a></li>
<li><a href="https://www.tensorflow.org/">TensorFlow</a></li>
<li><a href="https://github.com/quantopian/zipline">Zipline</a></li>
<li><a href="http://quantopian.github.io/pyfolio/">Pyfolio</a></li>
<li><a href="https://github.com/quantopian/pgcontents">PGContents</a></li>
<li><a href="http://www.sqlalchemy.org/">SQLAlchemy</a></li>
<li><a href="http://www.gevent.org/">Gevent</a></li>
<li><a href="https://www.quantopian.com/lectures">quantopian.com/lectures</a></li>
</ul><p>The intro and outro music is from Requiem for a Fish <a href="http://freemusicarchive.org/music/The_Freak_Fandango_Orchestra/">The Freak Fandango Orchestra</a>  / <a href="http://creativecommons.org/licenses/by-sa/3.0/">CC BY-SA</a></p>
]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/6aq9gk/Episode38-ScottSandersononAlgorithmicTrading.mp3" length="119987908" type="audio/mpeg"/>
				<itunes:subtitle>Visit our site to listen to past episodes, support the show, and sign up for our mailing list.

Summary

Because of its easy learning curve and broad ...</itunes:subtitle>
		<itunes:summary>Visit our site to listen to past episodes, support the show, and sign up for our mailing list.

Summary

Because of its easy learning curve and broad extensibility Python has found its way into the realm of algorithmic trading at Quantopian. In this episode we spoke with Scott Sanderson about what algorithmic trading is, how it differs from high frequency trading, and how they leverage Python for empowering everyone to try their hand at it.

Brief Introduction

Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.
Subscribe on iTunes, Stitcher, TuneIn or RSS
Follow us on Twitter or Google+
Give us feedback! Leave a review on iTunes, Tweet to us, send us an email or leave us a message on Google+
I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at pythonpodcast.com
We are recording today on December 16th, 2015 and your hosts as usual are Tobias Macey and Chris Patti
Today we are interviewing Scott Sanderson on Algorithmic Trading
Interview with Scott Sanderson

Introductions
How did you get introduced to Python? - Chris
Can you explain what algorithmic trading is and how it differs from high frequency trading? - Tobias
What kinds of algorithms and libraries are commonly leveraged for algorithmic trading? - Tobias
Quantopian aims to make algorithmic trading accessible to everyone. What do people need to know in order to get started? Is it necessary to have a background in mathematics or data analysis? - Tobias
Does the Quantopian platform build in any safe guards to prevent user's algorithms from spiraling out of control and creating or contributing to a market crash? - Chris
How is Python used within Quantopian and when do you leverage other languages? - Tobias
What Pypi packages does Quantopian leverage in its platform? - Chris
How do the financial returns compare between algorithmic vs human trading on the stock market? - Tobias
Can you speak about any trends you see in the trading algorithms people are creating for the Quantopian platform? - Chris
Picks

Tobias
Kinetic Sand
Trivium
Thrift Books

Chris
Threes
Jessica Jones)
Serial

Scott
Dota 2
Philosophical Investigations
Logicomix
Infinite Jest

Keep In Touch

Twitter
Email
GitHub
Links

QGrid
SlickGrid
Jupyter Hub
Light Table
CodeMirror
Cython
PyData NYC Talk by Scott
Blaze
Dask
Theano
TensorFlow
Zipline
Pyfolio
PGContents
SQLAlchemy
Gevent
quantopian.com/lectures
The intro and outro music is from Requiem for a Fish The Freak Fandango Orchestra  / CC BY-SA</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>01:27:54</itunes:duration>
		</item>
		<item>
		<title>Episode 37 - The PEP Talk</title>
		<link>http://podcastinit.podbean.com/e/episode-37-the-pep-talk/</link>
		<comments>http://podcastinit.podbean.com/e/episode-37-the-pep-talk/#comments</comments>
		<pubDate>Sun, 27 Dec 2015 02:08:38 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Community</category>
	<category>Open Source</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-37-the-pep-talk/</guid>

		<description><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, and sign up for our mailing list.</p>
<h3>Summary</h3>
<p>The Python language is built by and for its community. In order to add a new feature, change the specification, or create a new policy the first step is to submit a proposal for consideration. Those proposals are called PEPs, or Python Enhancement Proposals. In this episode we had the great pleasure of speaking with three of the people who act as stewards for this process to learn more about how it got started, how it works, and what impacts it has had.</p>
<h3>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&#38;uo=6&#38;at=&#38;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&#38;refid=stpr">Stitcher</a>, <a href="http://tunein.com/emb%20%5B...%5D"></a></li></ul>]]></description>
			<content:encoded><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, and sign up for our mailing list.</p>
<h3>Summary</h3>
<p>The Python language is built by and for its community. In order to add a new feature, change the specification, or create a new policy the first step is to submit a proposal for consideration. Those proposals are called PEPs, or Python Enhancement Proposals. In this episode we had the great pleasure of speaking with three of the people who act as stewards for this process to learn more about how it got started, how it works, and what impacts it has had.</p>
<h3>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&amp;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p726240/#">TuneIn</a> or <a href="http://podcastinit.podbean.com/feed/">RSS</a></li>
<li>Follow us on <a href="https://twitter.com/Podcast__init__">Twitter</a> or <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>Give us feedback! Leave a review on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="https://twitter.com/Podcast__init__">Tweet</a> to us, send us an <a href="mailto:hosts@podcastinit.com">email</a> or leave us a message on <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at <a href="http://pythonpodcast.com">pythonpodcast.com</a></li>
<li>This episode is sponsored by Zato - Microservices, ESB, SOA, REST, API, and Cloud Integrations in Python. Visitzato.io to learn more about how to integrate smarter in the modern world.</li>
<li>I would also like to thank Hired, a job marketplace for developers, for sponsoring this episode of Podcast.__init__. Use the link <a href="http://hired.com/podcastinit">hired.com/podcastinit</a> to double your signing bonus.</li>
<li>Searching for Pythonistas with Disabilities</li>
<li>We are recording today on December 7th, 2015 and your hosts as usual are Tobias Macey and Chris Patti</li>
<li>Today we are interviewing some of the PEP editors</li>
</ul><div class="well">
<a href="https://zato.io/docs?podcast-init"><img src="http://podcastinit.podbean.com/mf/web/t3dbs5/zato-logo.png" alt="Zato Logo" style="float:left;margin-right:20px;margin-bottom:20px;" /></a>
<p>
Zato is a modern, Python powered platform for integrating all of your data. Check it out today and tell them thank you for being a sponsor of Podcast.__init__ - <a href="https://zato.io/docs?podcast-init">zato.io</a>
</p>
</div>
<div class="well" style="clear:both;">
<a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit"><img src="http://podcastinit.podbean.com/mf/web/ehi957/hired-logo-dark-padding.png" alt="Hired Logo" style="float:left;margin-right:20px;" /></a>
<p>
On Hired software engineers &amp; designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our <a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit">special link</a> to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.
</p>
</div>
<h3 style="clear:both;">Interview with PEP editors</h3>
<ul><li>Introductions</li>
<li>How did you get introduced to Python? - Chris</li>
<li>For anyone who isn’t familiar with them, can you explain what a PEP is and how they influence the Python language? - Tobias</li>
<li>What are the requirements for a PEP to be considered for approval and what does the overall process look like to get it finalized? - Tobias</li>
<li>How has the PEP process evolved to meet challenges posed by changes in the Python community? - Chris</li>
<li>How many reviewers are there and how did each of you end up in that role? Is there a set number of editors that must be maintained and if so how did you arrive at that number? - Tobias</li>
<li>What mistakes have other communities made when creating similar processes, and how has PEP learned from those mistakes? - Chris</li>
<li>There are different categories for PEPs. Can you describe what those are and how you arrived at that ontology? - Tobias</li>
<li>Is there any significance to the numbering system used for identifying different PEPs? - Tobias</li>
<li>How does the PEP process maintain its sense of humor (e.g. PEP 20) while being sure to be taken seriously where it really counts? - Chris</li>
<li>Along the lines of humorous PEPs, can you share the story of PEP 401? - Tobias</li>
<li>How does the PEP process strive to prevent an undesirable level of control by any one company or other special interest group? - Chris</li>
<li>How much control does Guido have over the PEP process? Has a PEP ever directly countered Guido’s wishes? How did it turn out? - Chris</li>
<li>What is your favorite PEP and why? - Tobias
<ul><li>Barry: <a href="https://www.python.org/dev/peps/pep-0020/">PEP 20</a></li>
<li>Chris: <a href="https://www.python.org/dev/peps/pep-0479/">PEP 479</a></li>
<li>David: <a href="https://www.python.org/dev/peps/pep-0020/">PEP 20</a></li>
</ul></li>
<li>What, in your opinion, has been the most important or far-reaching PEP, whether it was approved or not? - Tobias
<ul><li>David: <a href="https://www.python.org/dev/peps/pep-0020/">PEP 20</a></li>
<li>Chris: <a href="https://www.python.org/dev/peps/pep-0466/">PEP 466</a></li>
<li>Barry: <a href="https://www.python.org/dev/peps/pep-0008/">PEP 8</a></li>
</ul></li>
<li>What was the strangest / most extreme PEP proposal you’ve ever seen? - Chris
<ul><li>Chris: PEP <a href="https://www.python.org/dev/peps/pep-0501/">501</a></li>
<li>Barry: PEP <a href="https://www.python.org/dev/peps/pep-0507/">507</a></li>
<li>David: PEP <a href="https://www.python.org/dev/peps/pep-0666/">666</a></li>
</ul></li>
</ul><h3>Picks</h3>
<ul><li>Tobias
<ul><li><a href="http://wagtail.io">Wagtail CMS</a></li>
<li><a href="http://amzn.to/1PSBoVX">Inside Out</a></li>
<li><a href="http://www.cbc.ca/radio/spark">Spark Podcast</a></li>
<li><a href="http://www.openculture.com/2015/12/steve-martin-writes-a-hymn-for-hymn-less-atheists.html">Hymn for Atheists</a></li>
</ul></li>
<li>Chris
<ul><li><a href="http://www.imdb.com/title/tt3203606/">Trumbo</a></li>
<li><a href="https://www.youtube.com/playlist?list=SPdNh1e1kmiPP4YApJm8ENK2yMlwF1_edq">Kivy Crash Course</a></li>
<li><a href="http://jihadology.net/">Jihadology Podcast</a></li>
</ul></li>
<li>Barry
<ul><li><a href="https://testrun.org/tox/latest">Tox</a></li>
<li><a href="http://nose2.readthedocs.org/en/latest/">Nose2</a></li>
<li><a href="http://www.imdb.com/title/tt2357547/?ref_=nv_sr_1">Jessica Jones</a></li>
<li><a href="http://www.thegreatcourses.com/courses/joy-of-science.html">The Joy of Science</a></li>
</ul></li>
<li>Chris
<ul><li><a href="http://git-man-page-generator.lokaltog.net/">The Git Manpage Generator</a></li>
<li><a href="http://dailymtg.com">Daily MTG</a></li>
</ul></li>
<li>David
<ul><li><a href="http://www.imdb.com/title/tt3089388/">Tim’s Vermeer</a></li>
<li><a href="http://amzn.to/1RLQT2q">Ready Player One</a></li>
<li><a href="http://amzn.to/1klbBHS">The Aristocrats</a></li>
<li><a href="http://scientificsong.com/">Scientific Songs of Praise</a></li>
<li><a href="https://soundcloud.com/hollywoodbabbleon">Hollywood Babble On</a></li>
</ul></li>
</ul><h3>Keep In Touch</h3>
<ul><li>Barry
<ul><li><a href="wefearchange.org">Blog</a></li>
</ul></li>
<li>Chris
<ul><li><a href="rosuav.blogspot.com">Blog</a></li>
<li><a href="https://github.com/rosuav">GitHub</a></li>
</ul></li>
<li>David
<ul><li><a href="python.net/~goodger">Website</a></li>
<li><a href="david.goodger.org">Blog</a></li>
</ul></li>
</ul><h3>Links</h3>
<ul><li><a href="http://smile.amazon.com/Complete-Monty-Pythons-Flying-Circus/dp/0679726470/ref=sr_1_1?ie=UTF8&amp;qid=1449600613&amp;sr=8-1&amp;keywords=Monty+Python+all+the+words">Monty Python - All the Words</a></li>
<li><a href="https://www.youtube.com/user/MontyPython">Monty Python - On YouTube</a></li>
<li><a href="https://www.python.org/dev/peps/pep-0404/">PEP 404</a></li>
<li><a href="https://www.python.org/dev/peps/pep-0666/">PEP 666</a></li>
<li><a href="https://www.youtube.com/watch?v=wf-BqAjZb8M">Raymond Hettinger PyCon 2015 PEP8 talk</a></li>
<li><a href="https://mail.python.org/mailman/listinfo/python-dev">Python Dev Mailing List</a></li>
<li><a href="https://mail.python.org/mailman/listinfo/python-ideas">Python Ideas Mailing List</a></li>
<li><a href="https://mail.python.org/mailman/listinfo/python-bugs-list">Python Bug Mailing List</a></li>
</ul><p>The intro and outro music is from Requiem for a Fish <a href="http://freemusicarchive.org/music/The_Freak_Fandango_Orchestra/">The Freak Fandango Orchestra</a>  / <a href="http://creativecommons.org/licenses/by-sa/3.0/">CC BY-SA</a></p>
]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/gyzsht/Episode37-ThePEPTalk.mp3" length="117868118" type="audio/mpeg"/>
				<itunes:subtitle>Visit our site to listen to past episodes, support the show, and sign up for our mailing list.

Summary

The Python language is built by and for ...</itunes:subtitle>
		<itunes:summary>Visit our site to listen to past episodes, support the show, and sign up for our mailing list.

Summary

The Python language is built by and for its community. In order to add a new feature, change the specification, or create a new policy the first step is to submit a proposal for consideration. Those proposals are called PEPs, or Python Enhancement Proposals. In this episode we had the great pleasure of speaking with three of the people who act as stewards for this process to learn more about how it got started, how it works, and what impacts it has had.

Brief Introduction

Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.
Subscribe on iTunes, Stitcher, TuneIn or RSS
Follow us on Twitter or Google+
Give us feedback! Leave a review on iTunes, Tweet to us, send us an email or leave us a message on Google+
I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at pythonpodcast.com
This episode is sponsored by Zato - Microservices, ESB, SOA, REST, API, and Cloud Integrations in Python. Visitzato.io to learn more about how to integrate smarter in the modern world.
I would also like to thank Hired, a job marketplace for developers, for sponsoring this episode of Podcast.__init__. Use the link hired.com/podcastinit to double your signing bonus.
Searching for Pythonistas with Disabilities
We are recording today on December 7th, 2015 and your hosts as usual are Tobias Macey and Chris Patti
Today we are interviewing some of the PEP editors



Zato is a modern, Python powered platform for integrating all of your data. Check it out today and tell them thank you for being a sponsor of Podcast.__init__ - zato.io






On Hired software engineers  designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our special link to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.



Interview with PEP editors

Introductions
How did you get introduced to Python? - Chris
For anyone who isn't familiar with them, can you explain what a PEP is and how they influence the Python language? - Tobias
What are the requirements for a PEP to be considered for approval and what does the overall process look like to get it finalized? - Tobias
How has the PEP process evolved to meet challenges posed by changes in the Python community? - Chris
How many reviewers are there and how did each of you end up in that role? Is there a set number of editors that must be maintained and if so how did you arrive at that number? - Tobias
What mistakes have other communities made when creating similar processes, and how has PEP learned from those mistakes? - Chris
There are different categories for PEPs. Can you describe what those are and how you arrived at that ontology? - Tobias
Is there any significance to the numbering system used for identifying different PEPs? - Tobias
How does the PEP process maintain its sense of humor (e.g. PEP 20) while being sure to be taken seriously where it really counts? - Chris
Along the lines of humorous PEPs, can you share the story of PEP 401? - Tobias
How does the PEP process strive to prevent an undesirable level of control by any one company or other special interest group? - Chris
How much control does Guido have over the PEP process? Has a PEP ever directly countered Guido's wishes? How did it turn out? - Chris
Wh</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>01:45:42</itunes:duration>
		</item>
		<item>
		<title>Episode 36 - Eric Holscher on Documentation and Read The Docs</title>
		<link>http://podcastinit.podbean.com/e/episode-36-eric-holscher-on-documentation-and-read-the-docs/</link>
		<comments>http://podcastinit.podbean.com/e/episode-36-eric-holscher-on-documentation-and-read-the-docs/#comments</comments>
		<pubDate>Sun, 20 Dec 2015 16:14:43 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Learning</category>
	<category>Community</category>
	<category>Open Source</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-36-eric-holscher-on-documentation-and-read-the-docs/</guid>

		<description><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, and sign up for our mailing list.</p>
<h3>Summary</h3>
<p>The first place we all go for learning about new libraries is the documentation. Lack of effective documentation can limit the adoption of an otherwise excellent project. In this episode we spoke with Eric Holscher, co-creator of <a href="https://readthedocs.org/">Read The Docs</a>, about why documentation is important and how we can all work to make it better.</p>
<h3>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&#38;uo=6&#38;at=&#38;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&#38;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p726240/#">TuneIn</a> or <a href="http://podcastinit.podbean.com/feed/">RSS</a></li><li> [...]</li></ul>]]></description>
			<content:encoded><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, and sign up for our mailing list.</p>
<h3>Summary</h3>
<p>The first place we all go for learning about new libraries is the documentation. Lack of effective documentation can limit the adoption of an otherwise excellent project. In this episode we spoke with Eric Holscher, co-creator of <a href="https://readthedocs.org/">Read The Docs</a>, about why documentation is important and how we can all work to make it better.</p>
<h3>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&amp;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p726240/#">TuneIn</a> or <a href="http://podcastinit.podbean.com/feed/">RSS</a></li>
<li>Follow us on <a href="https://twitter.com/Podcast__init__">Twitter</a> or <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>Give us feedback! Leave a review on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="https://twitter.com/Podcast__init__">Tweet</a> to us, send us an <a href="mailto:hosts@podcastinit.com">email</a> or leave us a message on <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at <a href="http://pythonpodcast.com">pythonpodcast.com</a></li>
<li>I would also like to thank Hired, a job marketplace for developers, for sponsoring this episode of Podcast.__init__. Use the link <a href="http://hired.com/podcastinit">hired.com/podcastinit</a> to double your signing bonus.</li>
<li>Linode is sponsoring us this week. Check them out at <a href="http://linode.com/podcastinit">linode.com/podcastinit</a> and get a $10 credit to try out their fast and reliable Linux virtual servers for your next project</li>
<li>We are recording today on November 30th, 2015 and your hosts as usual are Tobias Macey and Chris Patti</li>
<li>Today we are interviewing Eric Holscher about Documentation</li>
</ul><div class="well">
<a href="http://linode.com/podcastinit"><img src="http://podcastinit.podbean.com/mf/web/tdegpr/linode-banner-sponsor-large.png" alt="Linode Sponsor Banner" /></a>
<p>Use the promo code <strong>podcastinit10</strong> to get a $10 credit when you sign up!</p>
</div>
<div class="well">
<a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit"><img src="http://podcastinit.podbean.com/mf/web/ehi957/hired-logo-dark-padding.png" alt="Hired Logo" style="float:left;margin-right:20px;" /></a>
<p>
On Hired software engineers &amp; designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our <a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit">special link</a> to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.
</p>
</div>
<h3 style="clear:both;">Interview with Eric Holscher</h3>
<ul><li>Introductions</li>
<li>How did you get introduced to Python? - Chris</li>
<li>You are one of the people behind the Read The Docs project. What was your inspiration for creating that platform and why is documentation so important in software? - Tobias</li>
<li>What makes Read The Docs different from other static sources for documentation? - Chris</li>
<li>The Python community seems to have a stronger focus on well-documented projects than some other languages. Do you have any theories as to why that is the case? - Tobias</li>
<li>Can you outline the landscape of projects that leverage the documentation capabilities that are built in to the Python language? - Tobias</li>
<li>Can you estimate the overall user base for Read The Docs? - Chris</li>
<li>Do you have any advice around methods or approaches that can help developers create and maintain effective documentation? - Tobias</li>
<li>Can you list some projects that you have found to provide the best documentation and what was remarkable about them? - Tobias</li>
<li>Newcomers to open source are often encouraged to submit improvements to a projects documentation as a way to get started and become involved with the community. Do you have any general advice on how to find and understand undocumented features? - Tobias</li>
<li>Do you have any statistics on the languages represented among the projects that host their documentation with you? - Tobias</li>
<li>What are some of the challenges you’ve faced and overcome in maintaining such a large repository of documentation from so many projects? - Chris</li>
<li>How can our listeners contribute to the project? - Chris</li>
</ul><h3>Picks</h3>
<ul><li>Tobias
<ul><li><a href="http://amzn.to/1S27VZp">The Man from Uncle</a></li>
<li><a href="https://www.youtube.com/user/minutephysics">Minute Physics</a></li>
</ul></li>
<li>Chris
<ul><li><a href="http://devblog.avdi.org/newsletter/">SigAvdi</a></li>
<li><a href="http://amzn.to/1S27PRg">Black Flags: The Rise of ISIS</a></li>
<li><a href="https://www.youtube.com/user/1veritasium">Veritassium</a></li>
</ul></li>
<li>Eric
<ul><li><a href="https://en.wikipedia.org/wiki/Khao_soi">Khao Soi</a></li>
<li><a href="http://worrydream.com/ClimateChange/">Climate Change</a></li>
<li><a href="http://michaelpollan.com/articles-archive/unhappy-meals/">Gardening &amp; healthy eating - Classic</a></li>
</ul></li>
</ul><h3>Keep In Touch</h3>
<ul><li>Twitter
<ul><li><a href="https://twitter.com/ericholscher">@ericholscher</a></li>
<li><a href="https://twitter.com/readthedocs">@readthedocs</a></li>
<li><a href="https://twitter.com/writethedocs">@writethedocs</a></li>
</ul></li>
</ul><h3>Links</h3>
<ul><li><a href="https://stripe.com/docs/api#intro">Stripe docs</a></li>
<li><a href="http://tutorial.djangogirls.org/en/">Django Girls Tutorial</a></li>
<li><a href="http://conf.writethedocs.org/">Write The Docs</a></li>
<li><a href="https://www.youtube.com/watch?v=ZwQ8Kd48d0w">Write The Docs Meetup Talk</a></li>
<li><a href="http://slack.writethedocs.org/">Write The Docs Slack Channel</a></li>
</ul><p>The intro and outro music is from Requiem for a Fish <a href="http://freemusicarchive.org/music/The_Freak_Fandango_Orchestra/">The Freak Fandango Orchestra</a>  / <a href="http://creativecommons.org/licenses/by-sa/3.0/">CC BY-SA</a></p>
]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/tvdyk3/Episode36-EricHolscheronReadTheDocs.mp3" length="76716015" type="audio/mpeg"/>
				<itunes:subtitle>Visit our site to listen to past episodes, support the show, and sign up for our mailing list.

Summary

The first place we all go for learning ...</itunes:subtitle>
		<itunes:summary>Visit our site to listen to past episodes, support the show, and sign up for our mailing list.

Summary

The first place we all go for learning about new libraries is the documentation. Lack of effective documentation can limit the adoption of an otherwise excellent project. In this episode we spoke with Eric Holscher, co-creator of Read The Docs, about why documentation is important and how we can all work to make it better.

Brief Introduction

Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.
Subscribe on iTunes, Stitcher, TuneIn or RSS
Follow us on Twitter or Google+
Give us feedback! Leave a review on iTunes, Tweet to us, send us an email or leave us a message on Google+
I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at pythonpodcast.com
I would also like to thank Hired, a job marketplace for developers, for sponsoring this episode of Podcast.__init__. Use the link hired.com/podcastinit to double your signing bonus.
Linode is sponsoring us this week. Check them out at linode.com/podcastinit and get a $10 credit to try out their fast and reliable Linux virtual servers for your next project
We are recording today on November 30th, 2015 and your hosts as usual are Tobias Macey and Chris Patti
Today we are interviewing Eric Holscher about Documentation

Use the promo code podcastinit10 to get a $10 credit when you sign up!





On Hired software engineers  designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our special link to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.



Interview with Eric Holscher

Introductions
How did you get introduced to Python? - Chris
You are one of the people behind the Read The Docs project. What was your inspiration for creating that platform and why is documentation so important in software? - Tobias
What makes Read The Docs different from other static sources for documentation? - Chris
The Python community seems to have a stronger focus on well-documented projects than some other languages. Do you have any theories as to why that is the case? - Tobias
Can you outline the landscape of projects that leverage the documentation capabilities that are built in to the Python language? - Tobias
Can you estimate the overall user base for Read The Docs? - Chris
Do you have any advice around methods or approaches that can help developers create and maintain effective documentation? - Tobias
Can you list some projects that you have found to provide the best documentation and what was remarkable about them? - Tobias
Newcomers to open source are often encouraged to submit improvements to a projects documentation as a way to get started and become involved with the community. Do you have any general advice on how to find and understand undocumented features? - Tobias
Do you have any statistics on the languages represented among the projects that host their documentation with you? - Tobias
What are some of the challenges you've faced and overcome in maintaining such a large repository of documentation from so many projects? - Chris
How can our listeners contribute to the project? - Chris
Picks

Tobias
The Man from Uncle
Minute Physics

Chris
SigAvdi
Black Flags: The Rise of ISIS
Veritassium

Eric
Khao Soi
Climate Change
Gardening  healthy eating - Classic

Keep In </itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>01:05:34</itunes:duration>
		</item>
		<item>
		<title>Episode 35 - Sylvain Thénault on ASTroid</title>
		<link>http://podcastinit.podbean.com/e/episode-35-sylvain-thenault-on-astroid/</link>
		<comments>http://podcastinit.podbean.com/e/episode-35-sylvain-thenault-on-astroid/#comments</comments>
		<pubDate>Sat, 12 Dec 2015 02:04:04 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Open Source</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-35-sylvain-thenault-on-astroid/</guid>

		<description><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, and sign up for our mailing list.</p>
<h3>Summary</h3>
<p>The Python AST (Abstract Syntax Tree) is a powerful abstraction that allows for a number of innovative projects. ASTroid is a library that provides additional convenience methods to simplify working with the AST. In this episode we spoke with Sylvain Thénault from Logilab about his work on ASTroid and how it is used to power the popular PyLint static analysis tool.</p>
<h3>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&#38;uo=6&#38;at=&#38;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&#38;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p726240/#">TuneIn</a> or <a href="http://podcastinit.podbean.com/feed/">RSS</a> [...]</li></ul>]]></description>
			<content:encoded><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, and sign up for our mailing list.</p>
<h3>Summary</h3>
<p>The Python AST (Abstract Syntax Tree) is a powerful abstraction that allows for a number of innovative projects. ASTroid is a library that provides additional convenience methods to simplify working with the AST. In this episode we spoke with Sylvain Thénault from Logilab about his work on ASTroid and how it is used to power the popular PyLint static analysis tool.</p>
<h3>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&amp;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p726240/#">TuneIn</a> or <a href="http://podcastinit.podbean.com/feed/">RSS</a></li>
<li>Follow us on <a href="https://twitter.com/Podcast__init__">Twitter</a> or <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>Give us feedback! Leave a review on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="https://twitter.com/Podcast__init__">Tweet</a> to us, send us an <a href="mailto:hosts@podcastinit.com">email</a> or leave us a message on <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at <a href="http://pythonpodcast.com">pythonpodcast.com</a></li>
<li>I would also like to thank Hired, a job marketplace for developers, for sponsoring this episode of Podcast.__init__. Use the link <a href="http://hired.com/podcastinit">hired.com/podcastinit</a> to double your signing bonus.</li>
<li>Linode is sponsoring us this week. Check them out at <a href="http://linode.com/podcastinit">linode.com/podcastinit</a> and get a $10 credit to try out their fast and reliable Linux virtual servers for your next project</li>
<li>We are recording today on November 23rd, 2015 and your hosts as usual are Tobias Macey and Chris Patti</li>
<li>Today we are interviewing Sylvain Thénault about ASTroid</li>
</ul><div class="well">
<a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit"><img src="http://podcastinit.podbean.com/mf/web/ehi957/hired-logo-dark-padding.png" alt="Hired Logo" /></a>
<p>
On Hired software engineers &amp; designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our <a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit">special link</a> to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.
</p>
</div>
<div class="well">
<a href="http://linode.com/podcastinit"><img src="http://podcastinit.podbean.com/mf/web/tdegpr/linode-banner-sponsor-large.png" alt="Linode Sponsor Banner" /></a>
<p>Use the promo code <strong>podcastinit10</strong> to get a $10 credit when you sign up!</p>
</div>
<h3>Interview with Sylvain Thénault</h3>
<ul><li>Introductions</li>
<li>How did you get introduced to Python? - Chris</li>
<li>Can you explain what an Abstract Syntax Tree is and why it is a useful language feature? - Tobias</li>
<li>What was your inspiration for creating ASTroid? - Chris</li>
<li>What features does ASTroid offer over Python’s standard AST package, and what makes those features important? - Chris</li>
<li>I know that the ASTroid package is used in Pylint which is also maintained by Logilab. How does the AST facilitate static analysis of Python projects and are there cases where you have to fall back to text parsing? - Tobias</li>
<li>Beyond static analysis, what are some of the other possible uses for the Python AST? - Tobias</li>
<li>The documentation for the AST package in Python mentions that the specific syntax objects in the tree are subject to change between releases. Does the ASTroid package provide any abstractions to maintain a consistent API between versions or does it just provide a pass-through? - Tobias</li>
<li>Have you encountered any challenges in testing ASTroid given that it operates at such a low level in the language? - Chris</li>
<li>Do you have trouble attracting contributors given the great understanding of Python’s inner working required? - Chris</li>
<li>Does the implementation or representation of the AST differ between different distributions of Python such as CPython, PyPy and Jython? - Tobias</li>
<li>What are some of the most interesting applications ASTroid has been used in? - Chris</li>
</ul><h3>Picks</h3>
<ul><li>Tobias
<ul><li><a href="http://pre-commit.com">Pre-Commit</a></li>
<li><a href="http://existentialcomics.com">Existential Comics</a></li>
<li><a href="http://amol-mandhane.github.io/htmlPy/">htmlPy</a></li>
</ul></li>
<li>Chris
<ul><li><a href="http://www.prettythingsbeertoday.com/wp/our-beers/fluffy-white-rabbits/">Pretty Things - Fluffy White Rabbits</a></li>
<li><a href="https://www.fallout4.com">Fallout 4</a></li>
</ul></li>
<li>Sylvain
<ul><li><a href="https://www.logilab.org/blogentry/6883">PyReverse</a></li>
<li><a href="https://www.cubicweb.org/">CubicWeb</a></li>
</ul></li>
</ul><h3>Keep In Touch</h3>
<ul><li><a href="https://mail.python.org/mailman/listinfo/code-quality">Code Quality Mailing List</a></li>
<li><a href="https://lists.logilab.org/mailman/listinfo/pylint-dev">PyLint Dev Mailing List</a></li>
<li>Twitter
<ul><li><a href="https://twitter.com/sythenault">@sythenault</a></li>
<li><a href="https://twitter.com/logilab">@logilab</a></li>
</ul></li>
<li><a href="http://logilab.fr">Logilab</a></li>
</ul><h3>Links</h3>
<ul><li><a href="https://en.wikipedia.org/wiki/Visitor_pattern">Visitor pattern</a></li>
<li><a href="http://www.pylint.org/">Pylint</a></li>
</ul><p>The intro and outro music is from Requiem for a Fish <a href="http://freemusicarchive.org/music/The_Freak_Fandango_Orchestra/">The Freak Fandango Orchestra</a>  / <a href="http://creativecommons.org/licenses/by-sa/3.0/">CC BY-SA</a></p>
]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/52wirp/Episode35-SylvainThenaultonASTroid.mp3" length="53206415" type="audio/mpeg"/>
				<itunes:subtitle>Visit our site to listen to past episodes, support the show, and sign up for our mailing list.

Summary

The Python AST (Abstract Syntax Tree) is a ...</itunes:subtitle>
		<itunes:summary>Visit our site to listen to past episodes, support the show, and sign up for our mailing list.

Summary

The Python AST (Abstract Syntax Tree) is a powerful abstraction that allows for a number of innovative projects. ASTroid is a library that provides additional convenience methods to simplify working with the AST. In this episode we spoke with Sylvain Thénault from Logilab about his work on ASTroid and how it is used to power the popular PyLint static analysis tool.

Brief Introduction

Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.
Subscribe on iTunes, Stitcher, TuneIn or RSS
Follow us on Twitter or Google+
Give us feedback! Leave a review on iTunes, Tweet to us, send us an email or leave us a message on Google+
I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at pythonpodcast.com
I would also like to thank Hired, a job marketplace for developers, for sponsoring this episode of Podcast.__init__. Use the link hired.com/podcastinit to double your signing bonus.
Linode is sponsoring us this week. Check them out at linode.com/podcastinit and get a $10 credit to try out their fast and reliable Linux virtual servers for your next project
We are recording today on November 23rd, 2015 and your hosts as usual are Tobias Macey and Chris Patti
Today we are interviewing Sylvain Thénault about ASTroid



On Hired software engineers  designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our special link to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.




Use the promo code podcastinit10 to get a $10 credit when you sign up!


Interview with Sylvain Thénault

Introductions
How did you get introduced to Python? - Chris
Can you explain what an Abstract Syntax Tree is and why it is a useful language feature? - Tobias
What was your inspiration for creating ASTroid? - Chris
What features does ASTroid offer over Python's standard AST package, and what makes those features important? - Chris
I know that the ASTroid package is used in Pylint which is also maintained by Logilab. How does the AST facilitate static analysis of Python projects and are there cases where you have to fall back to text parsing? - Tobias
Beyond static analysis, what are some of the other possible uses for the Python AST? - Tobias
The documentation for the AST package in Python mentions that the specific syntax objects in the tree are subject to change between releases. Does the ASTroid package provide any abstractions to maintain a consistent API between versions or does it just provide a pass-through? - Tobias
Have you encountered any challenges in testing ASTroid given that it operates at such a low level in the language? - Chris
Do you have trouble attracting contributors given the great understanding of Python's inner working required? - Chris
Does the implementation or representation of the AST differ between different distributions of Python such as CPython, PyPy and Jython? - Tobias
What are some of the most interesting applications ASTroid has been used in? - Chris
Picks

Tobias
Pre-Commit
Existential Comics
htmlPy

Chris
Pretty Things - Fluffy White Rabbits
Fallout 4

Sylvain
PyReverse
CubicWeb

Keep In Touch

Code Quality Mailing List
PyLint Dev Mailing List
Twitter
@sythenault
@logilab

Logilab
Links

Visitor pattern
Pylin</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>00:47:29</itunes:duration>
		</item>
		<item>
		<title>Episode 34 - Stuart Mumford on SunPy</title>
		<link>http://podcastinit.podbean.com/e/episode-34-stuart-mumford-on-sunpy/</link>
		<comments>http://podcastinit.podbean.com/e/episode-34-stuart-mumford-on-sunpy/#comments</comments>
		<pubDate>Fri, 04 Dec 2015 17:31:18 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Learning</category>
	<category>Data Science</category>
	<category>Data Analysis</category>
	<category>Open Source</category>
	<category>Science</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-34-stuart-mumford-on-sunpy/</guid>

		<description><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, and sign up for our mailing list.</p>
<h3>Summary</h3>
<p>What is Solar Physics? How does it differ from AstroPhysics? What does this all have to do with Python? In this episode we answer all of those questions when we interview Stuart Mumford about his work on SunPy. So put on your sunglasses and learn about how to use Python to decipher the secrets of our closest star.</p>
<h3>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&#38;uo=6&#38;at=&#38;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&#38;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p726240/#">TuneIn</a> or <a href="http://podcastinit.podbean.com/feed/">RSS</a></li>
<li>Follow us on <a href="https://twitter.com/P%20%5B...%5D"></a></li></ul>]]></description>
			<content:encoded><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, and sign up for our mailing list.</p>
<h3>Summary</h3>
<p>What is Solar Physics? How does it differ from AstroPhysics? What does this all have to do with Python? In this episode we answer all of those questions when we interview Stuart Mumford about his work on SunPy. So put on your sunglasses and learn about how to use Python to decipher the secrets of our closest star.</p>
<h3>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&amp;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p726240/#">TuneIn</a> or <a href="http://podcastinit.podbean.com/feed/">RSS</a></li>
<li>Follow us on <a href="https://twitter.com/Podcast__init__">Twitter</a> or <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>Give us feedback! Leave a review on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="https://twitter.com/Podcast__init__">Tweet</a> to us, send us an <a href="mailto:hosts@podcastinit.com">email</a> or leave us a message on <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at <a href="http://pythonpodcast.com">pythonpodcast.com</a></li>
<li>I would also like to thank Hired, a job marketplace for developers, for sponsoring this episode of Podcast.__init__. Use the link <a href="http://hired.com/podcastinit">hired.com/podcastinit</a> to double your signing bonus.</li>
<li>Linode is sponsoring us this week. Check them out at <a href="http://linode.com/podcastinit">linode.com/podcastinit</a> and get a $10 credit to try out their fast and reliable Linux virtual servers for your next project</li>
<li>We are recording today on November 17th, 2015 and your hosts as usual are Tobias Macey and Chris Patti</li>
<li>Today we are interviewing Stuart Mumford about SunPy</li>
</ul><div class="well">
<a href="http://linode.com/podcastinit"><img src="http://podcastinit.podbean.com/mf/web/tdegpr/linode-banner-sponsor-large.png" alt="Linode Sponsor Banner" /></a>
<p>Use the promo code <strong>podcastinit10</strong> to get a $10 credit when you sign up!</p>
</div>
<div class="well">
<a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit"><img src="http://podcastinit.podbean.com/mf/web/ehi957/hired-logo-dark-padding.png" alt="Hired Logo" style="float:left;margin:20px;" /></a>
<p>
On Hired software engineers &amp; designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our <a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit">special link</a> to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.
</p>
</div>
<h3 style="clear:both;">Interview with Stuart Mumford</h3>
<ul><li>Introductions</li>
<li>How did you get introduced to Python? - Chris</li>
<li>Can you explain what the research and applications of solar physics are and how SunPy facilitates those activities? - Tobias</li>
<li>What was your inspiration for the SunPy project and what are you using it for in your research? - Tobias</li>
<li>Can you tell us what SunPy’s map and light curve classes are and how they might be used? - Chris</li>
<li>Are there any considerations that you need to be aware of when writing software libraries for practitioners of the hard sciences that would be different if the target audience were software engineers? - Tobias</li>
<li>Can SunPy consume data directly from telescopes and other observational apparatus? - Chris</li>
<li>I noticed on the project site that SunPy leverages AstroPy internally. Can you describe the relationship between the two projects and why someone might want to use SunPy in place of or in addition to AstroPy? - Tobias</li>
<li>Looking at the documentation I got the impression that there is a fair amount of visual representation of data for analysis. Can you describe some of the challenges that has posed? Is there integrated support for project Jupyter and are there other graphical environments that SunPy supports? - Tobias</li>
<li>What are some of the most interesting applications that SunPy has been used for? - Chris</li>
</ul><h3>Picks</h3>
<ul><li>Tobias
<ul><li><a href="http://elm-lang.org/">Elm</a></li>
<li><a href="http://avro.apache.org/">Avro</a></li>
<li><a href="https://www.commonsensemedia.org/">Common Sense Media</a></li>
</ul></li>
<li>Chris
<ul><li><a href="http://www.massdrop.com/">Massdrop</a></li>
<li><a href="http://21st-amendment.com/beers/fireside-chat/">21st Amendment Fireside Chat</a></li>
<li><a href="https://www.youtube.com/user/ExtraCreditz">Extra Creditz</a></li>
</ul></li>
<li>Stuart
<ul><li><a href="http://www.ustream.tv/channel/live-iss-stream">Live ISS Stream with space-to-ground radio</a></li>
<li><a href="http://www.ustream.tv/channel/iss-hdev-payload">Live ISS HD video stream 24/7</a></li>
<li><a href="http://yt-project.org">yt</a></li>
<li><a href="http://calf-studio-gear.org/">Calf Studio - Live Audio Processing</a></li>
</ul></li>
</ul><h3>Keep In Touch</h3>
<ul><li><a href="@stuartmumford">Twitter</a>(@sunpyproject)</li>
<li><a href="http://sunpy.org">SunPy.org</a></li>
<li><a href="https://github.com/sunpy">GitHub</a></li>
<li><a href="#sunpy">IRC</a></li>
</ul><p>The intro and outro music is from Requiem for a Fish <a href="http://freemusicarchive.org/music/The_Freak_Fandango_Orchestra/">The Freak Fandango Orchestra</a>  / <a href="http://creativecommons.org/licenses/by-sa/3.0/">CC BY-SA</a></p>
]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/pdu7c5/Episode34-StuartMumfordonSunPy.mp3" length="45976179" type="audio/mpeg"/>
				<itunes:subtitle>Visit our site to listen to past episodes, support the show, and sign up for our mailing list.

Summary

What is Solar Physics? How does it differ ...</itunes:subtitle>
		<itunes:summary>Visit our site to listen to past episodes, support the show, and sign up for our mailing list.

Summary

What is Solar Physics? How does it differ from AstroPhysics? What does this all have to do with Python? In this episode we answer all of those questions when we interview Stuart Mumford about his work on SunPy. So put on your sunglasses and learn about how to use Python to decipher the secrets of our closest star.

Brief Introduction

Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.
Subscribe on iTunes, Stitcher, TuneIn or RSS
Follow us on Twitter or Google+
Give us feedback! Leave a review on iTunes, Tweet to us, send us an email or leave us a message on Google+
I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at pythonpodcast.com
I would also like to thank Hired, a job marketplace for developers, for sponsoring this episode of Podcast.__init__. Use the link hired.com/podcastinit to double your signing bonus.
Linode is sponsoring us this week. Check them out at linode.com/podcastinit and get a $10 credit to try out their fast and reliable Linux virtual servers for your next project
We are recording today on November 17th, 2015 and your hosts as usual are Tobias Macey and Chris Patti
Today we are interviewing Stuart Mumford about SunPy

Use the promo code podcastinit10 to get a $10 credit when you sign up!





On Hired software engineers  designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our special link to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.



Interview with Stuart Mumford

Introductions
How did you get introduced to Python? - Chris
Can you explain what the research and applications of solar physics are and how SunPy facilitates those activities? - Tobias
What was your inspiration for the SunPy project and what are you using it for in your research? - Tobias
Can you tell us what SunPy's map and light curve classes are and how they might be used? - Chris
Are there any considerations that you need to be aware of when writing software libraries for practitioners of the hard sciences that would be different if the target audience were software engineers? - Tobias
Can SunPy consume data directly from telescopes and other observational apparatus? - Chris
I noticed on the project site that SunPy leverages AstroPy internally. Can you describe the relationship between the two projects and why someone might want to use SunPy in place of or in addition to AstroPy? - Tobias
Looking at the documentation I got the impression that there is a fair amount of visual representation of data for analysis. Can you describe some of the challenges that has posed? Is there integrated support for project Jupyter and are there other graphical environments that SunPy supports? - Tobias
What are some of the most interesting applications that SunPy has been used for? - Chris
Picks

Tobias
Elm
Avro
Common Sense Media

Chris
Massdrop
21st Amendment Fireside Chat
Extra Creditz

Stuart
Live ISS Stream with space-to-ground radio
Live ISS HD video stream 24/7
yt
Calf Studio - Live Audio Processing

Keep In Touch

Twitter(@sunpyproject)
SunPy.org
GitHub
IRC
The intro and outro music is from Requiem for a Fish The Freak Fandango Orchestra  / CC BY-SA</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>00:40:39</itunes:duration>
		</item>
		<item>
		<title>Episode 33 - Maneesha Sane on Software and Data Carpentry</title>
		<link>http://podcastinit.podbean.com/e/episode-33-maneesha-sane-on-software-and-data-carpentry/</link>
		<comments>http://podcastinit.podbean.com/e/episode-33-maneesha-sane-on-software-and-data-carpentry/#comments</comments>
		<pubDate>Wed, 25 Nov 2015 15:33:09 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Learning</category>
	<category>Data Science</category>
	<category>Data Analysis</category>
	<category>Community</category>
	<category>Science</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-33-maneesha-sane-on-software-and-data-carpentry/</guid>

		<description><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, and sign up for our mailing list.</p>
<h3>Summary</h3>
<p>The Software and Data Carpentry organizations have a mission of making it easier for scientists and data analysts in academia to replicate and review each others work. In order to achieve this goal they conduct training and workshops that teach modern best practices in software and data engineering, including version control and proper data management. In this episode we had the opportunity to speak with Maneesha Sane, the program coordinator for both organizations, so that we could learn more about how these projects are related and how they approach their mission.</p>
<h3>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&#38;uo=6&#38;at=&#38;ct=">iT [...]</a></li></ul>]]></description>
			<content:encoded><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, and sign up for our mailing list.</p>
<h3>Summary</h3>
<p>The Software and Data Carpentry organizations have a mission of making it easier for scientists and data analysts in academia to replicate and review each others work. In order to achieve this goal they conduct training and workshops that teach modern best practices in software and data engineering, including version control and proper data management. In this episode we had the opportunity to speak with Maneesha Sane, the program coordinator for both organizations, so that we could learn more about how these projects are related and how they approach their mission.</p>
<h3>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&amp;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p726240/#">TuneIn</a> or <a href="http://podcastinit.podbean.com/feed/">RSS</a></li>
<li>Follow us on <a href="https://twitter.com/Podcast__init__">Twitter</a> or <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>Give us feedback! Leave a review on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="https://twitter.com/Podcast__init__">Tweet</a> to us, send us an <a href="mailto:hosts@podcastinit.com">email</a> or leave us a message on <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at <a href="http://pythonpodcast.com">pythonpodcast.com</a></li>
<li>This episode is sponsored by Zato - Microservices, ESB, SOA, REST, API, and Cloud Integrations in Python. Visit zato.io to learn more about how to integrate smarter in the modern world.</li>
<li>I would also like to thank Hired, a job marketplace for developers, for sponsoring this episode of Podcast.__init__. Use the link <a href="http://hired.com/podcastinit">hired.com/podcastinit</a> to double your signing bonus.</li>
<li>Linode is sponsoring us this week. Check them out at <a href="http://linode.com/podcastinit">linode.com/podcastinit</a> and get a $10 credit to try out their fast and reliable Linux virtual servers for your next project</li>
<li>We are recording today on November 10th, 2015 and your hosts as usual are Tobias Macey and Chris Patti</li>
<li>Today we are interviewing Maneesha Sane about Software Carpentry and Data Carpentry</li>
</ul><div class="well"><a href="https://zato.io/docs?podcast-init"><img src="http://podcastinit.podbean.com/mf/web/t3dbs5/zato-logo.png" style="float:left;margin-right:20px;margin-bottom:20px;" alt="zato-logo.png" /></a>
<p>Zato is a modern, Python powered platform for integrating all of your data. Check it out today and tell them thank you for being a sponsor of Podcast.__init__ - <a href="https://zato.io/docs?podcast-init">zato.io</a></p>
</div>
<div class="well" style="clear:both;">
<a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit"><img src="http://podcastinit.podbean.com/mf/web/ehi957/hired-logo-dark-padding.png" style="float:left;margin-right:20px;" alt="hired-logo-dark-padding.png" /></a>
<p><span style="font-size:10pt;">On Hired software engineers &amp; designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our </span><a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit" style="font-size:10pt;">special link</a><span style="font-size:10pt;"> to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.</span></p>
</div>
<p>
</p><h3 style="clear:both;">Interview with Maneesha Sane</h3>
<ul><li>Introductions</li>
<li>How did you get introduced to Python?</li>
<li>Can you explain what the Software and Data Carpentry organizations are and what their respective goals are?</li>
<li>What is the history of these organizations and how are they related?</li>
<li>What does a typical Software Carpentry or Data Carpentry workshop look like?</li>
<li>What is the background of your instructors?</li>
<li>Can you explain why Python was chosen as the language for your workshops and why it is such a good language to use for teaching proper software engineering practices to scientists?</li>
<li>In what ways do the lessons taught by both groups differ and what parts are common between the two organizations?</li>
<li>What are some of the most important tools and lessons that you teach to scientists in academia?</li>
<li>Do you tend to focus mostly on procedural development or do you also teach object oriented programming in Software Carpentry?</li>
<li>What is the target audience for Data Carpentry and what are some of the most important lessons and tools taught to them?</li>
<li>Do you teach any particular method of pre-coding design like flowcharting, pseudocode, or top down decomposition in software carpentry?</li>
<li>What scientific domains are most commonly represented among your workshop participants for Software Carpentry?</li>
<li>What are some specific things the Python community and the Python core team could do to make it easier to adopt for your students?</li>
<li>What are the most common concepts students have trouble with in software &amp; data carpentry?</li>
<li>How can our audience help support the goals of these organizations?</li>
</ul><h3>Picks</h3>
<ul><li>Tobias
<ul><li><a href="https://vivaldi.com/">Vivaldi Browser</a></li>
<li><a href="https://www.vyte.in/">vyte.in</a></li>
<li><a href="http://www.shiftyjelly.com/">Pocket Casts</a></li>
</ul></li>
<li>Chris
<ul><li><a href="http://chiptuneswin.com/">Chiptunes = Win</a></li>
<li><a href="https://play.spotify.com/user/spotify/playlist/65y98W0UItf73DJKVgylTP?play=true&amp;utm_source=open.spotify.com&amp;utm_medium=open">ESM - Electronic Study Music</a></li>
<li><a href="http://shop.supergalacticexpansive.com/">Supergalactic Expansive</a></li>
</ul></li>
<li>Maneesha
<ul><li><a href="http://qpython.com/">QPython</a></li>
<li><a href="https://www.youtube.com/user/thenewboston">New Boston</a></li>
<li><a href="http://www.lunarbaboon.com/">Lunar Baboon</a></li>
</ul></li>
</ul><h3>Keep In Touch</h3>
<ul><li>Twitter
<ul><li><a href="https://twitter.com/swcarpentry">@swcarpentry</a></li>
<li><a href="https://twitter.com/datacarpentry">@datacarpentry</a></li>
<li><a href="https://twitter.com/maneeshasane">@maneeshasane</a></li>
</ul></li>
<li><a href="http://maneeshasane.com">Blog</a></li>
<li><a href="http://software-carpentry.org">Software Carpentry</a></li>
<li><a href="http://datacarpentry.org">Data Carpentry</a></li>
</ul><h3>Links</h3>
<ul><li><a href="http://numfocus.org/">NumFocus</a></li>
<li><a href="https://github.com/swcarpentry">Software Carpentry GitHub - Training Courses</a></li>
<li><a href="http://teaching.software-carpentry.org/">Instructor Training</a></li>
<li><a href="http://lists.software-carpentry.org/mailman/listinfo/discuss_lists.software-carpentry.org">Discussion Mailing List</a></li>
</ul><p>The intro and outro music is from Requiem for a Fish <a href="http://freemusicarchive.org/music/The_Freak_Fandango_Orchestra/">The Freak Fandango Orchestra</a>  / <a href="http://creativecommons.org/licenses/by-sa/3.0/">CC BY-SA</a></p>
]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/2pem5k/Episode33-ManeeshaSaneonSoftwareandDataCarpentry.mp3" length="28836478" type="audio/mpeg"/>
				<itunes:subtitle>Visit our site to listen to past episodes, support the show, and sign up for our mailing list.

Summary

The Software and Data Carpentry organizations have a ...</itunes:subtitle>
		<itunes:summary>Visit our site to listen to past episodes, support the show, and sign up for our mailing list.

Summary

The Software and Data Carpentry organizations have a mission of making it easier for scientists and data analysts in academia to replicate and review each others work. In order to achieve this goal they conduct training and workshops that teach modern best practices in software and data engineering, including version control and proper data management. In this episode we had the opportunity to speak with Maneesha Sane, the program coordinator for both organizations, so that we could learn more about how these projects are related and how they approach their mission.

Brief Introduction

Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.
Subscribe on iTunes, Stitcher, TuneIn or RSS
Follow us on Twitter or Google+
Give us feedback! Leave a review on iTunes, Tweet to us, send us an email or leave us a message on Google+
I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at pythonpodcast.com
This episode is sponsored by Zato - Microservices, ESB, SOA, REST, API, and Cloud Integrations in Python. Visit zato.io to learn more about how to integrate smarter in the modern world.
I would also like to thank Hired, a job marketplace for developers, for sponsoring this episode of Podcast.__init__. Use the link hired.com/podcastinit to double your signing bonus.
Linode is sponsoring us this week. Check them out at linode.com/podcastinit and get a $10 credit to try out their fast and reliable Linux virtual servers for your next project
We are recording today on November 10th, 2015 and your hosts as usual are Tobias Macey and Chris Patti
Today we are interviewing Maneesha Sane about Software Carpentry and Data Carpentry

Zato is a modern, Python powered platform for integrating all of your data. Check it out today and tell them thank you for being a sponsor of Podcast.__init__ - zato.io



On Hired software engineers  designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our special link to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.
Interview with Maneesha Sane

Introductions
How did you get introduced to Python?
Can you explain what the Software and Data Carpentry organizations are and what their respective goals are?
What is the history of these organizations and how are they related?
What does a typical Software Carpentry or Data Carpentry workshop look like?
What is the background of your instructors?
Can you explain why Python was chosen as the language for your workshops and why it is such a good language to use for teaching proper software engineering practices to scientists?
In what ways do the lessons taught by both groups differ and what parts are common between the two organizations?
What are some of the most important tools and lessons that you teach to scientists in academia?
Do you tend to focus mostly on procedural development or do you also teach object oriented programming in Software Carpentry?
What is the target audience for Data Carpentry and what are some of the most important lessons and tools taught to them?
Do you teach any particular method of pre-coding design like flowcharting, pseudocode, or top down decomposition in software carpentry?
What scientific domains are most commonly</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>00:44:29</itunes:duration>
		</item>
		<item>
		<title>Episode 32 - Erik Tollerud on AstroPy</title>
		<link>http://podcastinit.podbean.com/e/episode-32-erik-tollerud-on-astropy/</link>
		<comments>http://podcastinit.podbean.com/e/episode-32-erik-tollerud-on-astropy/#comments</comments>
		<pubDate>Fri, 20 Nov 2015 02:57:05 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Data Science</category>
	<category>Data Analysis</category>
	<category>Open Source</category>
	<category>Science</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-32-erik-tollerud-on-astropy/</guid>

		<description><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, and subscribe to our mailing list.</p>
<h3>
<a class="anchor" href="#summary"><span class="octicon octicon-link"></span></a>Summary</h3>
<p>Erik Tollerud is an astronomer with a background in software engineering. He leverages these backgrounds to help build and maintain the AstroPy framework and its associated modules. AstroPy is a set of Python libraries that provide useful mechanisms for astronomers and astrophysicists to perform analyses on the data that they receive from observational equipment such as the mountain observatory that Erik was preparing to visit when we talked to him about his work. If you like Python and space then you should definitely give this episode a listen!</p>
<h3>
<a class="anchor" href="#brief-introduction"><span class="octicon octicon-link"></span></a>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and th [...]</li></ul>]]></description>
			<content:encoded><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, and subscribe to our mailing list.</p>
<h3>
<a class="anchor" href="#summary"><span class="octicon octicon-link"></span></a>Summary</h3>
<p>Erik Tollerud is an astronomer with a background in software engineering. He leverages these backgrounds to help build and maintain the AstroPy framework and its associated modules. AstroPy is a set of Python libraries that provide useful mechanisms for astronomers and astrophysicists to perform analyses on the data that they receive from observational equipment such as the mountain observatory that Erik was preparing to visit when we talked to him about his work. If you like Python and space then you should definitely give this episode a listen!</p>
<h3>
<a class="anchor" href="#brief-introduction"><span class="octicon octicon-link"></span></a>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&amp;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p726240/#">TuneIn</a> or <a href="http://podcastinit.podbean.com/feed/">RSS</a>
</li>
<li>Follow us on <a href="https://twitter.com/Podcast__init__">Twitter</a> or <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a>
</li>
<li>Give us feedback! Leave a review on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="https://twitter.com/Podcast__init__">Tweet</a> to us, send us an <a href="mailto:hosts@podcastinit.com">email</a> or leave us a message on <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a>
</li>
<li>I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at <a href="http://pythonpodcast.com">pythonpodcast.com</a>
</li>
<li>I would also like to thank Hired, a job marketplace for developers, for sponsoring this episode of Podcast.__init__. Use the link <a href="http://hired.com/podcastinit">hired.com/podcastinit</a> to double your signing bonus.</li>
<li>Linode is sponsoring us this week. Check them out at <a href="http://linode.com/podcastinit">linode.com/podcastinit</a> and get a $10 credit to try out their fast and reliable Linux virtual servers for your next project</li>
<li>We are recording today on November 2nd, 2015 and your hosts as usual are Tobias Macey and Chris Patti</li>
<li>Today we are interviewing Erik Tollerud about AstroPy</li>
</ul><div><img src="http://podcastinit.podbean.com/mf/web/ehi957/hired-logo-dark-padding.png" alt="hired-logo-dark-padding.png" /><p>
On Hired software engineers &amp; designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our <a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit">special link</a> to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.
</p>
</div>
<div><img src="http://podcastinit.podbean.com/mf/web/tdegpr/linode-banner-sponsor-large.png" alt="linode-banner-sponsor-large.png" /><p>Use the promo code <strong>podcastinit10</strong> to get a $10 credit when you sign up!</p>
</div>
<h3>
<a class="anchor" href="#interview-with-erik-tollerud"><span class="octicon octicon-link"></span></a>Interview with Erik Tollerud</h3>
<ul><li>Introductions</li>
<li>How did you get introduced to Python?</li>
<li>What was the inspiration to create AstroPy and what kinds of astronomical research can it be used for?</li>
<li>Can you tell us what AstroPy’s modeling functions are and give us examples of where they might be used?</li>
<li>Are there any considerations that you need to be aware of when writing software libraries for practitioners of the hard sciences that would be different if the target audience were software engineers?</li>
<li>What are some of the most interesting applications that AstroPy has been used for?</li>
<li>Are there open data sets that are available for people outside of academia to do analysis of astronomical data using AstroPy?
<ul><li>Have there been any useful discoveries made in this way?</li>
</ul></li>
<li>Could you please tell us about AstroPy’s Virtual Observatory capabilities?</li>
<li>What are some interesting use cases for AstroPy’s Cosmological calculations?</li>
<li>Are there other libraries available that provide similar capabilities, perhaps in other languages? What makes AstroPy unique among them?</li>
<li>Can AstroPy consume data directly from telescopes and other observational apparatus?</li>
<li>The amount of data generated from observing astronomical phenomena must be immense. What are some of the tools used to manage that data and how does AstroPy interface with them?</li>
<li>How might AstroPy be used to prove or disprove the cold dark matter hypothesis?</li>
<li>What are some of the architectural choices that have been made to allow for the AstroPy library to serve as the core for a number of other add-ons?
<ul><li>Does AstroPy provide a common data format to allow for easy interoperability between the various addons?</li>
</ul></li>
<li>I noticed that AstroPy adheres to the PSF code of conduct, as well as having adopted an enhancement proposal process modelled after PEPs. Can you explain why that is important and what kind of an impact it has had on the community around AstroPy?</li>
</ul><h3>
<a class="anchor" href="#picks"><span class="octicon octicon-link"></span></a>Picks</h3>
<ul><li>Tobias
<ul><li><a href="http://citizen-ex.com/">Citizen Ex</a></li>
<li><a href="https://github.com/sesh/piprot">piprot</a></li>
<li><a href="http://www.openculture.com/">Open Culture</a></li>
</ul></li>
<li>Chris
<ul><li><a href="http://www.theallusionist.org/">The Allusionist</a></li>
<li><a href="http://thisiscriminal.com/">Criminal</a></li>
<li><a href="http://www.dancarlin.com/hardcore-history-series/">Hardcore History</a></li>
</ul></li>
<li>Erik
<ul><li><a href="http://hubblesite.org/">HubbleSite</a></li>
<li><a href="http://www.thegreatcourses.com/courses/history-of-the-ancient-world-a-global-perspective.html">Great Courses - History of the Ancient World</a></li>
</ul></li>
</ul><h3>
<a class="anchor" href="#keep-in-touch"><span class="octicon octicon-link"></span></a>Keep In Touch</h3>
<ul><li><a href="http://www.astropy.org/">astropy.org</a></li>
<li><a href="https://mail.scipy.org/mailman/listinfo/astropy">AstroPy User Mailing List</a></li>
<li><a href="https://groups.google.com/forum/#!forum/astropy-dev">AstroPy Dev Mailing List</a></li>
</ul><h3>
<a class="anchor" href="#links"><span class="octicon octicon-link"></span></a>Links</h3>
<ul><li><a href="http://www.astropy.org/astropy-tutorials/">tutorials.astropy.org</a></li>
<li><a href="https://github.com/astropy/astroquery">AstroQuery</a></li>
<li><a href="http://cython.org/">Cython</a></li>
</ul><p>The intro and outro music is from Requiem for a Fish <a href="http://freemusicarchive.org/music/The_Freak_Fandango_Orchestra/">The Freak Fandango Orchestra</a>  / <a href="http://creativecommons.org/licenses/by-sa/3.0/">CC BY-SA</a></p>
]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/ir9xek/Episode32-ErikTollerudonAstroPy.mp3" length="55803415" type="audio/mpeg"/>
				<itunes:subtitle>Visit our site to listen to past episodes, support the show, and subscribe to our mailing list.


Summary

Erik Tollerud is an astronomer with a background in ...</itunes:subtitle>
		<itunes:summary>Visit our site to listen to past episodes, support the show, and subscribe to our mailing list.


Summary

Erik Tollerud is an astronomer with a background in software engineering. He leverages these backgrounds to help build and maintain the AstroPy framework and its associated modules. AstroPy is a set of Python libraries that provide useful mechanisms for astronomers and astrophysicists to perform analyses on the data that they receive from observational equipment such as the mountain observatory that Erik was preparing to visit when we talked to him about his work. If you like Python and space then you should definitely give this episode a listen!


Brief Introduction

Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.
Subscribe on iTunes, Stitcher, TuneIn or RSS

Follow us on Twitter or Google+

Give us feedback! Leave a review on iTunes, Tweet to us, send us an email or leave us a message on Google+

I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at pythonpodcast.com

I would also like to thank Hired, a job marketplace for developers, for sponsoring this episode of Podcast.__init__. Use the link hired.com/podcastinit to double your signing bonus.
Linode is sponsoring us this week. Check them out at linode.com/podcastinit and get a $10 credit to try out their fast and reliable Linux virtual servers for your next project
We are recording today on November 2nd, 2015 and your hosts as usual are Tobias Macey and Chris Patti
Today we are interviewing Erik Tollerud about AstroPy

On Hired software engineers  designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our special link to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.



Use the promo code podcastinit10 to get a $10 credit when you sign up!



Interview with Erik Tollerud

Introductions
How did you get introduced to Python?
What was the inspiration to create AstroPy and what kinds of astronomical research can it be used for?
Can you tell us what AstroPy's modeling functions are and give us examples of where they might be used?
Are there any considerations that you need to be aware of when writing software libraries for practitioners of the hard sciences that would be different if the target audience were software engineers?
What are some of the most interesting applications that AstroPy has been used for?
Are there open data sets that are available for people outside of academia to do analysis of astronomical data using AstroPy?

Have there been any useful discoveries made in this way?

Could you please tell us about AstroPy's Virtual Observatory capabilities?
What are some interesting use cases for AstroPy's Cosmological calculations?
Are there other libraries available that provide similar capabilities, perhaps in other languages? What makes AstroPy unique among them?
Can AstroPy consume data directly from telescopes and other observational apparatus?
The amount of data generated from observing astronomical phenomena must be immense. What are some of the tools used to manage that data and how does AstroPy interface with them?
How might AstroPy be used to prove or disprove the cold dark matter hypothesis?
What are some of the architectural choices that have been made to allow for the AstroPy library to serve as the core for a number </itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>00:49:19</itunes:duration>
		</item>
		<item>
		<title>Episode 31 - Dariusz Suchojad on Zato</title>
		<link>http://podcastinit.podbean.com/e/episode-31-dariusz-suchojad-on-zato/</link>
		<comments>http://podcastinit.podbean.com/e/episode-31-dariusz-suchojad-on-zato/#comments</comments>
		<pubDate>Fri, 13 Nov 2015 02:44:19 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Open Source</category>
	<category>Security</category>
	<category>Infrastructure</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-31-dariusz-suchojad-on-zato/</guid>

		<description><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, and sign up for our mailing list.</p>
<h3>
<a class="anchor" href="#summary"><span class="octicon octicon-link"></span></a>Summary</h3>
<p>Service integration platforms have traditionally been the realm of Java projects. Zato is a project that shows Python is a great choice for systems integration due to its flexibility and wealth of useful libraries. In this episode we had the opportunity to speak with Dariusz Suchojad, the creator of Zato about why he decided to make it and what makes it interesting. Listen to the episode and then take it for a spin.</p>
<h3>
<a class="anchor" href="#brief-introduction"><span class="octicon octicon-link"></span></a>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&#38;uo=6%20%5B...%5D"></a></li></ul>]]></description>
			<content:encoded><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, and sign up for our mailing list.</p>
<h3>
<a class="anchor" href="#summary"><span class="octicon octicon-link"></span></a>Summary</h3>
<p>Service integration platforms have traditionally been the realm of Java projects. Zato is a project that shows Python is a great choice for systems integration due to its flexibility and wealth of useful libraries. In this episode we had the opportunity to speak with Dariusz Suchojad, the creator of Zato about why he decided to make it and what makes it interesting. Listen to the episode and then take it for a spin.</p>
<h3>
<a class="anchor" href="#brief-introduction"><span class="octicon octicon-link"></span></a>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&amp;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p726240/#">TuneIn</a> or <a href="http://podcastinit.podbean.com/feed/">RSS</a>
</li>
<li>Follow us on <a href="https://twitter.com/Podcast__init__">Twitter</a> or <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a>
</li>
<li>Give us feedback! Leave a review on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="https://twitter.com/Podcast__init__">Tweet</a> to us, send us an <a href="mailto:hosts@podcastinit.com">email</a>, leave us a message on <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a>, or leave a comment on our <a href="http://pythonpodcast.com/dariusz-suchojad-zato.html">show notes</a>
</li>
<li>I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at </li>
<li>I would also like to thank Hired, a job marketplace for developers, for sponsoring this episode of Podcast.__init__. Use the link <a href="http://hired.com/podcastinit">hired.com/podcastinit</a> to double your signing bonus.</li>
<li>Linode is also sponsoring us this week. Check them out at <a href="http://linode.com/podcastinit">linode.com/podcastinit</a> and get a $10 credit to try out their fast and reliable Linux virtual servers for your next project.</li>
<li>We are recording today on October 27th, 2015 and your hosts as usual are Tobias Macey and Chris Patti</li>
<li>Today we are interviewing Dariusz Suchojad about Zato</li>
</ul><div class="well">
<a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit"><img src="http://podcastinit.podbean.com/mf/web/ehi957/hired-logo-dark-padding.png" alt="Hired Logo" /></a>
<p>
On Hired software engineers &amp; designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our <a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit">special link</a> to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.
</p>
</div>
<div class="well">
<a href="http://linode.com/podcastinit"><img src="http://podcastinit.podbean.com/mf/web/tdegpr/linode-banner-sponsor-large.png" alt="Linode Sponsor Banner" /></a>
<p>Use the promo code <strong>podcastinit10</strong> to get a $10 credit when you sign up!</p>
</div>
<h3>
<a class="anchor" href="#interview-with-dariusz-suchojad"><span class="octicon octicon-link"></span></a>Interview with Dariusz Suchojad</h3>
<ul><li>Introductions</li>
<li>How did you get introduced to Python?</li>
<li>Can you explain what Zato is and what motivated you to create it?</li>
<li>What makes Zato stand out from other service bus implementations?</li>
<li>What are some signs that someone should consider incorporating Zato into their software architecture?</li>
<li>Does zato perform well in restricted resource environments like ec2? What performance bottlenecks are common when using zato?</li>
<li>It seems that most other ESB projects are written in Java. What advantages does Python have over Java for this kind of project and in what ways is it inferior?</li>
<li>The architectural nature of ESBs are such that they form the central backbone of a software system. How have you been able to ensure an appropriate level of reliability and stability in Zato while still delivering new features and improvements?</li>
<li>What are the scalability and high availability characteristics of Zato?</li>
<li>Does zato run well using pypy?</li>
<li>For anyone wanting to use Zato, what are the infrastructure requirements for deployment?</li>
<li>What are some of the security ramifications you took into account in zato’s design?</li>
<li>What are some of the most novel uses for Zato that you have seen or heard about?</li>
</ul><h3>
<a class="anchor" href="#picks"><span class="octicon octicon-link"></span></a>Picks</h3>
<ul><li>Tobias
<ul><li><a href="http://amzn.to/1PP6BZF">SPY</a></li>
<li><a href="https://www.reverbnation.com/royersonemanband">Eric Royer’s One Man Band</a></li>
<li><a href="https://github.com/nvie/pip-tools">pip-tools</a></li>
</ul></li>
<li>Chris
<ul><li><a href="http://spaghettionthewallproductions.com/rational-security/">Rational Security</a></li>
<li><a href="http://www.newrustacean.com/">New Rustacean Podcast</a></li>
<li><a href="http://cocktailvirgin.blogspot.com/2011/02/johan-goes-to-mexico.html">Johan Goes to Mexico</a></li>
</ul></li>
<li>Dariusz
<ul><li><a href="http://www.sublimetext.com/">Sublime Text Editor</a></li>
</ul></li>
</ul><h3>
<a class="anchor" href="#keep-in-touch"><span class="octicon octicon-link"></span></a>Keep In Touch</h3>
<ul><li><a href="https://zato.io">zato.io</a></li>
<li><a href="https://twitter.com/zatosource">Twiter</a></li>
<li><a href="https://github.com/zatosource">Github</a></li>
</ul><p>The intro and outro music is from Requiem for a Fish <a href="http://freemusicarchive.org/music/The_Freak_Fandango_Orchestra/">The Freak Fandango Orchestra</a> / <a href="http://creativecommons.org/licenses/by-sa/3.0/">CC BY-SA</a></p>
]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/pmar46/Episode31-DariuszSuchojadonZato.mp3" length="47741162" type="audio/mpeg"/>
				<itunes:subtitle>Visit our site to listen to past episodes, support the show, and sign up for our mailing list.


Summary

Service integration platforms have traditionally been the realm ...</itunes:subtitle>
		<itunes:summary>Visit our site to listen to past episodes, support the show, and sign up for our mailing list.


Summary

Service integration platforms have traditionally been the realm of Java projects. Zato is a project that shows Python is a great choice for systems integration due to its flexibility and wealth of useful libraries. In this episode we had the opportunity to speak with Dariusz Suchojad, the creator of Zato about why he decided to make it and what makes it interesting. Listen to the episode and then take it for a spin.


Brief Introduction

Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.
Subscribe on iTunes, Stitcher, TuneIn or RSS

Follow us on Twitter or Google+

Give us feedback! Leave a review on iTunes, Tweet to us, send us an email, leave us a message on Google+, or leave a comment on our show notes

I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at 
I would also like to thank Hired, a job marketplace for developers, for sponsoring this episode of Podcast.__init__. Use the link hired.com/podcastinit to double your signing bonus.
Linode is also sponsoring us this week. Check them out at linode.com/podcastinit and get a $10 credit to try out their fast and reliable Linux virtual servers for your next project.
We are recording today on October 27th, 2015 and your hosts as usual are Tobias Macey and Chris Patti
Today we are interviewing Dariusz Suchojad about Zato



On Hired software engineers  designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our special link to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.




Use the promo code podcastinit10 to get a $10 credit when you sign up!



Interview with Dariusz Suchojad

Introductions
How did you get introduced to Python?
Can you explain what Zato is and what motivated you to create it?
What makes Zato stand out from other service bus implementations?
What are some signs that someone should consider incorporating Zato into their software architecture?
Does zato perform well in restricted resource environments like ec2? What performance bottlenecks are common when using zato?
It seems that most other ESB projects are written in Java. What advantages does Python have over Java for this kind of project and in what ways is it inferior?
The architectural nature of ESBs are such that they form the central backbone of a software system. How have you been able to ensure an appropriate level of reliability and stability in Zato while still delivering new features and improvements?
What are the scalability and high availability characteristics of Zato?
Does zato run well using pypy?
For anyone wanting to use Zato, what are the infrastructure requirements for deployment?
What are some of the security ramifications you took into account in zato's design?
What are some of the most novel uses for Zato that you have seen or heard about?

Picks

Tobias

SPY
Eric Royer's One Man Band
pip-tools

Chris

Rational Security
New Rustacean Podcast
Johan Goes to Mexico

Dariusz

Sublime Text Editor


Keep In Touch

zato.io
Twiter
Github
The intro and outro music is from Requiem for a Fish The Freak Fandango Orchestra / CC BY-SA</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>00:42:27</itunes:duration>
		</item>
		<item>
		<title>Episode 30 - Tom Rothamel on Ren&#8217;Py</title>
		<link>http://podcastinit.podbean.com/e/episode-30-tom-rothamel-on-renpy/</link>
		<comments>http://podcastinit.podbean.com/e/episode-30-tom-rothamel-on-renpy/#comments</comments>
		<pubDate>Fri, 06 Nov 2015 20:37:55 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Software</category>
	<category>Python</category>
	<category>Open Source</category>
	<category>Games</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-30-tom-rothamel-on-renpy/</guid>

		<description><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, and sign up for our mailing list.</p>
<h3>
<a class="anchor" href="#summary"><span class="octicon octicon-link"></span></a>Summary</h3>
<p>Tom Rothamel is an embedded systems engineer who spends his free time working on Ren’Py, a visual novel engine written in Python. Ren’Py allows you to write interactive fiction experiences and deploy them across desktop and mobile platforms. By creating a purpose-built DSL for describing the interactions, users of Ren’Py can focus on crafting polished experiences without fighting through the vagaries of programming languages, while still providing access to the internals when necessary. Listen to our interview with Tom to learn more about this long-running project and what makes it so interesting.</p>
<h3>
<a class="anchor" href="#brief-introduction"><span class="octicon octicon-link"></span></a>Brief Introduction</h3>
<ul><li>H [...]</li></ul>]]></description>
			<content:encoded><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, and sign up for our mailing list.</p>
<h3>
<a class="anchor" href="#summary"><span class="octicon octicon-link"></span></a>Summary</h3>
<p>Tom Rothamel is an embedded systems engineer who spends his free time working on Ren’Py, a visual novel engine written in Python. Ren’Py allows you to write interactive fiction experiences and deploy them across desktop and mobile platforms. By creating a purpose-built DSL for describing the interactions, users of Ren’Py can focus on crafting polished experiences without fighting through the vagaries of programming languages, while still providing access to the internals when necessary. Listen to our interview with Tom to learn more about this long-running project and what makes it so interesting.</p>
<h3>
<a class="anchor" href="#brief-introduction"><span class="octicon octicon-link"></span></a>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&amp;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p726240/#">TuneIn</a> or <a href="http://podcastinit.podbean.com/feed/">RSS</a>
</li>
<li>Follow us on <a href="https://twitter.com/Podcast__init__">Twitter</a> or <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a>
</li>
<li>Give us feedback! Leave a review on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="https://twitter.com/Podcast__init__">Tweet</a> to us, send us an <a href="mailto:hosts@podcastinit.com">email</a> or leave us a message on <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a>
</li>
<li>I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at </li>
<li>I would also like to thank Hired, a job marketplace for developers, for sponsoring this episode of Podcast.__init__. Use the link <a href="http://hired.com/podcastinit">hired.com/podcastinit</a> to double your signing bonus.</li>
<li>Linode is also sponsoring us this week. Check them out at <a href="http://linode.com/podcastinit">linode.com/podcastinit</a> and get a $10 credit to try out their fast and reliable Linux virtual servers for your next project.</li>
<li>We are recording today on October 19th, 2015 and your hosts as usual are Tobias Macey and Chris Patti</li>
<li>Today we are interviewing Tom Rothamel about RenPy</li>
</ul><div class="well">
<a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit"><img src="http://podcastinit.podbean.com/mf/web/ehi957/hired-logo-dark-padding.png" alt="Hired Logo" /></a>

<p>
On Hired software engineers &amp; designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our <a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit">special link</a> to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.
</p>
</div>
<h3>
<a class="anchor" href="#interview-with-tom-rothamel"><span class="octicon octicon-link"></span></a>Interview with Tom Rothamel</h3>
<ul><li>Introductions</li>
<li>How did you get introduced to Python?</li>
<li>What is Ren’Py and what was your inspiration for starting it?</li>
<li>I noticed that Ren’Py supports a number of different styles of gameplay. Can you explain the differences between interactive fiction, kinetic fiction and RPGs?</li>
<li>I notice that RenPy has clearly been around a while (Some of the games for OSX are PowerPC binaries!) - what problems have you encountered maintaining such a long lived project and keeping it current?</li>
<li>What libraries does Ren’Py leverage and how did you go about selecting them to allow for cross-platform development and deployment?</li>
<li>What underlying Python graphics toolkit does RenPy use for display, and how did that choice affect RenPy’s design?</li>
<li>While reading through the quickstart in the documentation I noticed that there is a special syntax that you have created for defining the dialog and narratives. Can you explain how you created the DSL for building the storylines?</li>
<li>It feels to me like RenPy was heavily inspired by the JRPG genre and as such there are games where sex plays a prominent role(I noticed a mention of Hentai in the docs), which is less readily accepted in the west. Have you ever encountered any pushback on this issue?</li>
<li>I noticed that some of the games that were created with Ren’Py are available on the Steam platform. What elements of the Ren’Py project lend themselves to producing games with enough polish to be published on such a mainstream platform?</li>
<li>If you were just starting out today implementing RenPy, would you still use Python? Why?</li>
</ul><h3>
<a class="anchor" href="#picks"><span class="octicon octicon-link"></span></a>Picks</h3>
<ul><li>Tobias
<ul><li><a href="http://amzn.to/1NRDrbX">DJ Logic</a></li>
<li><a href="https://github.com/tj/git-extras">git-extras</a></li>
<li><a href="https://github.com/rubik/radon">Radon</a></li>
</ul></li>
<li>Chris
<ul><li><a href="http://www.rottentomatoes.com/tv/narcos/">Narcos</a></li>
<li><a href="https://www.rust-lang.org/">The Rust Programming Language</a></li>
<li><a href="http://www.kentfallsbrewing.com/shower-beer/">Kent Falls Brewing Shower Beer</a></li>
</ul></li>
<li>Tom
<ul><li><a href="http://cython.org/">Cython</a></li>
<li><a href="http://www.npr.org/about/products/npr-one/">NPR One</a></li>
<li><a href="http://lifehacker.com/281626/jerry-seinfelds-productivity-secret">The Seinfeld Method</a></li>
</ul></li>
</ul><h3>
<a class="anchor" href="#keep-in-touch"><span class="octicon octicon-link"></span></a>Keep In Touch</h3>
<ul><li><a href="http://renpy.org">renpy.org</a></li>
<li><a href="https://twitter.com/renpytom">Twitter</a></li>
</ul><h3>
<a class="anchor" href="#links"><span class="octicon octicon-link"></span></a>Links</h3>
<ul><li><a href="http://www.hanakogames.com/llq.shtml">Long Live The Queen</a></li>
<li><a href="http://www.bishoujo.us/moonlight/">Moonlight Walks</a></li>
</ul><p>The intro and outro music is from Requiem for a Fish <a href="http://freemusicarchive.org/music/The_Freak_Fandango_Orchestra/">The Freak Fandango Orchestra</a>  / <a href="http://creativecommons.org/licenses/by-sa/3.0/">CC BY-SA</a></p>
]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/jzq2m4/Episode30-TomRothamelonRenPy.mp3" length="67918051" type="audio/mpeg"/>
				<itunes:subtitle>Visit our site to listen to past episodes, support the show, and sign up for our mailing list.


Summary

Tom Rothamel is an embedded systems engineer who ...</itunes:subtitle>
		<itunes:summary>Visit our site to listen to past episodes, support the show, and sign up for our mailing list.


Summary

Tom Rothamel is an embedded systems engineer who spends his free time working on Ren'Py, a visual novel engine written in Python. Ren'Py allows you to write interactive fiction experiences and deploy them across desktop and mobile platforms. By creating a purpose-built DSL for describing the interactions, users of Ren'Py can focus on crafting polished experiences without fighting through the vagaries of programming languages, while still providing access to the internals when necessary. Listen to our interview with Tom to learn more about this long-running project and what makes it so interesting.


Brief Introduction

Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.
Subscribe on iTunes, Stitcher, TuneIn or RSS

Follow us on Twitter or Google+

Give us feedback! Leave a review on iTunes, Tweet to us, send us an email or leave us a message on Google+

I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at 
I would also like to thank Hired, a job marketplace for developers, for sponsoring this episode of Podcast.__init__. Use the link hired.com/podcastinit to double your signing bonus.
Linode is also sponsoring us this week. Check them out at linode.com/podcastinit and get a $10 credit to try out their fast and reliable Linux virtual servers for your next project.
We are recording today on October 19th, 2015 and your hosts as usual are Tobias Macey and Chris Patti
Today we are interviewing Tom Rothamel about RenPy



On Hired software engineers  designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our special link to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.




Interview with Tom Rothamel

Introductions
How did you get introduced to Python?
What is Ren'Py and what was your inspiration for starting it?
I noticed that Ren'Py supports a number of different styles of gameplay. Can you explain the differences between interactive fiction, kinetic fiction and RPGs?
I notice that RenPy has clearly been around a while (Some of the games for OSX are PowerPC binaries!) - what problems have you encountered maintaining such a long lived project and keeping it current?
What libraries does Ren'Py leverage and how did you go about selecting them to allow for cross-platform development and deployment?
What underlying Python graphics toolkit does RenPy use for display, and how did that choice affect RenPy's design?
While reading through the quickstart in the documentation I noticed that there is a special syntax that you have created for defining the dialog and narratives. Can you explain how you created the DSL for building the storylines?
It feels to me like RenPy was heavily inspired by the JRPG genre and as such there are games where sex plays a prominent role(I noticed a mention of Hentai in the docs), which is less readily accepted in the west. Have you ever encountered any pushback on this issue?
I noticed that some of the games that were created with Ren'Py are available on the Steam platform. What elements of the Ren'Py project lend themselves to producing games with enough polish to be published on such a mainstream platform?
If you were just starting out today implementing RenPy, would you sti</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>00:58:53</itunes:duration>
		</item>
		<item>
		<title>Episode 29 - Anthony Scopatz on Xonsh</title>
		<link>http://podcastinit.podbean.com/e/episode-29-anthony-scopatz-on-xonsh/</link>
		<comments>http://podcastinit.podbean.com/e/episode-29-anthony-scopatz-on-xonsh/#comments</comments>
		<pubDate>Sat, 31 Oct 2015 02:06:37 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Open Source</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-29-anthony-scopatz-on-xonsh/</guid>

		<description><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, and sign up for our mailing list.</p>
<h3>
<a class="anchor" href="#summary"><span class="octicon octicon-link"></span></a>Summary</h3>
<p>Anthony Scopatz is the creator of the Python shell Xonsh in addition to his work as a professor of nuclear physics. In this episode we talked to him about why he created Xonsh, how it works, and what his goals are for the project. It is definitely worth trying out Xonsh as it greatly simplifies the day-to-day use of your terminal environment by adding easily accessible python interoperability.</p>
<h3>
<a class="anchor" href="#brief-introduction"><span class="octicon octicon-link"></span></a>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&#38;uo=6&#38;at=&#38;ct=">iTune [...]</a></li></ul>]]></description>
			<content:encoded><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, and sign up for our mailing list.</p>
<h3>
<a class="anchor" href="#summary"><span class="octicon octicon-link"></span></a>Summary</h3>
<p>Anthony Scopatz is the creator of the Python shell Xonsh in addition to his work as a professor of nuclear physics. In this episode we talked to him about why he created Xonsh, how it works, and what his goals are for the project. It is definitely worth trying out Xonsh as it greatly simplifies the day-to-day use of your terminal environment by adding easily accessible python interoperability.</p>
<h3>
<a class="anchor" href="#brief-introduction"><span class="octicon octicon-link"></span></a>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&amp;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p726240/#">TuneIn</a> or <a href="http://podcastinit.podbean.com/feed/">RSS</a>
</li>
<li>Follow us on <a href="https://twitter.com/Podcast__init__">Twitter</a> or <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a>
</li>
<li>Give us feedback! Leave a review on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="https://twitter.com/Podcast__init__">Tweet</a> to us, send us an <a href="mailto:hosts@podcastinit.com">email</a> or leave us a message on <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a>
</li>
<li>I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at <a href="http://pythonpodcast.com">pythonpodcast.com</a></li>
<li>I would also like to thank Hired, a job marketplace for developers, for sponsoring this episode of Podcast.__init__. Use the link <a href="http://hired.com/podcastinit">hired.com/podcastinit</a> to double your signing bonus.</li>
<li>Linode is also sponsoring us this week. Check them out at <a href="http://linode.com/podcastinit">linode.com/podcastinit</a> and get a $10 credit to try out their fast and reliable Linux virtual servers for your next project</li>
<li>We are recording today on October 12th, 2015 and your hosts as usual are Tobias Macey and Chris Patti</li>
<li>Today we are interviewing Anthony Scopatz about Xonsh</li>
</ul><div class="well">
<a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit"><img src="http://podcastinit.podbean.com/mf/web/ehi957/hired-logo-dark-padding.png" alt="Hired Logo" /></a>
<p>
On Hired software engineers &amp; designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our <a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit">special link</a> to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.
</p>
</div>
<div class="well">
<a href="http://linode.com/podcastinit"><img src="http://podcastinit.podbean.com/mf/web/tdegpr/linode-banner-sponsor-large.png" alt="Linode Sponsor Banner" /></a>
<p>Use the promo code <strong>podcastinit10</strong> to get a $10 credit when you sign up!</p>
</div>
<h3>
<a class="anchor" href="#interview-with-anthony-scopatz"><span class="octicon octicon-link"></span></a>Interview with Anthony Scopatz</h3>
<ul><li>Introductions</li>
<li>How did you get introduced to Python?</li>
<li>Can you explain what Xonsh is and your motivation for creating it?</li>
<li>For people transitioning to Xonsh from a shell like Bash or Zsh, what are some of the biggest differences that they will see?</li>
<li>What are some really powerful one-liners that showcase Xonsh’s capabilities?</li>
<li>What is it about Python that lends itself to this kind of a project and what are your thoughts on building something like Xonsh in another language such as Ruby or Node.js?</li>
<li>If you had to single out one killer feature that Xonsh brings to the table, what would that be?</li>
<li>Is it possible to specify which shell, such as bash or zsh, gets used in subprocess mode?</li>
<li>I started using the Xonsh shell as my daily terminal recently and have been enjoying it so far. One of the things that I have been wondering is how to hook into the completion system to provide eldoc style completion from parsing the output of help flags. Do you have any advice on where to start? Perhaps using the docopt library to handle parsing of help output and generate completions from that?</li>
<li>What are your thoughts on adding a section to the project documentation for people to list various extension modules that people can take advantage of? Or perhaps creating something along the lines of Oh my Xonsh?</li>
<li>How do bash function definitions interoperate with the Xonsh environment and functions defined in Python?</li>
<li>It seems as though there could be some potential path or compatibility issues when moving between virtual environments and having access to extension modules loaded into Xonsh. Can you shed some light on that?</li>
<li>Do you have any suggestions for people who may not have the privileges to set their own login shell but who want to try Xonsh?</li>
<li>What are some of the most interesting uses of Xonsh that you have seen?</li>
<li>What does the future hold for the Xonsh project and how can our audience help?</li>
</ul><h3>
<a class="anchor" href="#picks"><span class="octicon octicon-link"></span></a>Picks</h3>
<ul><li>Tobias
<ul><li><a href="http://amzn.to/1N8UWkO">Mortdecai</a></li>
<li><a href="https://alembic.readthedocs.org/en/latest/index.html">Alembic</a></li>
<li><a href="http://www.sqlalchemy.org/">SQLAlchemy</a></li>
<li><a href="http://population.io/">population.io</a></li>
</ul></li>
<li>Chris
<ul><li><a href="http://amzn.to/1WnDQ5h">Consider Phlebas</a></li>
<li><a href="http://www.rottentomatoes.com/m/the_martian/">The Martian - Movie</a></li>
<li><a href="https://en.wikipedia.org/wiki/Fantastic_Planet">Fantastic Planet</a></li>
</ul></li>
<li>Anthony
<ul><li><a href="http://amzn.to/1N8ViYE">The Worst Journey In The World</a></li>
</ul></li>
</ul><h3>
<a class="anchor" href="#keep-in-touch"><span class="octicon octicon-link"></span></a>Keep In Touch</h3>
<ul><li><a href="mailto:xonsh@googlegroups.com">Mailing List</a></li>
<li><a href="http://xonsh.org/">xonsh.org</a></li>
<li><a href="https://webchat.oftc.net/?nick=&amp;channels=%23xonsh">#xonsh on OFTC</a></li>
<li><a href="https://github.com/scopatz/xonsh">GitHub</a></li>
<li><a href="https://twitter.com/scopatz">Twitter: @scopatz</a></li>
</ul><h3>
<a class="anchor" href="#links"><span class="octicon octicon-link"></span></a>Links</h3>
<ul><li><a href="http://www.dpbolvw.net/ka108y1A719PXYVQXZVPRRSWQRZYPRUTQXVVYXXQQQ?url=http%3A%2F%2Fshop.oreilly.com%2Fproduct%2F0636920033424.do%3Fcmp%3Daf-strata-books-videos-product_cj_9781491901533_%2525zp&amp;cjsku=0636920033424">Effective Computation in Physics</a></li>
<li><a href="https://github.com/jonathanslenders/python-prompt-toolkit">Python Prompt Toolkit</a></li>
</ul><p>The intro and outro music is from Requiem for a Fish <a href="http://freemusicarchive.org/music/The_Freak_Fandango_Orchestra/">The Freak Fandango Orchestra</a>  / <a href="http://creativecommons.org/licenses/by-sa/3.0/">CC BY-SA</a></p>
]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/85vs4q/Episode29-AnthonyScopatzonXonsh.mp3" length="65954172" type="audio/mpeg"/>
				<itunes:subtitle>Visit our site to listen to past episodes, support the show, and sign up for our mailing list.


Summary

Anthony Scopatz is the creator of the Python ...</itunes:subtitle>
		<itunes:summary>Visit our site to listen to past episodes, support the show, and sign up for our mailing list.


Summary

Anthony Scopatz is the creator of the Python shell Xonsh in addition to his work as a professor of nuclear physics. In this episode we talked to him about why he created Xonsh, how it works, and what his goals are for the project. It is definitely worth trying out Xonsh as it greatly simplifies the day-to-day use of your terminal environment by adding easily accessible python interoperability.


Brief Introduction

Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.
Subscribe on iTunes, Stitcher, TuneIn or RSS

Follow us on Twitter or Google+

Give us feedback! Leave a review on iTunes, Tweet to us, send us an email or leave us a message on Google+

I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at pythonpodcast.com
I would also like to thank Hired, a job marketplace for developers, for sponsoring this episode of Podcast.__init__. Use the link hired.com/podcastinit to double your signing bonus.
Linode is also sponsoring us this week. Check them out at linode.com/podcastinit and get a $10 credit to try out their fast and reliable Linux virtual servers for your next project
We are recording today on October 12th, 2015 and your hosts as usual are Tobias Macey and Chris Patti
Today we are interviewing Anthony Scopatz about Xonsh



On Hired software engineers  designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our special link to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.




Use the promo code podcastinit10 to get a $10 credit when you sign up!



Interview with Anthony Scopatz

Introductions
How did you get introduced to Python?
Can you explain what Xonsh is and your motivation for creating it?
For people transitioning to Xonsh from a shell like Bash or Zsh, what are some of the biggest differences that they will see?
What are some really powerful one-liners that showcase Xonsh's capabilities?
What is it about Python that lends itself to this kind of a project and what are your thoughts on building something like Xonsh in another language such as Ruby or Node.js?
If you had to single out one killer feature that Xonsh brings to the table, what would that be?
Is it possible to specify which shell, such as bash or zsh, gets used in subprocess mode?
I started using the Xonsh shell as my daily terminal recently and have been enjoying it so far. One of the things that I have been wondering is how to hook into the completion system to provide eldoc style completion from parsing the output of help flags. Do you have any advice on where to start? Perhaps using the docopt library to handle parsing of help output and generate completions from that?
What are your thoughts on adding a section to the project documentation for people to list various extension modules that people can take advantage of? Or perhaps creating something along the lines of Oh my Xonsh?
How do bash function definitions interoperate with the Xonsh environment and functions defined in Python?
It seems as though there could be some potential path or compatibility issues when moving between virtual environments and having access to extension modules loaded into Xonsh. Can you shed some light on that?
Do you have any suggestions</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>00:57:54</itunes:duration>
		</item>
		<item>
		<title>Episode 28 - Kay Hayen on Nuitka</title>
		<link>http://podcastinit.podbean.com/e/episode-28-kay-hayen-on-nuitka/</link>
		<comments>http://podcastinit.podbean.com/e/episode-28-kay-hayen-on-nuitka/#comments</comments>
		<pubDate>Sat, 24 Oct 2015 02:32:11 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Open Source</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-28-kay-hayen-on-nuitka/</guid>

		<description><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, and sign up for our mailing list.</p>
<h3>Summary</h3>
<p>Kay Hayen is a systems engineer from Germany who has dedicated his spare time to the creation of Nuitka, a library that will compile your Python project to C++. In this episode we talked to Kay about what inspired him to create the project, how it operates, and some of the challenges he has faced. It is a very interesting project and it has the potential to let you run your Python code in a whole new way!</p>
<h3>
<a class="anchor" href="#brief-introduction"><span class="octicon octicon-link"></span></a>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&#38;uo=6&#38;at=&#38;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&#38;refid=stpr">S [...]</a></li></ul>]]></description>
			<content:encoded><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, and sign up for our mailing list.</p>
<h3>Summary</h3>
<p>Kay Hayen is a systems engineer from Germany who has dedicated his spare time to the creation of Nuitka, a library that will compile your Python project to C++. In this episode we talked to Kay about what inspired him to create the project, how it operates, and some of the challenges he has faced. It is a very interesting project and it has the potential to let you run your Python code in a whole new way!</p>
<h3>
<a class="anchor" href="#brief-introduction"><span class="octicon octicon-link"></span></a>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&amp;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p726240/#">TuneIn</a> or <a href="http://podcastinit.podbean.com/feed/">RSS</a>
</li>
<li>Follow us on <a href="https://twitter.com/Podcast__init__">Twitter</a> or <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a>
</li>
<li>Give us feedback! Leave a review on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="https://twitter.com/Podcast__init__">Tweet</a> to us, send us an <a href="mailto:hosts@podcastinit.com">email</a>, leave us a message on <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a>, or leave a comment on our <a href="http://pythonpodcast.com/kay-hayen-nuitka.html">show notes</a>
</li>
<li>I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at <a href="http://pythonpodcast.com">pythonpodcast.com</a>
</li>
<li>I would also like to thank Hired, a job marketplace for developers, for sponsoring this episode of Podcast.__init__. Use the link <a href="http://hired.com/podcastinit">hired.com/podcastinit</a> to double your signing bonus. Linode has also sponsored this episode and you can get a $10 credit using the link linode.com/podcastinit to try out their fast and reliable linux virtual servers.</li>
<li>We are recording today on October 6th, 2015 and your hosts as usual are Tobias Macey and Chris Patti</li>
<li>Today we are interviewing Kay Hayen about the Nuitka project</li>
<li><hr /></li>
</ul><div class="well">
<a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit"><img src="http://podcastinit.podbean.com/mf/web/ehi957/hired-logo-dark-padding.png" alt="Hired Logo" /></a>
<p>
On Hired software engineers &amp; designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our <a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit">special link</a> to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.
</p>
</div>
<div class="well">
<a href="http://linode.com/podcastinit"><img src="http://podcastinit.podbean.com/mf/web/tdegpr/linode-banner-sponsor-large.png" alt="Linode Sponsor Banner" /></a>
<p>Use the promo code <strong>podcastinit10</strong> to get a $10 credit when you sign up!</p>
</div>
<hr /><h3>
<a class="anchor" href="#interview-with-kay-hayen"><span class="octicon octicon-link"></span></a>Interview with Kay Hayen</h3>
<ul><li>Introductions
<ul><li>German, family with 2 kids, one cat</li>
<li>Working in ATM (Air Traffic Management), tracker product</li>
<li>Systems Engineer</li>
<li>Nuitka as a hobbyist</li>
</ul></li>
<li>How did you get introduced to Python?
<ul><li>Once was Perl “Guru”.</li>
<li>Python was getting a lot of positive press</li>
<li>Team decision to want to use readable stuff</li>
<li>CPAN was still more complete, but Python was making inroads</li>
</ul></li>
<li>Can you describe how to pronounce the name of your project?
<ul><li>Wife Anna, Russian, Annuitka -&gt; Nuitka</li>
</ul></li>
<li>Can you briefly describe what Nuitka is and what your motivation was for creating it?
<ul><li>I was thinking a fully integrated and compatible compiler should be possible.</li>
<li>Why is nobody doing it?</li>
<li>I can do it.</li>
<li>I am doing it.</li>
<li>Take Python beyond current use cases.
<ul><li>Everbody currently using Python needs no compiler, or wouldn’t use it</li>
<li>Less need for time consuming C++/Python hybrid coding</li>
<li>Simple code should compile to fast code by default</li>
<li>Complex code should still work</li>
</ul></li>
</ul></li>
<li>On the project web site it says that Nuitka does a lot of clever things after being fed a Python project. Can you provide some details as to what some of that cleverness is?
<ul><li>Re-formulations of Python into simpler Python
<ul><li>No “class”</li>
<li>No “assert”</li>
<li>No complex assignments</li>
</ul></li>
<li>SSA tracing
<ul><li>Attaching uses to assignments properly
<ul><li>Despite try/finally</li>
<li>Loops</li>
</ul></li>
<li>Avoids checks for known defined/undefined values</li>
</ul></li>
<li>Function inlining (coming)</li>
<li>Constant propagation</li>
<li>Closure variable removal</li>
</ul></li>
<li>What is libpython and how is it used in both Nuitka and CPython?
<ul><li>Core of the Python interpreter</li>
<li>With Python VM and C interface</li>
<li>Nuitka can fall back to it</li>
<li>Avoiding it as often as we can, key to performance</li>
</ul></li>
<li>Is there any way to provide hints to Nuitka to generate more optimized output?
<ul><li>Nuitka is yet to make a difference based on type information</li>
<li>Not yet there, but coming soonish. SSA was pre-requisite</li>
<li>PEP 484 will be unreliable type information, mostly useless</li>
<li>I want type hints that are checked at Python run time</li>
</ul></li>
<li>What are some of the biggest challenges in generating statically compiled code from a language as dynamic as Python?
<ul><li>Python is compiled to .pyc files</li>
<li>Compatible Frame stack, cached</li>
<li>Exception handling of Python is terrible</li>
<li>CPython type system designed to be extensible
<ul><li>Extension types for functions, bound/unbound methods, generators, etc.</li>
</ul></li>
<li>Many details to get right</li>
</ul></li>
<li>Are there any particular Python constructs that Nuitka is unable to translate and as a corollary to that is the compilation step lossy at all or do you have some way of ensuring that the functionality of the program remains unaltered?
<ul><li>Big point, no price attached</li>
<li>Except for not having bytecode, there is nothing missing</li>
<li>No pdb support</li>
<li>Edit / run cycle is not accelerated</li>
<li>That said: PyQt (integrated), PySide (available, unmerged), wxPython (available, maybe merged) needed patches to take compiled function/method objects for function objects too</li>
</ul></li>
<li>Are there any particular types of programs that benefit the most from Nuitka’s compilation?
<ul><li>Bindings with ctypes of cffi compile into zero overhead C calls (planned)</li>
<li>Scientific programs are the most obvious goal (float type inference)</li>
<li>CPU bound or low latency programs</li>
</ul></li>
<li>Is it possible to feed an entire project with multiple modules into Nuitka all at once or is the standard use to perform compilation one source file or submodule at a time?
<ul><li>You give it the main program and it recurses imports according to “PYTHONPATH”</li>
<li>nuitka –recurse-all “/usr/bin/hg” supposed to work</li>
<li>Might have to give directories with program plug-ins</li>
</ul></li>
<li>I’m curious about what led you to choose compilation to C++ for Nuitka rather than making Nuitka an LLVM back end like Numba?
<ul><li>When I started Nuitka, I was using C++0x and variadic templates</li>
<li>Wanted to make a proof of concept that compatibility and integration is feasible</li>
<li>From there, code generation got less high level to goto ridden C</li>
</ul></li>
<li>How does Nuitka compare to projects like Numba or Cython?
<ul><li>Graceful degradation goal</li>
<li>Complete compatibility with Python whole stack</li>
</ul></li>
<li>How does Nuitka compare to PyPy? - Kay
<ul><li>PyPy is the coolest project ever</li>
<li>Pure Python goals shared</li>
</ul></li>
<li>How can users evaluate the performance of Nuitka - Kay
<ul><li>They currently cannot</li>
<li>Developing a tool to compare CPython and Nuitka runs
<ul><li>Based on vmprof from PyPy people</li>
<li>Identify parts of program where Nuitka is slower</li>
<li>Links to source code</li>
</ul></li>
<li>To be done, help needed.</li>
<li>Nuitka is only starting to get to serious performance
<ul><li>Compatibility is such a high bar to take</li>
<li>C++ to C took a year (avoiding C++ exceptions)</li>
<li>SSA literally took forever</li>
</ul></li>
</ul></li>
</ul><h3>
<a class="anchor" href="#picks"><span class="octicon octicon-link"></span></a>Picks</h3>
<ul><li>Tobias
<ul><li><a href="http://amzn.to/1MbCskV">Forbidden Island</a></li>
<li><a href="http://amzn.to/1MbCycj">Forbidden Desert</a></li>
<li><a href="https://ottoproject.io">Otto Project</a></li>
</ul></li>
<li>Chris
<ul><li><a href="http://grimmales.com/supersymmetry/">Grimm Super Symmetry</a></li>
<li><a href="http://youarelistening.to/boston">Are You Listening To?: Boston</a></li>
<li><a href="https://ripple.com/">Ripple</a></li>
</ul></li>
<li>Kay
<ul><li><a href="http://www.atheist-experience.com/">Learn being skeptic, Atheist Experience</a></li>
<li><a href="https://micropython.org/">MicroPython</a></li>
</ul></li>
</ul><h3>
<a class="anchor" href="#keep-in-touch"><span class="octicon octicon-link"></span></a>Keep In Touch</h3>
<ul><li><a href="http://nuitka.net">Nuitka Homepage</a></li>
<li><a href="https://plus.google.com/+KayHayen">Google+</a></li>
<li><a href="mailto:kay.hayen@gmail.com">Email</a></li>
</ul><p>The intro and outro music is from Requiem for a Fish <a href="http://freemusicarchive.org/music/The_Freak_Fandango_Orchestra/">The Freak Fandango Orchestra</a>  / <a href="http://creativecommons.org/licenses/by-sa/3.0/">CC BY-SA</a></p>
]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/9dgzbu/Episode28-KayHayen-Nuitka.mp3" length="109386625" type="audio/mpeg"/>
				<itunes:subtitle>Visit our site to listen to past episodes, support the show, and sign up for our mailing list.
Summary

Kay Hayen is a systems engineer from Germany ...</itunes:subtitle>
		<itunes:summary>Visit our site to listen to past episodes, support the show, and sign up for our mailing list.
Summary

Kay Hayen is a systems engineer from Germany who has dedicated his spare time to the creation of Nuitka, a library that will compile your Python project to C++. In this episode we talked to Kay about what inspired him to create the project, how it operates, and some of the challenges he has faced. It is a very interesting project and it has the potential to let you run your Python code in a whole new way!


Brief Introduction

Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.
Subscribe on iTunes, Stitcher, TuneIn or RSS

Follow us on Twitter or Google+

Give us feedback! Leave a review on iTunes, Tweet to us, send us an email, leave us a message on Google+, or leave a comment on our show notes

I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at pythonpodcast.com

I would also like to thank Hired, a job marketplace for developers, for sponsoring this episode of Podcast.__init__. Use the link hired.com/podcastinit to double your signing bonus. Linode has also sponsored this episode and you can get a $10 credit using the link linode.com/podcastinit to try out their fast and reliable linux virtual servers.
We are recording today on October 6th, 2015 and your hosts as usual are Tobias Macey and Chris Patti
Today we are interviewing Kay Hayen about the Nuitka project



On Hired software engineers  designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our special link to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.




Use the promo code podcastinit10 to get a $10 credit when you sign up!


Interview with Kay Hayen

Introductions

German, family with 2 kids, one cat
Working in ATM (Air Traffic Management), tracker product
Systems Engineer
Nuitka as a hobbyist

How did you get introduced to Python?

Once was Perl "Guru".
Python was getting a lot of positive press
Team decision to want to use readable stuff
CPAN was still more complete, but Python was making inroads

Can you describe how to pronounce the name of your project?

Wife Anna, Russian, Annuitka - Nuitka

Can you briefly describe what Nuitka is and what your motivation was for creating it?

I was thinking a fully integrated and compatible compiler should be possible.
Why is nobody doing it?
I can do it.
I am doing it.
Take Python beyond current use cases.

Everbody currently using Python needs no compiler, or wouldn't use it
Less need for time consuming C++/Python hybrid coding
Simple code should compile to fast code by default
Complex code should still work


On the project web site it says that Nuitka does a lot of clever things after being fed a Python project. Can you provide some details as to what some of that cleverness is?

Re-formulations of Python into simpler Python

No "class"
No "assert"
No complex assignments

SSA tracing

Attaching uses to assignments properly

Despite try/finally
Loops

Avoids checks for known defined/undefined values

Function inlining (coming)
Constant propagation
Closure variable removal

What is libpython and how is it used in both Nuitka and CPython?

Core of the Python interpreter
With Python VM and C interface
Nuitka can fall back to it
Avoiding it as often as we can, key to performance

Is t</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>01:34:36</itunes:duration>
		</item>
		<item>
		<title>Episode 27 - Trent Nelson on PyParallel</title>
		<link>http://podcastinit.podbean.com/e/episode-27-trent-nelson-on-pyparallel/</link>
		<comments>http://podcastinit.podbean.com/e/episode-27-trent-nelson-on-pyparallel/#comments</comments>
		<pubDate>Wed, 14 Oct 2015 13:16:01 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Open Source</category>
	<category>Concurrency</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-27-trent-nelson-on-pyparallel/</guid>

		<description><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, and sign up for our mailing list.</p>
<h3>
<a class="anchor" href="#summary"><span class="octicon octicon-link"></span></a>Summary</h3>
<p>Trent Nelson is a software engineer working with Continuum Analytics and a core contributor to CPython. He started experimenting with a way to sidestep the restrictions of the Global Interpreter Lock without discarding its benefits and that has become the PyParallel project. We had the privilege of discussing the details around this innovative experiment with Trent and learning more about the challenges he has experienced, what motivated him to start the project, and what it can offer to the community.</p>
<h3>
<a class="anchor" href="#brief-introduction"><span class="octicon octicon-link"></span></a>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe [...]</li></ul>]]></description>
			<content:encoded><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, and sign up for our mailing list.</p>
<h3>
<a class="anchor" href="#summary"><span class="octicon octicon-link"></span></a>Summary</h3>
<p>Trent Nelson is a software engineer working with Continuum Analytics and a core contributor to CPython. He started experimenting with a way to sidestep the restrictions of the Global Interpreter Lock without discarding its benefits and that has become the PyParallel project. We had the privilege of discussing the details around this innovative experiment with Trent and learning more about the challenges he has experienced, what motivated him to start the project, and what it can offer to the community.</p>
<h3>
<a class="anchor" href="#brief-introduction"><span class="octicon octicon-link"></span></a>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&amp;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p726240/#">TuneIn</a> or <a href="http://podcastinit.podbean.com/feed/">RSS</a>
</li>
<li>Follow us on <a href="https://twitter.com/Podcast__init__">Twitter</a> or <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a>
</li>
<li>Give us feedback! Leave a review on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="https://twitter.com/Podcast__init__">Tweet</a> to us, send us an <a href="mailto:hosts@podcastinit.com">email</a> or leave us a message on <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a>
</li>
<li>I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at </li>
<li>I would also like to thank Hired, a job marketplace for developers, for sponsoring this episode of Podcast.__init__. Use the link <a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit">hired.com/podcastinit</a> to double your signing bonus.</li>
<li>We are recording today on September 7th, 2015 and your hosts as usual are Tobias Macey and Chris Patti</li>
<li>Today we are interviewing Trent Nelson about PyParallel</li>
</ul><div>
<a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit"><img src="http://podcastinit.podbean.com/mf/web/ehi957/hired-logo-dark-padding.png" alt="Hired Logo" style="float:left;margin:0 10px 10px 0;" /></a>
<p>
On Hired software engineers &amp; designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our <a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit">special link</a> to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.
</p>
</div>
<h3 style="clear:both;">
<a class="anchor" href="#interview-with-trent-nelson"><span class="octicon octicon-link"></span></a>Interview with Trent Nelson</h3>
<ul><li>Introductions</li>
<li>How did you get introduced to Python?</li>
<li>For our listeners who may not be aware, can you give us an overview of what Pyparallel is and what makes it different from other Python implementations?</li>
<li>How did PyParallel come about?</li>
<li>What are some of the biggest technical hurdles that you have been faced with during your work on PyParallel?</li>
<li>I understand that PyParallel currently only works on Windows. What was the motivation for that and what would be required for enabling PyParallel to run on a Linux or BSD style operating system?</li>
<li>How does Pyparallel get around the limitations of the global interpreter lock without removing it?</li>
<li>Is there any special syntax required to take advantage of the parallelism offered by PyParallel? How does it interact with the threading module in the standard library?</li>
<li>In the abstract for the Pyparallel paper, you cite a simple rule - “Don’t persist parallel objects” - how easy is this to do with currently available concurrency paradigms and APIs, and would it make sense to add such support?
<ul><li>For instance, how would one be sure to follow this rule when using Twisted or asyncio?</li>
</ul></li>
<li>Are there any operations that are not supported in parallel threads?</li>
<li>What drove the decision to fork Python 3.3 as opposed to the 2.X series?</li>
<li>In the documentation you mention that the long term goal for PyParallel is to merge it back into Python mainline, possibly within 5 years. Has anything changed with that goal or timeline? What milestones do you need to hit before that becomes a realistic possibility?</li>
<li>Can you compare PyParallel to PyPy-STM and Go with Goroutines in terms of performance and user implementation?</li>
<li>What are some particular problem areas that you are looking for help with?</li>
<li>Assuming that it does get merged in as Python 4, how do you think that would affect the features and experiments that went into Python 5?</li>
<li>To be continued…</li>
</ul><h3>
<a class="anchor" href="#picks"><span class="octicon octicon-link"></span></a>Picks</h3>
<ul><li>Tobias
<ul><li><a href="http://testinfra.readthedocs.org/en/latest/">Testinfra</a></li>
<li><a href="http://softwareengineeringdaily.com/">Software Engineering Daily</a></li>
</ul></li>
<li>Chris
<ul><li><a href="https://www.kickstarter.com/projects/1868398473/hello-web-app-intermediate-concepts">Hello Webapp - Intermediate Concepts</a></li>
<li><a href="http://grimmales.com/rainbowdome/">Grimm Rainbow Dome</a></li>
<li>
<a href="https://www.youtube.com/user/pbsideachannel">PBS Idea Channel</a> </li>
</ul></li>
<li>Trent
<ul><li>
<a href="http://amzn.to/1UxJExs">Show Stopper</a> by G. Pascal Zachary</li>
</ul></li>
</ul><h3>
<a class="anchor" href="#keep-in-touch"><span class="octicon octicon-link"></span></a>Keep In Touch</h3>
<ul><li><a href="https://github.com/pyparallel/pyparallel">GitHub</a></li>
<li>Twitter
<ul><li><a href="https://twitter.com/pyparallel">@PyParallel</a></li>
<li><a href="https://twitter.com/trentnelson">@TrentNelson</a></li>
</ul></li>
</ul>]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/5n7h6u/Episode27-TrentNelsononPyParallel.mp3" length="48263824" type="audio/mpeg"/>
				<itunes:subtitle>Visit our site to listen to past episodes, support the show, and sign up for our mailing list.


Summary

Trent Nelson is a software engineer working with ...</itunes:subtitle>
		<itunes:summary>Visit our site to listen to past episodes, support the show, and sign up for our mailing list.


Summary

Trent Nelson is a software engineer working with Continuum Analytics and a core contributor to CPython. He started experimenting with a way to sidestep the restrictions of the Global Interpreter Lock without discarding its benefits and that has become the PyParallel project. We had the privilege of discussing the details around this innovative experiment with Trent and learning more about the challenges he has experienced, what motivated him to start the project, and what it can offer to the community.


Brief Introduction

Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.
Subscribe on iTunes, Stitcher, TuneIn or RSS

Follow us on Twitter or Google+

Give us feedback! Leave a review on iTunes, Tweet to us, send us an email or leave us a message on Google+

I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at 
I would also like to thank Hired, a job marketplace for developers, for sponsoring this episode of Podcast.__init__. Use the link hired.com/podcastinit to double your signing bonus.
We are recording today on September 7th, 2015 and your hosts as usual are Tobias Macey and Chris Patti
Today we are interviewing Trent Nelson about PyParallel



On Hired software engineers  designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our special link to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.




Interview with Trent Nelson

Introductions
How did you get introduced to Python?
For our listeners who may not be aware, can you give us an overview of what Pyparallel is and what makes it different from other Python implementations?
How did PyParallel come about?
What are some of the biggest technical hurdles that you have been faced with during your work on PyParallel?
I understand that PyParallel currently only works on Windows. What was the motivation for that and what would be required for enabling PyParallel to run on a Linux or BSD style operating system?
How does Pyparallel get around the limitations of the global interpreter lock without removing it?
Is there any special syntax required to take advantage of the parallelism offered by PyParallel? How does it interact with the threading module in the standard library?
In the abstract for the Pyparallel paper, you cite a simple rule - "Don't persist parallel objects" - how easy is this to do with currently available concurrency paradigms and APIs, and would it make sense to add such support?

For instance, how would one be sure to follow this rule when using Twisted or asyncio?

Are there any operations that are not supported in parallel threads?
What drove the decision to fork Python 3.3 as opposed to the 2.X series?
In the documentation you mention that the long term goal for PyParallel is to merge it back into Python mainline, possibly within 5 years. Has anything changed with that goal or timeline? What milestones do you need to hit before that becomes a realistic possibility?
Can you compare PyParallel to PyPy-STM and Go with Goroutines in terms of performance and user implementation?
What are some particular problem areas that you are looking for help with?
Assuming that it does get merged in as Python 4, how do you think that would af</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>01:12:44</itunes:duration>
		</item>
		<item>
		<title>Episode 26 - Dag Brattli on RxPy</title>
		<link>http://podcastinit.podbean.com/e/episode-26-dag-brattli-on-rxpy/</link>
		<comments>http://podcastinit.podbean.com/e/episode-26-dag-brattli-on-rxpy/#comments</comments>
		<pubDate>Fri, 09 Oct 2015 12:31:13 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Open Source</category>
	<category>Stream Processing</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-26-dag-brattli-on-rxpy/</guid>

		<description><![CDATA[<p>Visit our <a href="http://pythonpodcast.com/dag-brattli-rxpy.html">site</a> to listen to past episodes, support the show, and sign up for our newsletter!</p>
<h3>
<a class="anchor" href="#summary"><span class="octicon octicon-link"></span></a>Summary</h3>
<p>Dag Brattli is an engineer with Microsoft and in his spare time he created the ported the Reactive Xtensions framework to Python in the form of the RxPy library. In this episode we had the opportunity to speak with Dag and learn more about what ReactiveX is, why it is useful and how you can use it in your Python programs. It is definitely a very powerful programming patern when manipulating data streams which is becoming increasingly common in modern software architectures.</p>
<h3>
<a class="anchor" href="#brief-introduction"><span class="octicon octicon-link"></span></a>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a></a></li></ul>]]></description>
			<content:encoded><![CDATA[<p>Visit our <a href="http://pythonpodcast.com/dag-brattli-rxpy.html">site</a> to listen to past episodes, support the show, and sign up for our newsletter!</p>
<h3>
<a class="anchor" href="#summary"><span class="octicon octicon-link"></span></a>Summary</h3>
<p>Dag Brattli is an engineer with Microsoft and in his spare time he created the ported the Reactive Xtensions framework to Python in the form of the RxPy library. In this episode we had the opportunity to speak with Dag and learn more about what ReactiveX is, why it is useful and how you can use it in your Python programs. It is definitely a very powerful programming patern when manipulating data streams which is becoming increasingly common in modern software architectures.</p>
<h3>
<a class="anchor" href="#brief-introduction"><span class="octicon octicon-link"></span></a>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&amp;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p726240/#">TuneIn</a> or <a href="http://podcastinit.podbean.com/feed/">RSS</a>
</li>
<li>Follow us on <a href="https://twitter.com/Podcast__init__">Twitter</a> or <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a>
</li>
<li>Give us feedback! Leave a review on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="https://twitter.com/Podcast__init__">Tweet</a> to us, send us an <a href="mailto:hosts@podcastinit.com">email</a> or leave us a message on <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a>
</li>
<li>I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at </li>
<li>I would also like to thank Hired, a job marketplace for developers, for sponsoring this episode of Podcast.__init__. Use the link <a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit">hired.com/podcastinit</a> to double your signing bonus.</li>
<li>We are recording today on October 2nd, 2015 and your hosts as usual are Tobias Macey and Chris Patti</li>
<li>Today we are interviewing Dag Brattli about the RxPy project</li>
</ul><div><img src="http://podcastinit.podbean.com/mf/web/ehi957/hired-logo-dark-padding.png" style="float:left;margin-right:20px;" alt="hired-logo-dark-padding.png" /><p>
On Hired software engineers &amp; designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our <a href="https://hired.com/?utm_content=shownotes-4k&amp;utm_medium=podcast&amp;utm_source=podcastinit">special link</a> to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.
</p>
</div>
<div style="clear:both;margin-top:20px;">
<h3>
<a class="anchor" href="#interview-with-dag-brattli"><span class="octicon octicon-link"></span></a>Interview with Dag Brattli</h3>
<ul><li>Introductions</li>
<li>How did you get introduced to Python?</li>
<li>For our listeners who haven’t heard of it before, can you describe what RxPy is and why someone might want to use it?</li>
<li>What problem domains are best suited for using the Reactive X approach?</li>
<li>What is involved in integrating RxPy into an existing code base?</li>
<li>When should we use RxPy over asyncio or asynchronous workers like Celery?</li>
<li>What resources or tutorials do you recommend people use when trying to understand how and when to use the Reactive X tools?</li>
<li>What in particular about Python lends itself to the ReactiveX pattern, and what features of the language does RxPy leverage in particular in its implementation?</li>
<li>In what ways does the Python implementation of the Reactive X framework differ from those of other languages?</li>
<li>The project description references the use of LINQ for querying the various data streams that RxPy enables consumption of. I had always heard of LINQ in the context of traditional database queries. What makes LINQ a good choice for stream processing?</li>
<li>I mostly hear about ReactiveX in terms of UI design, but the project description seemed to indicate it was much more generally useful. What are some of the less common and more interesting problems that RxPy lends itself to solving?</li>
</ul><h3>
<a class="anchor" href="#picks"><span class="octicon octicon-link"></span></a>Picks</h3>
<ul><li>Tobias
<ul><li><a href="https://github.com/jeffkaufman/icdiff">icdiff</a></li>
<li><a href="http://amzn.to/1OpNF1B">Timeline card game</a></li>
<li><a href="http://griatch-art.deviantart.com/">Griatch’s Digital Art</a></li>
</ul></li>
<li>Chris
<ul><li><a href="https://github.com/jorgenschaefer/elpy">elpy</a></li>
<li><a href="https://github.com/apenwarr/sshuttle">sshuttle</a></li>
<li><a href="http://www.beeradvocate.com/beer/profile/215/2512/">Chimay Grand Reserve</a></li>
</ul></li>
<li>Dag
<ul><li><a href="https://github.com/berkerpeksag/astor">ASTor</a></li>
<li>
<a href="http://amzn.to/1OM3XDl">How To Bake Pi</a> - A book about the mathematics of mathematics</li>
</ul></li>
</ul><h3>
<a class="anchor" href="#keep-in-touch"><span class="octicon octicon-link"></span></a>Keep In Touch</h3>
<ul><li><a href="https://github.com/dbrattli">GitHub</a></li>
<li><a href="https://twitter.com/dbrattli" class="anchor"><span class="octicon octicon-link"></span></a>Links
<ul><li><a href="http://reactivex.io/">Main ReactiveX Site</a></li>
<li>
<a href="https://github.com/ReactiveX/RxJava">rxjava</a> site for documentation</li>
<li><a href="http://rxmarbles.com/">rxmarbles</a></li>
<li><a href="https://channel9.msdn.com/tags/rx/">MSDN Channel 9</a></li>
<li><a href="https://github.com/bintoro/overloading.py">Function Overloading in Python 3</a></li>
</ul><p>The intro and outro music is from Requiem for a Fish <a href="http://freemusicarchive.org/music/The_Freak_Fandango_Orchestra/">The Freak Fandango Orchestra</a> / <a href="http://creativecommons.org/licenses/by-sa/3.0/">CC BY-SA</a></p>
</li>
</ul></div>
]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/rnmzad/Episode26-DagBrattlionRxPy.mp3" length="40303989" type="audio/mpeg"/>
				<itunes:subtitle>Visit our site to listen to past episodes, support the show, and sign up for our newsletter!


Summary

Dag Brattli is an engineer with Microsoft and in ...</itunes:subtitle>
		<itunes:summary>Visit our site to listen to past episodes, support the show, and sign up for our newsletter!


Summary

Dag Brattli is an engineer with Microsoft and in his spare time he created the ported the Reactive Xtensions framework to Python in the form of the RxPy library. In this episode we had the opportunity to speak with Dag and learn more about what ReactiveX is, why it is useful and how you can use it in your Python programs. It is definitely a very powerful programming patern when manipulating data streams which is becoming increasingly common in modern software architectures.


Brief Introduction

Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.
Subscribe on iTunes, Stitcher, TuneIn or RSS

Follow us on Twitter or Google+

Give us feedback! Leave a review on iTunes, Tweet to us, send us an email or leave us a message on Google+

I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at 
I would also like to thank Hired, a job marketplace for developers, for sponsoring this episode of Podcast.__init__. Use the link hired.com/podcastinit to double your signing bonus.
We are recording today on October 2nd, 2015 and your hosts as usual are Tobias Macey and Chris Patti
Today we are interviewing Dag Brattli about the RxPy project

On Hired software engineers  designers can get 5+ interview requests in a week and each offer has salary and equity upfront. With full time and contract opportunities available, users can view the offers and accept or reject them before talking to any company. Work with over 2,500 companies from startups to large public companies hailing from 12 major tech hubs in North America and Europe.  Hired is totally free for users and If you get a job you’ll get a $2,000 “thank you” bonus. If you use our special link to signup, then that bonus will double to $4,000 when you accept a job. If you’re not looking for a job but know someone who is, you can refer them to Hired and get a $1,337 bonus when they accept a job.





Interview with Dag Brattli

Introductions
How did you get introduced to Python?
For our listeners who haven't heard of it before, can you describe what RxPy is and why someone might want to use it?
What problem domains are best suited for using the Reactive X approach?
What is involved in integrating RxPy into an existing code base?
When should we use RxPy over asyncio or asynchronous workers like Celery?
What resources or tutorials do you recommend people use when trying to understand how and when to use the Reactive X tools?
What in particular about Python lends itself to the ReactiveX pattern, and what features of the language does RxPy leverage in particular in its implementation?
In what ways does the Python implementation of the Reactive X framework differ from those of other languages?
The project description references the use of LINQ for querying the various data streams that RxPy enables consumption of. I had always heard of LINQ in the context of traditional database queries. What makes LINQ a good choice for stream processing?
I mostly hear about ReactiveX in terms of UI design, but the project description seemed to indicate it was much more generally useful. What are some of the less common and more interesting problems that RxPy lends itself to solving?

Picks

Tobias

icdiff
Timeline card game
Griatch's Digital Art

Chris

elpy
sshuttle
Chimay Grand Reserve

Dag

ASTor

How To Bake Pi - A book about the mathematics of mathematics


Keep In Touch

GitHub
Links

Main ReactiveX Site

rxjava site for documentation
rxmarbles
MSDN Channel 9
Function Overloading in Python 3
The intro and outro music is from Requiem for a Fish The Freak Fandango Orchestra / CC BY-SA</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>00:33:02</itunes:duration>
		</item>
		<item>
		<title>Episode 25 - uWSGI Core Developers</title>
		<link>http://podcastinit.podbean.com/e/episode-25-uwsgi-core-developers/</link>
		<comments>http://podcastinit.podbean.com/e/episode-25-uwsgi-core-developers/#comments</comments>
		<pubDate>Sat, 03 Oct 2015 03:11:00 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Open Source</category>
	<category>IOT</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-25-uwsgi-core-developers/</guid>

		<description><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, join the mailing list and support the show.</p>
<h3>Summary</h3>

<p>uWSGI is one of the most versatile application servers available. It was originally written for running Python applications and has since gained functionality to support Perl, Ruby, PHP, and more in addition to the incredible feature set. In this episode Tobias got to interview three of the core developers of this project and find out more about how the different pieces of it fit together and what its future holds.</p>
<h3>
<a class="anchor" href="#brief-introduction"><span class="octicon octicon-link"></span></a>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&#38;uo=6&#38;at=&#38;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&#38;refid=s%20%5B...%5D"></a></li></ul>]]></description>
			<content:encoded><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, join the mailing list and support the show.</p>
<h3>Summary</h3>

<p>uWSGI is one of the most versatile application servers available. It was originally written for running Python applications and has since gained functionality to support Perl, Ruby, PHP, and more in addition to the incredible feature set. In this episode Tobias got to interview three of the core developers of this project and find out more about how the different pieces of it fit together and what its future holds.</p>
<h3>
<a class="anchor" href="#brief-introduction"><span class="octicon octicon-link"></span></a>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&amp;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p726240/#">TuneIn</a> or <a href="http://podcastinit.podbean.com/feed/">RSS</a>
</li>
<li>Follow us on <a href="https://twitter.com/Podcast__init__">Twitter</a> or <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a>
</li>
<li>Give us feedback! Leave a review on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="https://twitter.com/Podcast__init__">Tweet</a> to us, send us an <a href="mailto:hosts@podcastinit.com">email</a> or leave us a message on <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a>
</li>
<li>I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at </li>
<li>I would also like to thank Hired, a job marketplace for developers, for sponsoring this episode of Podcast.<strong>init</strong>. Sign up at hired.com/podcastinit to double your signing bonus.</li>
<li>We are recording today on September 22nd, 2015 and your hosts as usual are Tobias Macey and Chris Patti</li>
<li>Today we are interviewing the core developers of uWSGI (Adriano Di Luzio, Riccardo Magliocchetti, and Roberto De Ioris)</li>
</ul><h3>
<a class="anchor" href="#interview-with-uwsgi-core-developers"><span class="octicon octicon-link"></span></a>Interview with uWSGI core developers</h3>
<ul><li>Introductions</li>
<li>How did you get introduced to Python?</li>
<li>For anyone who hasn’t come across the project before, can you explain what uWSGI is and what makes it unique?</li>
<li>How did you architect uWSGI in order to allow for supporting so many different languages?</li>
<li>The feature set of uWSGI is truly incredible. Does this make the code complicated to understand and modify?</li>
<li>Can you describe some of your favorite features in uWSGI?</li>
<li>What have you found to be the most overlooked or underutilized features of uWSGI?</li>
<li>Can you briefly describe how Emperor mode works and how that can be used to handle routing between microservices?</li>
<li>Could you discuss some of the particular features UWSGI provides around load balancing?
<ul><li>Is connection draining supported?</li>
<li>Can nodes be dynamically added and removed from the pool or does the config need to be rewritten and UWSGI restarted?</li>
</ul></li>
<li>The configuration syntax looks like it provides a very rich set of capabilities. Is it based on a general purpose programming language or is it a DSL?</li>
<li>What might be some common use cases for using UWSGI in tandem with another web server like NGINX?</li>
<li>I have read that WSGI does not get along with http/2. Are there any plans to look towards supporting that protocol in some way?</li>
<li>What new capabilities can we look forward to in the future of uWSGI?</li>
</ul><h3>
<a class="anchor" href="#picks"><span class="octicon octicon-link"></span></a>Picks</h3>
<ul><li>Tobias
<ul><li><a href="https://manjaro.github.io/">Manjaro Linux</a></li>
<li><a href="https://www.kde.org/applications/office/kontact/">Kontact</a></li>
<li><a href="http://amzn.to/1Fs2pvl">Blackhat</a></li>
</ul></li>
<li>Riccardo
<ul><li><a href="http://www.jdoqocy.com/p1115tenkem19A729B71334823BA13652977A99222?url=http%3A%2F%2Fshop.oreilly.com%2Fproduct%2F0636920033158.do%3Fcmp%3Daf-prog-books-videos-product_cj_9781491950357_%2525zp&amp;cjsku=0636920033158">Building Microservices book</a></li>
<li><a href="https://github.com/xrmx/django-denis">Django-Denis</a></li>
</ul></li>
<li>Adriano
<ul><li><a href="http://research.microsoft.com/en-us/um/people/lamport/pubs/lamport-paxos.pdf">Paxos Algorithm</a></li>
</ul></li>
<li>Roberto
<ul><li><a href="https://en.wikipedia.org/wiki/The_Brink">The Brink</a></li>
</ul></li>
</ul><h3>
<a class="anchor" href="#keep-in-touch"><span class="octicon octicon-link"></span></a>Keep In Touch</h3>
<ul><li><a href="http://lists.unbit.it/cgi-bin/mailman/listinfo/uwsgi">Mailing List</a></li>
<li>#uWSGI on IRC</li>
<li><a href="https://github.com/unbit/uwsgi">GitHub</a></li>
<li><a href="http://uwsgi-docs.readthedocs.org/en/latest/">latest docs</a></li>
<li>Roberto
<ul><li><a href="https://twitter.com/unbit">Twitter</a></li>
<li><a href="https://github.com/unbit/">GitHub</a></li>
</ul></li>
<li>Adriano
<ul><li><a href="https://github.com/aldur/">GitHub</a></li>
<li><a href="https://twitter.com/AdrianoDiLuzio">Twitter</a></li>
</ul></li>
<li>Riccardo
<ul><li><a href="https://github.com/xrmx">GitHub</a></li>
<li><a href="https://twitter.com/rmistaken">Twitter</a></li>
</ul></li>
</ul>]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/2x9tm8/Episode25-uWSGICoreDevelopers.mp3" length="25483151" type="audio/mpeg"/>
				<itunes:subtitle>Visit our site to listen to past episodes, join the mailing list and support the show.

Summary

uWSGI is one of the most versatile application servers available. ...</itunes:subtitle>
		<itunes:summary>Visit our site to listen to past episodes, join the mailing list and support the show.

Summary

uWSGI is one of the most versatile application servers available. It was originally written for running Python applications and has since gained functionality to support Perl, Ruby, PHP, and more in addition to the incredible feature set. In this episode Tobias got to interview three of the core developers of this project and find out more about how the different pieces of it fit together and what its future holds.


Brief Introduction

Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.
Subscribe on iTunes, Stitcher, TuneIn or RSS

Follow us on Twitter or Google+

Give us feedback! Leave a review on iTunes, Tweet to us, send us an email or leave us a message on Google+

I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at 
I would also like to thank Hired, a job marketplace for developers, for sponsoring this episode of Podcast.init. Sign up at hired.com/podcastinit to double your signing bonus.
We are recording today on September 22nd, 2015 and your hosts as usual are Tobias Macey and Chris Patti
Today we are interviewing the core developers of uWSGI (Adriano Di Luzio, Riccardo Magliocchetti, and Roberto De Ioris)

Interview with uWSGI core developers

Introductions
How did you get introduced to Python?
For anyone who hasn't come across the project before, can you explain what uWSGI is and what makes it unique?
How did you architect uWSGI in order to allow for supporting so many different languages?
The feature set of uWSGI is truly incredible. Does this make the code complicated to understand and modify?
Can you describe some of your favorite features in uWSGI?
What have you found to be the most overlooked or underutilized features of uWSGI?
Can you briefly describe how Emperor mode works and how that can be used to handle routing between microservices?
Could you discuss some of the particular features UWSGI provides around load balancing?

Is connection draining supported?
Can nodes be dynamically added and removed from the pool or does the config need to be rewritten and UWSGI restarted?

The configuration syntax looks like it provides a very rich set of capabilities. Is it based on a general purpose programming language or is it a DSL?
What might be some common use cases for using UWSGI in tandem with another web server like NGINX?
I have read that WSGI does not get along with http/2. Are there any plans to look towards supporting that protocol in some way?
What new capabilities can we look forward to in the future of uWSGI?

Picks

Tobias

Manjaro Linux
Kontact
Blackhat

Riccardo

Building Microservices book
Django-Denis

Adriano

Paxos Algorithm

Roberto

The Brink


Keep In Touch

Mailing List
#uWSGI on IRC
GitHub
latest docs
Roberto

Twitter
GitHub

Adriano

GitHub
Twitter

Riccardo

GitHub
Twitter</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>00:35:00</itunes:duration>
		</item>
		<item>
		<title>Episode 24 - Griatch on Evennia</title>
		<link>http://podcastinit.podbean.com/e/episode-24-griatch-on-evennia/</link>
		<comments>http://podcastinit.podbean.com/e/episode-24-griatch-on-evennia/#comments</comments>
		<pubDate>Tue, 29 Sep 2015 03:33:20 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Open Source</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-24-griatch-on-evennia/</guid>

		<description><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, sign up for our mailing list and support the show.</p>
<h3>
<a class="anchor" href="#summary"><span class="octicon octicon-link"></span></a>Summary</h3>
<p>Griatch is an incredibly talented digital artist, professional astronomer and the maintainer of the Evennia project for creating MUDs in Python. We got the opportunity to speak with him about what MUDs are, why they’re interesting and how Evennia simplifies the process of creating and extending them. If you’re interested in building your own virtual worlds, this episode is a great place to start.</p>
<h3>
<a class="anchor" href="#brief-introduction"><span class="octicon octicon-link"></span></a>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&#38;uo=6&#38;at=&#38;a%20%5B...%5D"></a></li></ul>]]></description>
			<content:encoded><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, sign up for our mailing list and support the show.</p>
<h3>
<a class="anchor" href="#summary"><span class="octicon octicon-link"></span></a>Summary</h3>
<p>Griatch is an incredibly talented digital artist, professional astronomer and the maintainer of the Evennia project for creating MUDs in Python. We got the opportunity to speak with him about what MUDs are, why they’re interesting and how Evennia simplifies the process of creating and extending them. If you’re interested in building your own virtual worlds, this episode is a great place to start.</p>
<h3>
<a class="anchor" href="#brief-introduction"><span class="octicon octicon-link"></span></a>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&amp;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p726240/#">TuneIn</a> or <a href="http://podcastinit.podbean.com/feed/">RSS</a>
</li>
<li>Follow us on <a href="https://twitter.com/Podcast__init__">Twitter</a> or <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a>
</li>
<li>Give us feedback! Leave a review on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="https://twitter.com/Podcast__init__">Tweet</a> to us, send us an <a href="mailto:hosts@podcastinit.com">email</a> or leave us a message on <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a>
</li>
<li>I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at </li>
<li>We are recording today on September 15th, 2015 and your hosts as usual are Tobias Macey and Chris Patti</li>
<li>Today we are interviewing Griatch about the Evennia project</li>
</ul><h3>
<a class="anchor" href="#interview-with-griatch"><span class="octicon octicon-link"></span></a>Interview with Griatch</h3>
<ul><li>Introductions</li>
<li>How did you get introduced to Python?</li>
<li>Can you explain what MUDs are and what that has to do with Evennia?</li>
<li>What is it about MUDs that keeps them interesting long after the technical restrictions that led to their creation are no longer present, especially in light of 3D multiplayer games like WoW and EVE Online?</li>
<li>Can you give us a rundown of the various parts of Evennia (MUD engine, web interface, etc.) and how they fit together?</li>
<li>How does Evennia handle the fact that a MUD world is comprised of many hundreds of objects containing various properties, maintaining consistent, persistent state as players interact with them?</li>
<li>What concurrency tools or paradigms does Evennia use?</li>
<li>During the height of MUDs popularity, one highly sought after feature was the idea of being able to have players travel from one MUD instance to another, would it be possible to implement this in Evennia?</li>
<li>Has the Evennia core team given any thought to adding features to support a richer client interface? Graphical maps or the like?</li>
<li>How difficult would it be to use Evennia to interface with something like Slack or Hipchat for a company-wide MUD? Have you ever heard of someone doing something like that?</li>
<li>Are there any fully fledged running MUDs built with Evennia out in the wild?</li>
</ul><h3>
<a class="anchor" href="#picks"><span class="octicon octicon-link"></span></a>Picks</h3>
<ul><li>Tobias
<ul><li><a href="https://libraries.io/">libraries.io</a></li>
<li><a href="http://jsonapi.org/">jsonapi.org</a></li>
<li><a href="http://marshmallow.readthedocs.org/en/latest/">Marshmallow Marshalling Library</a></li>
</ul></li>
<li>Chris
<ul><li><a href="http://amzn.to/1gpbw41">The End of All Things</a></li>
<li><a href="https://www.davidstea.com/ca_en/36oz-steeper">David’s Tea Steeper</a></li>
<li><a href="https://www.kickstarter.com/projects/1868398473/hello-web-app-intermediate-concepts">Hello Webapp - Intermediate Concepts</a></li>
</ul></li>
<li>Griatch
<ul><li><a href="https://sysbio.ioc.ee/projects/f2py2e/">F2Py</a></li>
<li><a href="http://amzn.to/1gpbOrx">Designing Virtual Worlds</a></li>
<li><a href="http://journal.imaginary-realities.com/">Imaginary Realities</a></li>
<li><a href="http://optionalrealities.com/">Optional Realities</a></li>
</ul></li>
</ul><h3>
<a class="anchor" href="#keep-in-touch"><span class="octicon octicon-link"></span></a>Keep In Touch</h3>
<ul><li><a href="http://www.evennia.com">Evennia Website</a></li>
<li><a href="http://github.com/evennia/evennia">Evennia Github</a></li>
<li><a href="http://irclogs.jackgrigg.com/irc.freenode.net/evennia/today">Freenode IRC Channel #Evennia</a></li>
</ul><h3>
<a class="anchor" href="#links"><span class="octicon octicon-link"></span></a>Links</h3>
<ul><li><a href="https://roll20.net/">roll20</a></li>
</ul>]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/s6iqde/Episode24-GriatchonEvennia.mp3" length="49853493" type="audio/mpeg"/>
				<itunes:subtitle>Visit our site to listen to past episodes, sign up for our mailing list and support the show.


Summary

Griatch is an incredibly talented digital artist, professional ...</itunes:subtitle>
		<itunes:summary>Visit our site to listen to past episodes, sign up for our mailing list and support the show.


Summary

Griatch is an incredibly talented digital artist, professional astronomer and the maintainer of the Evennia project for creating MUDs in Python. We got the opportunity to speak with him about what MUDs are, why they're interesting and how Evennia simplifies the process of creating and extending them. If you're interested in building your own virtual worlds, this episode is a great place to start.


Brief Introduction

Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.
Subscribe on iTunes, Stitcher, TuneIn or RSS

Follow us on Twitter or Google+

Give us feedback! Leave a review on iTunes, Tweet to us, send us an email or leave us a message on Google+

I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at 
We are recording today on September 15th, 2015 and your hosts as usual are Tobias Macey and Chris Patti
Today we are interviewing Griatch about the Evennia project

Interview with Griatch

Introductions
How did you get introduced to Python?
Can you explain what MUDs are and what that has to do with Evennia?
What is it about MUDs that keeps them interesting long after the technical restrictions that led to their creation are no longer present, especially in light of 3D multiplayer games like WoW and EVE Online?
Can you give us a rundown of the various parts of Evennia (MUD engine, web interface, etc.) and how they fit together?
How does Evennia handle the fact that a MUD world is comprised of many hundreds of objects containing various properties, maintaining consistent, persistent state as players interact with them?
What concurrency tools or paradigms does Evennia use?
During the height of MUDs popularity, one highly sought after feature was the idea of being able to have players travel from one MUD instance to another, would it be possible to implement this in Evennia?
Has the Evennia core team given any thought to adding features to support a richer client interface? Graphical maps or the like?
How difficult would it be to use Evennia to interface with something like Slack or Hipchat for a company-wide MUD? Have you ever heard of someone doing something like that?
Are there any fully fledged running MUDs built with Evennia out in the wild?

Picks

Tobias

libraries.io
jsonapi.org
Marshmallow Marshalling Library

Chris

The End of All Things
David's Tea Steeper
Hello Webapp - Intermediate Concepts

Griatch

F2Py
Designing Virtual Worlds
Imaginary Realities
Optional Realities


Keep In Touch

Evennia Website
Evennia Github
Freenode IRC Channel #Evennia

Links

roll20</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>01:14:04</itunes:duration>
		</item>
		<item>
		<title>Episode 23 - Hylang Core Developers</title>
		<link>http://podcastinit.podbean.com/e/episode-23-hylang-core-developers/</link>
		<comments>http://podcastinit.podbean.com/e/episode-23-hylang-core-developers/#comments</comments>
		<pubDate>Sat, 19 Sep 2015 03:28:00 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Learning</category>
	<category>Open Source</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-23-hylang-core-developers/</guid>

		<description><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, and sign up for our mailing list</p>
<h3>Summary</h3>
<p>We got the chance to talk to some of the core developers of Hylang, which is a Lisp dialect that runs on the Python VM! We talked about how it got started, how it works and why you should try it. Of particular interest is our discussion about using Hylang to backport language features, or create entirely new ones due to the power of Lisp and the Python AST (Abstract Syntax Tree). If you need to level up your Lisp knowledge, they gave us a great list of references to help out.</p>
<h3>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&#38;uo=6&#38;at=&#38;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&#38;refid=stpr">Stitcher</a>, <a href="%5B...%5D"></a></li></ul>]]></description>
			<content:encoded><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show, and sign up for our mailing list</p>
<h3>Summary</h3>
<p>We got the chance to talk to some of the core developers of Hylang, which is a Lisp dialect that runs on the Python VM! We talked about how it got started, how it works and why you should try it. Of particular interest is our discussion about using Hylang to backport language features, or create entirely new ones due to the power of Lisp and the Python AST (Abstract Syntax Tree). If you need to level up your Lisp knowledge, they gave us a great list of references to help out.</p>
<h3>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&amp;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p726240/#">TuneIn</a> or <a href="http://podcastinit.podbean.com/feed/">RSS</a></li>
<li>Follow us on <a href="https://twitter.com/Podcast__init__">Twitter</a> or <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>Give us feedback! Leave a review on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="https://twitter.com/Podcast__init__">Tweet</a> to us, send us an <a href="mailto:hosts@podcastinit.com">email</a> or leave us a message on <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at </li>
<li>We are recording today on August 27, 2015 and your hosts as usual are Tobias Macey and Chris Patti</li>
<li>Today we are interviewing Paul Tagliamonte, Tuukka Turto, and Morten Linderud</li>
</ul><h3>Interview with Hylang Developers</h3>
<ul><li>Introductions</li>
<li>How did you get introduced to Python?</li>
<li>Before we get too far along can you explain what Hy is?</li>
<li>What inspired you to create Hy?</li>
<li>What do you recommend as reference material for Python developers to gain familiarity with idiomatic Lisp?</li>
<li>What are some of the problem domains where implementation becomes easier or more elegant as a result of Hy’s LISP syntax?</li>
<li>Given the ability to create powerful macros in Lisp, could Hy be used as a way of prototyping or backporting new language features in Python?</li>
<li>What are some of the most challenging and interesting problems you encountered bringing an alternate syntax to the Python runtime?</li>
<li>While playing around with the Hy REPL I noticed that it does visual matching of parentheses when closing an expression. What other niceties have been included in the REPL?</li>
<li>What are your thoughts on adding autocompletion to the REPL as a way of encouraging discovery and exploration of the Hy language?</li>
<li>Which LISP variant is Hy most similar to, and why?</li>
<li>How does garbage collection work in Hy, and why?</li>
<li>How hard would it be to port existing LISP packages to Hy like MACSYMA or CLOS?</li>
<li>What kind of overhead in terms of runtime performance and memory usage does Hy impose? Has this been a challenge in Hy’s development?</li>
<li>What are some of the most innovative uses for Hy that you have seen or created?</li>
<li>What does the future hold for Hy?</li>
<li>I noticed that there are a large number of core contributors to Hylang and I’m curious how you determine what features to work on?</li>
</ul><h3>Picks</h3>
<ul><li>Tobias
<ul><li><a href="http://spacy.io/displacy/">Displacy</a></li>
<li><a href="http://amzn.to/1V0WkHO">The Golem and the Jinni</a> by Helene Wecker - Read it on <a href="https://www.scribd.com/g/4ko3os">Scribd</a></li>
<li><a href="https://www.safaribooksonline.com/">Safari Online</a></li>
</ul></li>
<li>Chris
<ul><li><a href="https://kapeli.com/dash">Dash</a> and <a href="http://zealdocs.org/">Zeal</a></li>
<li><a href="http://www.infiniteguest.org/reasonably-sound/">Reasonably sound (podcast)</a></li>
<li><a href="https://www.youtube.com/user/pbsideachannel">PBS Idea Channel (Youtube)</a></li>
</ul></li>
<li>Paul
<ul><li><a href="http://wiki.debian.org/reproduciblebuilds">Reproducible Build Project</a></li>
<li><a href="https://modelviewculture.com/">Model View Culture</a></li>
</ul></li>
<li>Tuukka
<ul><li><a href="https://www.youtube.com/watch?v=2Op3QLzMgSY&amp;list=PL8FE88AA54363BC46">SICP Lecture</a></li>
<li><a href="http://fsharp.org">F#</a></li>
<li><a href="http://reactivex.io/">ReactiveX</a></li>
<li><a href="http://www.onegameamonth.com/">1 Game Per Month (#!GAM)</a></li>
</ul></li>
<li>Morten
<ul><li><a href="http://amzn.to/1KnBYna">Hackers</a></li>
<li><a href="http://amzn.to/1KrNFZg">Mr. Robot</a></li>
</ul></li>
</ul><h3>Keep In Touch</h3>
<ul><li>Paul
<ul><li><a href="https://twitter.com/paultag">Twitter</a></li>
<li>paultag on IRC</li>
<li><a href="http://pault.ag">Website</a></li>
</ul></li>
<li>Tuukka
<ul><li><a href="https://twitter.com/tuuturto">Twitter</a></li>
</ul></li>
<li>
<p>Morten</p>
<ul><li><a href="https://twitter.com/mortenlinderud">Twitter</a>
<h3>Links</h3>
</li>
</ul></li>
<li>
<p><a href="http://docs.hylang.org/en/latest/">Core features of Hylang</a></p>
</li>
<li><a href="https://github.com/algernon/adderall">Adderall - minicanron in hylang</a></li>
<li>Books
<ul><li><a href="http://amzn.to/1KrOnFS">Joy of Clojure</a></li>
<li><a href="http://amzn.to/1KnCu4D">Let over Lambda</a></li>
<li><a href="http://amzn.to/1iDyLcs">Land of Lisp</a></li>
<li><a href="http://amzn.to/1V0WYVQ">Clojure programming</a></li>
</ul></li>
<li><a href="https://github.com/tuturto/pyherc">Herculeum - Tukka’s DSL for roguelikes</a></li>
<li><a href="https://github.com/pixie-lang/pixie">Pixie - Lisp in RPython</a></li>
<li><a href="https://pyos.github.io/dg/">Dogelang</a></li>
<li><a href="https://github.com/thomasballinger/bphython">BPython</a></li>
<li><a href="https://github.com/trending?l=hy">Github trending repos with Hylang</a></li>
<li><a href="https://github.com/edne/pineal">Pineal</a></li>
<li><a href="https://github.com/hylang/hydiomatic">hydiomatic - Algernon</a></li>
</ul>]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/8akbpi/Episode23-HylangCoreDevelopers.mp3" length="66055750" type="audio/mpeg"/>
				<itunes:subtitle>Visit our site to listen to past episodes, support the show, and sign up for our mailing list

Summary

We got the chance to talk to some ...</itunes:subtitle>
		<itunes:summary>Visit our site to listen to past episodes, support the show, and sign up for our mailing list

Summary

We got the chance to talk to some of the core developers of Hylang, which is a Lisp dialect that runs on the Python VM! We talked about how it got started, how it works and why you should try it. Of particular interest is our discussion about using Hylang to backport language features, or create entirely new ones due to the power of Lisp and the Python AST (Abstract Syntax Tree). If you need to level up your Lisp knowledge, they gave us a great list of references to help out.

Brief Introduction

Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.
Subscribe on iTunes, Stitcher, TuneIn or RSS
Follow us on Twitter or Google+
Give us feedback! Leave a review on iTunes, Tweet to us, send us an email or leave us a message on Google+
I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at 
We are recording today on August 27, 2015 and your hosts as usual are Tobias Macey and Chris Patti
Today we are interviewing Paul Tagliamonte, Tuukka Turto, and Morten Linderud
Interview with Hylang Developers

Introductions
How did you get introduced to Python?
Before we get too far along can you explain what Hy is?
What inspired you to create Hy?
What do you recommend as reference material for Python developers to gain familiarity with idiomatic Lisp?
What are some of the problem domains where implementation becomes easier or more elegant as a result of Hy's LISP syntax?
Given the ability to create powerful macros in Lisp, could Hy be used as a way of prototyping or backporting new language features in Python?
What are some of the most challenging and interesting problems you encountered bringing an alternate syntax to the Python runtime?
While playing around with the Hy REPL I noticed that it does visual matching of parentheses when closing an expression. What other niceties have been included in the REPL?
What are your thoughts on adding autocompletion to the REPL as a way of encouraging discovery and exploration of the Hy language?
Which LISP variant is Hy most similar to, and why?
How does garbage collection work in Hy, and why?
How hard would it be to port existing LISP packages to Hy like MACSYMA or CLOS?
What kind of overhead in terms of runtime performance and memory usage does Hy impose? Has this been a challenge in Hy's development?
What are some of the most innovative uses for Hy that you have seen or created?
What does the future hold for Hy?
I noticed that there are a large number of core contributors to Hylang and I'm curious how you determine what features to work on?
Picks

Tobias
Displacy
The Golem and the Jinni by Helene Wecker - Read it on Scribd
Safari Online

Chris
Dash and Zeal
Reasonably sound (podcast)
PBS Idea Channel (Youtube)

Paul
Reproducible Build Project
Model View Culture

Tuukka
SICP Lecture
F#
ReactiveX
1 Game Per Month (#!GAM)

Morten
Hackers
Mr. Robot

Keep In Touch

Paul
Twitter
paultag on IRC
Website

Tuukka
Twitter

Morten
Twitter
Links

Core features of Hylang
Adderall - minicanron in hylang
Books
Joy of Clojure
Let over Lambda
Land of Lisp
Clojure programming

Herculeum - Tukka's DSL for roguelikes
Pixie - Lisp in RPython
Dogelang
BPython
Github trending repos with Hylang
Pineal
hydiomatic - Algernon</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>00:55:49</itunes:duration>
		</item>
		<item>
		<title>Episode 22 - Bryan Van de Ven on Bokeh</title>
		<link>http://podcastinit.podbean.com/e/episode-22-bryan-van-de-ven-on-bokeh/</link>
		<comments>http://podcastinit.podbean.com/e/episode-22-bryan-van-de-ven-on-bokeh/#comments</comments>
		<pubDate>Tue, 08 Sep 2015 12:04:12 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Data Science</category>
	<category>Data Analysis</category>
	<category>Data Visualization</category>
	<category>Community</category>
	<category>Open Source</category>
	<category>Internet of Things</category>
	<category>IOT</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-22-bryan-van-de-ven-on-bokeh/</guid>

		<description><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, subscribe to our mailing list, and donate to the show.</p>
<h3>Summary</h3>
<p>Bryan Van de Ven is the project maintainer for Bokeh, a plotting and visualization toolkit that allows Python developers to easily create attractive interactive visualizations for the web. We talked about the project’s history, some interesting use cases for it, and what its near future looks like. Bryan also told us about how Bokeh compares to some of the other visualization libraries in both Python and Javascript, as well as how to use Bokeh from other languages such as Scala and Lua.</p>
<h3>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&#38;uo=6&#38;at=&#38;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&#38;refid=stpr">St [...]</a></li></ul>]]></description>
			<content:encoded><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, subscribe to our mailing list, and donate to the show.</p>
<h3>Summary</h3>
<p>Bryan Van de Ven is the project maintainer for Bokeh, a plotting and visualization toolkit that allows Python developers to easily create attractive interactive visualizations for the web. We talked about the project’s history, some interesting use cases for it, and what its near future looks like. Bryan also told us about how Bokeh compares to some of the other visualization libraries in both Python and Javascript, as well as how to use Bokeh from other languages such as Scala and Lua.</p>
<h3>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&amp;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p726240/#">TuneIn</a> or <a href="http://podcastinit.podbean.com/feed/">RSS</a></li>
<li>Follow us on <a href="https://twitter.com/Podcast__init__">Twitter</a> or <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>Give us feedback! Leave a review on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="https://twitter.com/Podcast__init__">Tweet</a> to us, send us an <a href="mailto:hosts@podcastinit.com">email</a> or leave us a message on <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at </li>
<li>There is a new Python podcast that just started up recently! It’s called the Python Test Podcast and covers the world of testing in Python, so go ahead and give it a listen. You can find it at </li>
<li>We are recording today on Aug 18th, 2015 and your hosts as usual are Tobias Macey and Chris Patti</li>
<li>Today we are interviewing Bryan Van de Ven about the Bokeh project</li>
</ul><h3>Interview with Bryan Van de Ven</h3>
<ul><li>Introductions</li>
<li>How did you get introduced to Python?</li>
<li>For our listeners who aren’t familiar with what Bokeh is, can you describe it?</li>
<li>What inspired you to create Bokeh?</li>
<li>Bokeh has integrations with some of the other Python graphing libraries such as matplotlib and seaborn. I can see how this would be useful to easily update existing code to publish visualizations on the web. Are there other use cases for these integrations?</li>
<li>I noticed that Bokeh has bindings for some languages other than Python. R and Julia are obvious candidates due to their strong focus on analytics work, I’m curious what made you choose Scala and Lua as languages worth targeting?</li>
<li>Do you lose any capabilities using the javascript library by itself?</li>
<li>Other than the sample data sets that come with Bokeh, can you suggest a good publicly available data set with accompanying tutorial for people who want to get started with data visualization using Bokeh?</li>
<li>Can you provide some comparisons between D3.js and the Bokeh javascript library in terms of capabilities and performance?</li>
<li>The Bokeh project has a server component that allows for streaming data to clients. Can you describe the architecture of that and some example uses for it?</li>
<li>Why was the server written as a Flask blueprint as opposed to making it a component of another framework such as Django or Pyramid and how difficult would it be to port the functionality to another system?</li>
<li>What’s the most interesting use of Bokeh you’ve seen?</li>
<li>Are you aware of any projects in other languages that are comparable to Bokeh?</li>
</ul><h3>Picks</h3>
<ul><li>Tobias
<ul><li><a href="https://wappalyzer.com/">wappalyzer</a></li>
<li><a href="http://amzn.to/1TT6fi4">The Graveyard Book</a> by Neil Gaiman</li>
</ul></li>
<li>Chris
<ul><li><a href="https://gist.github.com/mnot/382aca0b23b6bf082116">Edward Snowden Meets the IETF</a></li>
<li><a href="http://amzn.to/1VKSYLs">Between the World and Me</a></li>
<li><a href="https://untappd.com/home">Untapp’d</a></li>
</ul></li>
<li>Bryan
<ul><li>Audiobooks
<ul><li><a href="https://www.scribd.com/g/4ko3os">Scribd</a> - Subscription service for ebooks and audio books with a great selection</li>
<li><a href="http://www.amazon.com/Audible-Free-Trial-Digital-Membership/dp/B00NB86OYE/?ref_=assoc_tag_ph_1422899139880&amp;_encoding=UTF8&amp;camp=1789&amp;creative=9325&amp;linkCode=pf4&amp;tag=podcastinit-20&amp;linkId=RAXKXNVMHTTMRQVS">Try Audible and Get Two Free Audiobooks</a><img src="http://ir-na.amazon-adsystem.com/e/ir?t=podcastinit-20&amp;l=pf4&amp;o=1" width="1" height="1" border="0" alt="" style="border:none;margin:0px;" /></li>
</ul></li>
<li><a href="http://amzn.to/1MxHLun">Cartographies of Time</a></li>
<li><a href="http://postmodernjukebox.com/">The Post-Modern Jukebox</a></li>
</ul></li>
</ul><h3>Keep In Touch</h3>
<ul><li><a href="https://twitter.com/bokehplots">Twitter</a></li>
<li><a href="https://groups.google.com/a/continuum.io/forum/#!forum/bokeh">Mailing List</a></li>
<li><a href="http://bokeh.pydata.org">Bokeh Web Site</a></li>
</ul><h3>Links</h3>
<ul><li><a href="https://github.com/vispy">vispy</a></li>
<li><a href="https://github.com/wrobstory/vincent">Vincent</a></li>
<li><a href="https://trifacta.github.io/vega/">vega</a></li>
<li><a href="http://d3js.org/">D3.js</a></li>
<li><a href="http://nbviewer.ipython.org/github/bokeh/bokeh-notebooks/blob/master/index.ipynb">nbviewer.org bokeh page</a></li>
<li><a href="http://labrosa.ee.columbia.edu/millionsong/">million song dataset</a></li>
<li><a href="http://data.gov">data.gov</a></li>
<li><a href="http://ggplot.yhathq.com/">ggplot</a> / <a href="http://ggvis.rstudio.com/">ggvis</a></li>
<li><a href="http://www.wolfram.com/mathematica/">mathematica</a></li>
</ul>]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/qr5hu8/Episode22-BryanVandeVentonBokeh.mp3" length="73186664" type="audio/mpeg"/>
				<itunes:subtitle>Visit our site to listen to past episodes, subscribe to our mailing list, and donate to the show.

Summary

Bryan Van de Ven is the project maintainer ...</itunes:subtitle>
		<itunes:summary>Visit our site to listen to past episodes, subscribe to our mailing list, and donate to the show.

Summary

Bryan Van de Ven is the project maintainer for Bokeh, a plotting and visualization toolkit that allows Python developers to easily create attractive interactive visualizations for the web. We talked about the project's history, some interesting use cases for it, and what its near future looks like. Bryan also told us about how Bokeh compares to some of the other visualization libraries in both Python and Javascript, as well as how to use Bokeh from other languages such as Scala and Lua.

Brief Introduction

Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.
Subscribe on iTunes, Stitcher, TuneIn or RSS
Follow us on Twitter or Google+
Give us feedback! Leave a review on iTunes, Tweet to us, send us an email or leave us a message on Google+
I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at 
There is a new Python podcast that just started up recently! It's called the Python Test Podcast and covers the world of testing in Python, so go ahead and give it a listen. You can find it at 
We are recording today on Aug 18th, 2015 and your hosts as usual are Tobias Macey and Chris Patti
Today we are interviewing Bryan Van de Ven about the Bokeh project
Interview with Bryan Van de Ven

Introductions
How did you get introduced to Python?
For our listeners who aren't familiar with what Bokeh is, can you describe it?
What inspired you to create Bokeh?
Bokeh has integrations with some of the other Python graphing libraries such as matplotlib and seaborn. I can see how this would be useful to easily update existing code to publish visualizations on the web. Are there other use cases for these integrations?
I noticed that Bokeh has bindings for some languages other than Python. R and Julia are obvious candidates due to their strong focus on analytics work, I'm curious what made you choose Scala and Lua as languages worth targeting?
Do you lose any capabilities using the javascript library by itself?
Other than the sample data sets that come with Bokeh, can you suggest a good publicly available data set with accompanying tutorial for people who want to get started with data visualization using Bokeh?
Can you provide some comparisons between D3.js and the Bokeh javascript library in terms of capabilities and performance?
The Bokeh project has a server component that allows for streaming data to clients. Can you describe the architecture of that and some example uses for it?
Why was the server written as a Flask blueprint as opposed to making it a component of another framework such as Django or Pyramid and how difficult would it be to port the functionality to another system?
What's the most interesting use of Bokeh you've seen?
Are you aware of any projects in other languages that are comparable to Bokeh?
Picks

Tobias
wappalyzer
The Graveyard Book by Neil Gaiman

Chris
Edward Snowden Meets the IETF
Between the World and Me
Untapp'd

Bryan
Audiobooks
Scribd - Subscription service for ebooks and audio books with a great selection
Try Audible and Get Two Free Audiobooks

Cartographies of Time
The Post-Modern Jukebox

Keep In Touch

Twitter
Mailing List
Bokeh Web Site
Links

vispy
Vincent
vega
D3.js
nbviewer.org bokeh page
million song dataset
data.gov
ggplot / ggvis
mathematica</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>00:57:19</itunes:duration>
		</item>
		<item>
		<title>Episode 21 - Jessica McKellar</title>
		<link>http://podcastinit.podbean.com/e/episode-21-jessica-mckellar/</link>
		<comments>http://podcastinit.podbean.com/e/episode-21-jessica-mckellar/#comments</comments>
		<pubDate>Tue, 01 Sep 2015 02:04:32 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Learning</category>
	<category>Community</category>
	<category>Open Source</category>
	<category>Diversity</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-21-jessica-mckellar/</guid>

		<description><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show and sign up for our mailing list.</p>
<h3>Summary</h3>
<p>We got the chance to talk to Jessica McKellar about her work in the Python community. She told us about her experience as a director for the PSF, working as the diversity outreach manager for PyCon, and being a champion for improving the on-boarding experience for new users of Python. We also discussed perceptions around the performance of Python and some of the work being done to improve concurrency, as well as her work with OpenHatch.</p>
<h3>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&#38;uo=6&#38;at=&#38;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&#38;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p726240/#%20%5B...%5D"></a></li></ul>]]></description>
			<content:encoded><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, support the show and sign up for our mailing list.</p>
<h3>Summary</h3>
<p>We got the chance to talk to Jessica McKellar about her work in the Python community. She told us about her experience as a director for the PSF, working as the diversity outreach manager for PyCon, and being a champion for improving the on-boarding experience for new users of Python. We also discussed perceptions around the performance of Python and some of the work being done to improve concurrency, as well as her work with OpenHatch.</p>
<h3>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&amp;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p726240/#">TuneIn</a> or <a href="http://podcastinit.podbean.com/feed/">RSS</a></li>
<li>Follow us on <a href="https://twitter.com/Podcast__init__">Twitter</a> or <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>Give us feedback! Leave a review on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="https://twitter.com/Podcast__init__">Tweet</a> to us, send us an <a href="mailto:hosts@podcastinit.com">email</a> or leave us a message on <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at </li>
<li>We are recording today on Aug, 12 2015 and your hosts as usual are Tobias Macey and Chris Patti</li>
<li>Today we are interviewing Jessica McKellar</li>
</ul><h3>Interview with Jessica McKellar</h3>
<ul><li>Introductions</li>
<li>How did you get introduced to Python?
<ul><li>Attended MIT, originally for Chemistry</li>
<li>Had friends pursuing CS degrees</li>
<li>Toolset and skills seemed worth investingating</li>
<li>Led to BA and MS</li>
<li>MIT was in transition from LISP to Python</li>
</ul></li>
<li>Can you describe what your responsibilities are as a director of the PSF?
<ul><li>A lot of outreach and investment in the community</li>
</ul></li>
<li>Do you think the PSF does a good job of making people aware of what it is, what it does for the community, and how they can help?
<ul><li>Struggled with this historically but has gotten better in recent years</li>
<li>Website re-design has helped</li>
</ul></li>
<li>A large focus of your work in the community has been around improving the experience of users who are new to Python and programming in general and I noticed that you just received the Frank Willison Memorial Award for your contributions to outreach and education in the Python community. What is your motivation behind this particular focus?
<ul><li>Great deal of empathy for newcomers due to personal history</li>
<li>Knowing how to program changes how you think about the world</li>
</ul></li>
<li>Has the situation for newcomers running Windows who wish to try Python gotten any better since your keynote at Kiwi PyCon?
<ul><li>Some vaguaries of setup have gotten better with recent versions (e.g. setting path variables)</li>
<li>Ruby has in-browser tutorial to get people hooked</li>
</ul></li>
<li>Do “Batteries Included’ distributions like Anaconda help or is it the same problem of visibility you discussed in your talk?
<ul><li>Informatino flow / what are you default options question</li>
<li>We could be much more opinionated about this</li>
</ul></li>
<li>You have presented a number of times about the future of Python and how we can all help to make sure that story is a happy one. How has the material for that talk changed over the past few years?
<ul><li>As a largely volunteer community, how to maximize the impact of the bandwidth that we have</li>
<li>Focus on the ‘top of the funnel’ to win over new users</li>
<li>Python has the steepest positive curve of any language</li>
<li>Community should invest in AP high school Python curriculum</li>
</ul></li>
<li>What do you anticipate will be the talking points for this topic over the next few years?
<ul><li>We need to be smart about which areas we invest in to ensure success e.g. mobile, web, desktop.</li>
</ul></li>
<li>If you could grade the Python community on how well they have listened to and acted on the calls to action in your talks over the past few years, what would you give them?
<ul><li>Rallying large groups of volunteers is a hard problem</li>
<li>We need to think about commercial partnerships in key areas</li>
</ul></li>
<li>In your Kiwi PyCon talk you mentioned Kivy as an example of a great way to do mobile software development in Python. It feels to me like the Kivy team are still not getting the community involvement and buy in they should. How can we help make Kivy the mobile app development platform of choice for beginners?
<ul><li>This will be a tough battle because Python is not the default platform for mobile compared to Java for Android, Objective C, Swift</li>
<li>Users vote with their feet depending on what provides the most value to them</li>
<li>Opportunity for a virtuous cycle here</li>
</ul></li>
<li>Game development as an entree to programming has been a recurring theme on our podcast. Has the Python game dev scene improved at all since 2013? And do you still see the same pitfalls holding people back (like app packaging), or have we moved on to different problems?
<ul><li>The problems are largely the same</li>
<li>Status quo still feels pretty broken</li>
<li>Creative experiments around this definitely make sense for the community</li>
<li>KivEnt could be a win here because Kivy apps are free standing binaries and require no dependencies.</li>
</ul></li>
<li>What do you view as the biggest threats to the popularity of Python currently and what can we do to address them?
<ul><li>Other languages gaining popularity where Python has historically been strong (e.g. server-side development)</li>
<li>A lot of this may be a perception issue</li>
<li>May be largely a marketing problem</li>
</ul></li>
<li>I understand that you were involved in the formation of the Open Hatch organization. Can you describe what Open Hatch does and how our listeners can get involved?
<ul><li>Non-profit dedicated to lowering barriers to entry for open source contribution</li>
<li>Host workshops in colleges, underserved communities, etc.</li>
</ul></li>
</ul><h3>Picks</h3>
<ul><li>Tobias
<ul><li><a href="https://justgetflux.com/">F.lux</a></li>
<li><a href="http://lightyear.fm">Lightyear.fm</a></li>
<li><a href="https://www.python.org/dev/peps/pep-0401/">PEP 0401</a></li>
</ul></li>
<li>Chris
<ul><li><a href="http://benedictjacka.co.uk/alex-verus/us/">The Alex Verus Series by Benedict Jacka</a></li>
<li><a href="https://www.youtube.com/watch?v=nsGYet02bEk">Rick Dillon’s Org-mode structure manipulation tutorial</a></li>
<li><a href="http://amzn.to/1FdUigj">Dominion</a></li>
</ul></li>
<li>Jessica
<ul><li><a href="https://gimletmedia.com/show/reply-all/">Reply All Podcast</a></li>
<li><a href="https://www.ietf.org/rfc/rfc959.txt">RFC 959</a> - original FTP RFC
<ul><li>Go read some RFCs!</li>
</ul></li>
<li><a href="http://www.anrdoezrs.net/ce106vpyvpxCKLIDKMICEEFJDEMLCEHGDKIILKKDDD?url=http%3A%2F%2Fshop.oreilly.com%2Fproduct%2F0636920045267.do%3Fcmp%3Daf-prog-books-videos-product_cj_9781491939369_%2525zp&amp;cjsku=0636920045267">Think Stats</a></li>
</ul></li>
</ul><h3>Keep In Touch</h3>
<ul><li>Google for “Jesstess”</li>
</ul><h3>Conference Presentations</h3>
<ul><li><a href="https://www.youtube.com/watch?v=CI_RPSbsRw8">https://www.youtube.com/watch?v=CI_RPSbsRw8</a></li>
<li><a href="https://www.youtube.com/watch?v=2p-FecWny_Q">https://www.youtube.com/watch?v=2p-FecWny_Q</a></li>
<li><a href="https://www.youtube.com/watch?v=lH9KJBr_R1Q">https://www.youtube.com/watch?v=lH9KJBr_R1Q</a></li>
<li><a href="https://www.youtube.com/watch?v=d1a4Jbjc-vU">https://www.youtube.com/watch?v=d1a4Jbjc-vU</a></li>
</ul>]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/ydxatv/Episode21-JessicaMcKellar.mp3" length="40173100" type="audio/mpeg"/>
				<itunes:subtitle>Visit our site to listen to past episodes, support the show and sign up for our mailing list.
Summary

We got the chance to talk to Jessica ...</itunes:subtitle>
		<itunes:summary>Visit our site to listen to past episodes, support the show and sign up for our mailing list.
Summary

We got the chance to talk to Jessica McKellar about her work in the Python community. She told us about her experience as a director for the PSF, working as the diversity outreach manager for PyCon, and being a champion for improving the on-boarding experience for new users of Python. We also discussed perceptions around the performance of Python and some of the work being done to improve concurrency, as well as her work with OpenHatch.

Brief Introduction

Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.
Subscribe on iTunes, Stitcher, TuneIn or RSS
Follow us on Twitter or Google+
Give us feedback! Leave a review on iTunes, Tweet to us, send us an email or leave us a message on Google+
I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at 
We are recording today on Aug, 12 2015 and your hosts as usual are Tobias Macey and Chris Patti
Today we are interviewing Jessica McKellar
Interview with Jessica McKellar

Introductions
How did you get introduced to Python?
Attended MIT, originally for Chemistry
Had friends pursuing CS degrees
Toolset and skills seemed worth investingating
Led to BA and MS
MIT was in transition from LISP to Python

Can you describe what your responsibilities are as a director of the PSF?
A lot of outreach and investment in the community

Do you think the PSF does a good job of making people aware of what it is, what it does for the community, and how they can help?
Struggled with this historically but has gotten better in recent years
Website re-design has helped

A large focus of your work in the community has been around improving the experience of users who are new to Python and programming in general and I noticed that you just received the Frank Willison Memorial Award for your contributions to outreach and education in the Python community. What is your motivation behind this particular focus?
Great deal of empathy for newcomers due to personal history
Knowing how to program changes how you think about the world

Has the situation for newcomers running Windows who wish to try Python gotten any better since your keynote at Kiwi PyCon?
Some vaguaries of setup have gotten better with recent versions (e.g. setting path variables)
Ruby has in-browser tutorial to get people hooked

Do "Batteries Included' distributions like Anaconda help or is it the same problem of visibility you discussed in your talk?
Informatino flow / what are you default options question
We could be much more opinionated about this

You have presented a number of times about the future of Python and how we can all help to make sure that story is a happy one. How has the material for that talk changed over the past few years?
As a largely volunteer community, how to maximize the impact of the bandwidth that we have
Focus on the 'top of the funnel' to win over new users
Python has the steepest positive curve of any language
Community should invest in AP high school Python curriculum

What do you anticipate will be the talking points for this topic over the next few years?
We need to be smart about which areas we invest in to ensure success e.g. mobile, web, desktop.

If you could grade the Python community on how well they have listened to and acted on the calls to action in your talks over the past few years, what would you give them?
Rallying large groups of volunteers is a hard problem
We need to think about commercial partnerships in key areas

In your Kiwi PyCon talk you mentioned Kivy as an example of a great way to do mobile software development in Python. It feels to me like the Kivy team are still not getting the community involvement and buy in they should. How can we help make Kivy the mobile app development platform of choice for beginners?
This will be </itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>00:51:24</itunes:duration>
		</item>
		<item>
		<title>Episode 20 - Static Site Generators with Justin Mayer and Roberto Alsina</title>
		<link>http://podcastinit.podbean.com/e/episode-20-static-site-generators-with-justin-mayer-and-roberto-alsina/</link>
		<comments>http://podcastinit.podbean.com/e/episode-20-static-site-generators-with-justin-mayer-and-roberto-alsina/#comments</comments>
		<pubDate>Tue, 25 Aug 2015 11:32:34 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Open Source</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-20-static-site-generators-with-justin-mayer-and-roberto-alsina/</guid>

		<description><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, comment on the show or find out more about us.</p>
<h3>Summary</h3>
<p>In this episode we had the opportunity to discuss the world of static site generators with Roberto Alsina of the Nikola project and Justin Mayer of the Pelican project. They explained what static site generators are and why you might want to use one. We asked about why you should choose a Python based static site generator, theming and markup support as well as metadata formats and documentation. We also debated what makes Pelican and Nikola so popular compared to other projects.</p>
<h3>Brief Introduction</h3>
<ul><li>Welcome to Podcast.__init__ the podcast about Python and the people who make it great</li>
<li>Follow us on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&#38;uo=6&#38;at=&#38;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&#38;refid=stpr">Stitcher</a> or <a href=""></a></li></ul>]]></description>
			<content:encoded><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, comment on the show or find out more about us.</p>
<h3>Summary</h3>
<p>In this episode we had the opportunity to discuss the world of static site generators with Roberto Alsina of the Nikola project and Justin Mayer of the Pelican project. They explained what static site generators are and why you might want to use one. We asked about why you should choose a Python based static site generator, theming and markup support as well as metadata formats and documentation. We also debated what makes Pelican and Nikola so popular compared to other projects.</p>
<h3>Brief Introduction</h3>
<ul><li>Welcome to Podcast.__init__ the podcast about Python and the people who make it great</li>
<li>Follow us on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&amp;refid=stpr">Stitcher</a> or <a href="http://tunein.com/radio/Podcast__init__-p726240/">TuneIn</a></li>
<li>Give us feedback on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="https://twitter.com/Podcast__init__">Twitter</a>, <a href="mailto:hosts@podcastinit.com">email</a> or <a href="http://podcastinit.com">Disqus</a></li>
<li>We donate our time to you because we love Python and its community. If you would like to return the favor you can send us a <a>donation</a>}. Everything that we don’t spend on producing the show will be donated to the PSF to keep the community alive.</li>
<li>Date of recording - August 08, 2015</li>
<li>Hosts Tobias Macey and Chris Patti</li>
<li>Today we are interviewing the core developers of Nikola and Pelican about static site generators</li>
</ul><h3>Interview</h3>
<ul><li>Introductions
<ul><li>Monitorial.net &lt;- Justin</li>
<li>Upriise &lt;- Justin</li>
<li>Works for Canonical &lt;- Roberto</li>
</ul></li>
<li>How did you get introduced to Python?
<ul><li>Justin:
<ul><li>Needed a way to get order data to payment processor for commerce company</li>
</ul></li>
<li>Roberto:
<ul><li>1996 got involved with Linux</li>
<li>Found XForms</li>
<li>Wrote Python bindings</li>
</ul></li>
</ul></li>
<li>For our listeners who might not know, what are static site generators and what are some of the advantages they bring to the table over other similar systems that perform the same function?
<ul><li>Roberto
<ul><li>Remove all the effort from the computer that serves the website</li>
<li>Server runs no code</li>
<li>Smaller ssurface area for security purposes</li>
</ul></li>
<li>Justin
<ul><li>Better performance - important for responsiveness and uptime</li>
<li>Easier deployment and maintenance</li>
<li>Easier versioning and migration</li>
<li>Can version both input and output</li>
</ul></li>
</ul></li>
<li>There are a number of static site generators available in virtually every language. Why would a user want to leverage a Python solution vs Ruby, javascript, Go, etc.?
<ul><li>ReStructured TeXT is best supported in Python</li>
<li>Good language for supporting various markup syntaxes</li>
</ul></li>
<li>Most static site generators seem to have a primary focus on blogging. What is it about these tools that lend themselves so well to that use case?
<ul><li>The author of the tools shape the purpose of the tool</li>
<li>Most popular among programmers which is a demographic that is likely to have a blog
<ul><li>Workflow is similar to what programmers are used to</li>
</ul></li>
<li>Still useful for non-chronological pages due to templating system</li>
</ul></li>
<li>Something that struck me comparing the two systems is that they have largely the same kinds of data going into the metadata block for each post, but it’s expressed in a different / incompatible way in each. Have you ever considered agreeing on a standard and even advertising it as such so all static site generators could make use of it?</li>
<li>Challenging because of the idiosyncratic way problems are solved in each system</li>
<li>Wouldn’t end up with the same site even if metadata were identical</li>
<li>Roberto &amp; Justin are talking, this may happen!</li>
<li>The themes in Pelican and Nikola have very different feels and one of the things that initially drew me to Pelican is the larger catalog of themes available. What are some of the challenges involved in creating a theme for a static site generator?</li>
<li>Many programmers who write SSGs aren’t amazing at HTML</li>
<li>Pelican and Nikola seem to be the most widely used projects for creating static sites using Python. What do you think is the key to that popularity?
<ul><li>Frequent updates, good documentation and large community</li>
<li>Easy to get up and running
<ul><li>Need to be productive inside of 2 minutes</li>
</ul></li>
<li>Good first impressions are key</li>
<li>Importance of extensibility</li>
<li>Core modularity and availability of plugins</li>
</ul></li>
<li>A lot of people have written about the importance (and difficulty) of writing and maintaining good documentation in open source projects. Nikola’s documentation is excellent. How did Nikola manage this in its development process and what can other open source projects learn from this?
<ul><li>No secrets - just do it and keep it updated.</li>
<li>Need to look at the tool as if using it for the first time</li>
</ul></li>
<li>What are some specific examples of unique and interesting uses your site generators have been put to?
<ul><li>Justin:
<ul><li>kernel.org, Debian, Chicago Linux Users, TransFX (translation house) all use Pelican</li>
<li>Embedding Jupyter notebooks and MathML rendering in posts</li>
<li>Site search plugin</li>
</ul></li>
<li>Nikola:
<ul><li>Big adoption in the sciences (Jupyter notebook embedding supported in core)</li>
<li>Output is forever</li>
<li>Plugin to trigger internet archive to reindex site</li>
</ul></li>
</ul></li>
<li>Nikola’s flexible deployment architecture (e.g. the use of doit tasks) seems to lend itself to some interesting use cases. What was the inspiration for this?
<ul><li>Build was taking 1 1/2 hours, doit allowed for incremental generation</li>
<li>Doit is a generic task system. Nikola has no “main” it’s a collection of doit tasks.</li>
</ul></li>
<li>Is there any specific help that you would like to ask of the audience?
<ul><li>Contribute themes</li>
<li>Help with reviewing issues and pull requests</li>
</ul></li>
</ul><h3>Picks</h3>
<ul><li>Tobias
<ul><li><a href="http://termux.com/">Termux</a></li>
<li><a href="https://github.com/warner/magic-wormhole">Magic Wormhole</a></li>
<li><a href="http://crsmithdev.com/arrow/">Arrow</a></li>
</ul></li>
<li>Chris
<ul><li><a href="https://www.gnu.org/software/emacs/manual/eintr.html">Emacs Lisp Introduction</a></li>
<li><a href="https://www.youtube.com/watch?v=wNypW-aSCmE">3D Cellular Automata in Minecraft</a></li>
<li><a href="https://panic.com/prompt/">Prompt 2</a></li>
</ul></li>
<li>Justin
<ul><li><a href="http://monitorial.net">Monitorial.net</a></li>
<li><a href="http://upriise.com">Upriise</a></li>
<li><a href="http://ergodox.org/">Ergodox</a></li>
<li><a href="http://www.ergodepot.com/Jarvis_Desk_Bamboo_p/jrv-b.htm">Jarvis Bamboo Sit/Stand Desk</a></li>
<li><a href="https://talky.io">Talky.io</a></li>
<li><a href="http://fishshell.com/">Fish shell</a>
<ul><li><a href="https://github.com/justinmayer/tacklebox">Tacklebox</a></li>
</ul></li>
<li><a href="https://www.iterm2.com/">iTerm v3.0 beta</a></li>
<li><a href="http://www.beeradvocate.com/beer/profile/112/30282/">Brother Thelonious Belgian Ale</a></li>
<li><a href="http://www.frogsleap.com/">Frog’s Leap Winery</a></li>
<li><a href="https://www.pycon.it/en/">PyCon Italia</a> and Italy in general</li>
</ul></li>
<li>Roberto
<ul><li><a href="http://www.nealstephenson.com/">Neal Stephenson</a></li>
<li><a href="http://docopt.org/">Docopt</a></li>
<li><a href="https://en.wikipedia.org/wiki/Fried_pickle">Fried Pickles</a></li>
<li><a href="http://python.org.ar/">PyAr</a> Python Argentina User Group</li>
<li><a href="http://ar.pycon.org/">PyCon Argentina</a> in Mendosa</li>
<li><a href="http://python.org.ar/wiki/PyCamp">PyCamp</a></li>
</ul></li>
</ul><h3>Keep In Touch</h3>
<ul><li>Justin
<ul><li><a href="http://justinmayer.com">Personal</a></li>
<li><a href="http://getpelican.com">Pelican</a></li>
</ul></li>
<li>Roberto
<ul><li><a href="http://getnikola.com">Nikola</a>
<ul><li>Forums and mailing list</li>
</ul></li>
</ul></li>
</ul>]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/va8jnx/Episode20-StaticSiteGeneratorswithJustinMayerandRobertoAlsina.mp3" length="62453014" type="audio/mpeg"/>
				<itunes:subtitle>Visit our site to listen to past episodes, comment on the show or find out more about us.

Summary

In this episode we had the opportunity to ...</itunes:subtitle>
		<itunes:summary>Visit our site to listen to past episodes, comment on the show or find out more about us.

Summary

In this episode we had the opportunity to discuss the world of static site generators with Roberto Alsina of the Nikola project and Justin Mayer of the Pelican project. They explained what static site generators are and why you might want to use one. We asked about why you should choose a Python based static site generator, theming and markup support as well as metadata formats and documentation. We also debated what makes Pelican and Nikola so popular compared to other projects.

Brief Introduction

Welcome to Podcast.__init__ the podcast about Python and the people who make it great
Follow us on iTunes, Stitcher or TuneIn
Give us feedback on iTunes, Twitter, email or Disqus
We donate our time to you because we love Python and its community. If you would like to return the favor you can send us a donation}. Everything that we don't spend on producing the show will be donated to the PSF to keep the community alive.
Date of recording - August 08, 2015
Hosts Tobias Macey and Chris Patti
Today we are interviewing the core developers of Nikola and Pelican about static site generators
Interview

Introductions
Monitorial.net - Justin
Upriise - Justin
Works for Canonical - Roberto

How did you get introduced to Python?
Justin:
Needed a way to get order data to payment processor for commerce company

Roberto:
1996 got involved with Linux
Found XForms
Wrote Python bindings


For our listeners who might not know, what are static site generators and what are some of the advantages they bring to the table over other similar systems that perform the same function?
Roberto
Remove all the effort from the computer that serves the website
Server runs no code
Smaller ssurface area for security purposes

Justin
Better performance - important for responsiveness and uptime
Easier deployment and maintenance
Easier versioning and migration
Can version both input and output


There are a number of static site generators available in virtually every language. Why would a user want to leverage a Python solution vs Ruby, javascript, Go, etc.?
ReStructured TeXT is best supported in Python
Good language for supporting various markup syntaxes

Most static site generators seem to have a primary focus on blogging. What is it about these tools that lend themselves so well to that use case?
The author of the tools shape the purpose of the tool
Most popular among programmers which is a demographic that is likely to have a blog
Workflow is similar to what programmers are used to

Still useful for non-chronological pages due to templating system

Something that struck me comparing the two systems is that they have largely the same kinds of data going into the metadata block for each post, but it's expressed in a different / incompatible way in each. Have you ever considered agreeing on a standard and even advertising it as such so all static site generators could make use of it?
Challenging because of the idiosyncratic way problems are solved in each system
Wouldn't end up with the same site even if metadata were identical
Roberto  Justin are talking, this may happen!
The themes in Pelican and Nikola have very different feels and one of the things that initially drew me to Pelican is the larger catalog of themes available. What are some of the challenges involved in creating a theme for a static site generator?
Many programmers who write SSGs aren't amazing at HTML
Pelican and Nikola seem to be the most widely used projects for creating static sites using Python. What do you think is the key to that popularity?
Frequent updates, good documentation and large community
Easy to get up and running
Need to be productive inside of 2 minutes

Good first impressions are key
Importance of extensibility
Core modularity and availability of plugins

A lot of people have written about the importance (and difficulty) of writing and maintaining good documentat</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>01:32:36</itunes:duration>
		</item>
		<item>
		<title>Episode 19 - Al Sweigart on Python for Non-Programmers</title>
		<link>http://podcastinit.podbean.com/e/episode-19-al-sweigart-on-python-for-non-programmers/</link>
		<comments>http://podcastinit.podbean.com/e/episode-19-al-sweigart-on-python-for-non-programmers/#comments</comments>
		<pubDate>Sun, 16 Aug 2015 00:33:34 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Learning</category>
	<category>Community</category>
	<category>Open Source</category>
	<category>Diversity</category>
	<category>Security</category>
	<category>Testing</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-19-al-sweigart-on-python-for-non-programmers/</guid>

		<description><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, learn more about us, and support the show.</p>
<h3>Summary</h3>
<p>We got the opportunity to speak with Al Sweigart about his work on books like ‘Automate The Boring Stuff With Python’ and ‘Invent With Python’. We discussed how Python can be useful to people who don’t work as software engineers, why coding literacy is important for the general populace and how that will affect the ways in which we interact with software.</p>
<h3>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&#38;uo=6&#38;at=&#38;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&#38;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p726240/#">TuneIn</a> or <a href="http://podcastinit.podbean.com/feed/%20%5B...%5D"></a></li></ul>]]></description>
			<content:encoded><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, learn more about us, and support the show.</p>
<h3>Summary</h3>
<p>We got the opportunity to speak with Al Sweigart about his work on books like ‘Automate The Boring Stuff With Python’ and ‘Invent With Python’. We discussed how Python can be useful to people who don’t work as software engineers, why coding literacy is important for the general populace and how that will affect the ways in which we interact with software.</p>
<h3>Brief Introduction</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Subscribe on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&amp;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p726240/#">TuneIn</a> or <a href="http://podcastinit.podbean.com/feed/">RSS</a></li>
<li>Follow us on <a href="https://twitter.com/Podcast__init__">Twitter</a> or <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>Give us feedback! Leave a review on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="https://twitter.com/Podcast__init__">Tweet</a> to us, send us an <a href="mailto:hosts@podcastinit.com">email</a> or leave us a message on <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a></li>
<li>I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at </li>
<li>We are recording today on July 27th, 2015 and your hosts as usual are Tobias Macey and Chris Patti</li>
<li>Today we are interviewing Al Sweigart about Python for non-programmers</li>
</ul><h3>Interview with Al Sweigert</h3>
<ul><li>Introductions</li>
<li>How did you get introduced to Python?
<ul><li>Started in PHP/Perl, introduced to Python in 2006</li>
<li>Lack of curly braces took some getting used to</li>
<li>Clarity of standard library was refreshing</li>
</ul></li>
<li>What inspired you to start writing books for non-programmers?
<ul><li>Friend who took care of 10 year old interested in programming</li>
<li>Lack of coherent introductory material</li>
<li>Started writing a tutorial which grew to book length</li>
<li>All books published under Creative Commons license</li>
</ul></li>
<li>You have written a few books about teaching Python to people who have never programmed, can you share your thoughts on the best order in which to introduce the various aspects of programming?
<ul><li>Blog post driven development - <a href="http://blog.estimote.com/post/119525082855/user-stories-on-steroids-how-estimote-uses-blog">http://blog.estimote.com/post/119525082855/user-stories-on-steroids-how-estimote-uses-blog</a></li>
</ul></li>
<li>Where does software testing come in when teaching new coders how to program?
<ul><li>Use the logger, debugger, and assertions effectively</li>
</ul></li>
<li>In invent with Python you use games as the vehicle to discuss the principles involved with writing code. What is it about computer games that makes them so popular as a means to introduce programming to newcomers?
<ul><li>Something everyone is familiar with</li>
<li>Easy to make a simple game to get started</li>
<li>Good way to get creative with programming</li>
</ul></li>
<li>For automate the boring stuff with Python you focused on explaining how programming can be useful even if it is not someone’s occupation. How did you determine which kinds of activities to focus on for the book?
<ul><li>Got the idea at a meetup talking to someone who works in an office doing repetitive tasks</li>
<li>A lot of office jobs that involve tedious computer work which could be automated</li>
</ul></li>
<li>What are your thoughts on the need for software literacy among the general population?
<ul><li>How much programming knowledge do you think is sufficient for a member of our modern society?</li>
</ul></li>
<li>You also wrote about using Python to decrypt simple ciphers as a means to learn about code. What was the inspiration for this approach to software education?
<ul><li>One of the projects in invent with Python was a simple cypher, inspired further interest in the subject</li>
</ul></li>
<li>In episode 7 with Jacob Kaplan-Moss we talked about how we define what a programmer is. Can you share your opinions on what separates someone who can understand code from someone who is a programmer?
<ul><li>Barriers to entry have been significantly lowered, making the distinction very fuzzy</li>
<li>Definition of programmer is becoming much wider</li>
</ul></li>
<li>Books available at:
<ul><li><a href="https://automatetheboringstuff.com/">Automate the Boring Stuff</a></li>
<li><a href="https://inventwithpython.com/">Invent With Python</a></li>
</ul></li>
</ul><h3>Picks</h3>
<ul><li>Tobias
<ul><li><a href="http://pythonhosted.org/Logbook/index.html">Logbook</a></li>
<li><a href="http://emacswiki.org/emacs/EmacsDoctor">Emacs Psychotherapist</a></li>
<li><a href="http://amzn.to/1D9XYnC">Ex Machina</a></li>
<li><a href="http://www.dpbolvw.net/l8122wktqks7FGD8FHD799AE89HG79CB8FDDGFF888?url=http%3A%2F%2Fshop.oreilly.com%2Fproduct%2F0636920030195.do%3Fcmp%3Daf-strata-books-videos-product_cj_9781449368203_%2525zp&amp;cjsku=9781449368203">Mining the social web</a></li>
</ul></li>
<li>Chris
<ul><li><a href="http://emacsrocks.com/">Emacs Rocks</a></li>
<li><a href="http://workingcopyapp.com/">Working Copy</a></li>
<li><a href="http://www.feedly.com">Feedly</a></li>
<li><a href="http://www.phoenixnewtimes.com/restaurants/how-to-make-a-tom-collins-the-right-way-6521006">Tom Collins</a></li>
</ul></li>
<li>Al
<ul><li><a href="https://us.pycon.org">PyCon</a></li>
<li><a href="https://selenium-python.readthedocs.org/">Selenium Python Module</a></li>
<li><a href="http://amzn.to/1h40bY3">Seven Eaves by Neal Stephenson</a></li>
</ul></li>
</ul><h3>Keep In Touch</h3>
<ul><li><a href="@alsweigart">Twitter</a></li>
<li><a href="mailto:al@sweigart.com">Email</a></li>
</ul>]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/2nszxu/Episode19-AlSweigartonPythonforNon-Programmers.mp3" length="42256398" type="audio/mpeg"/>
				<itunes:subtitle>Visit our site to listen to past episodes, learn more about us, and support the show.
Summary

We got the opportunity to speak with Al Sweigart about ...</itunes:subtitle>
		<itunes:summary>Visit our site to listen to past episodes, learn more about us, and support the show.
Summary

We got the opportunity to speak with Al Sweigart about his work on books like 'Automate The Boring Stuff With Python' and 'Invent With Python'. We discussed how Python can be useful to people who don't work as software engineers, why coding literacy is important for the general populace and how that will affect the ways in which we interact with software.

Brief Introduction

Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.
Subscribe on iTunes, Stitcher, TuneIn or RSS
Follow us on Twitter or Google+
Give us feedback! Leave a review on iTunes, Tweet to us, send us an email or leave us a message on Google+
I would like to thank everyone who has donated to the show. Your contributions help us make the show sustainable. For details on how to support the show you can visit our site at 
We are recording today on July 27th, 2015 and your hosts as usual are Tobias Macey and Chris Patti
Today we are interviewing Al Sweigart about Python for non-programmers
Interview with Al Sweigert

Introductions
How did you get introduced to Python?
Started in PHP/Perl, introduced to Python in 2006
Lack of curly braces took some getting used to
Clarity of standard library was refreshing

What inspired you to start writing books for non-programmers?
Friend who took care of 10 year old interested in programming
Lack of coherent introductory material
Started writing a tutorial which grew to book length
All books published under Creative Commons license

You have written a few books about teaching Python to people who have never programmed, can you share your thoughts on the best order in which to introduce the various aspects of programming?
Blog post driven development - http://blog.estimote.com/post/119525082855/user-stories-on-steroids-how-estimote-uses-blog

Where does software testing come in when teaching new coders how to program?
Use the logger, debugger, and assertions effectively

In invent with Python you use games as the vehicle to discuss the principles involved with writing code. What is it about computer games that makes them so popular as a means to introduce programming to newcomers?
Something everyone is familiar with
Easy to make a simple game to get started
Good way to get creative with programming

For automate the boring stuff with Python you focused on explaining how programming can be useful even if it is not someone's occupation. How did you determine which kinds of activities to focus on for the book?
Got the idea at a meetup talking to someone who works in an office doing repetitive tasks
A lot of office jobs that involve tedious computer work which could be automated

What are your thoughts on the need for software literacy among the general population?
How much programming knowledge do you think is sufficient for a member of our modern society?

You also wrote about using Python to decrypt simple ciphers as a means to learn about code. What was the inspiration for this approach to software education?
One of the projects in invent with Python was a simple cypher, inspired further interest in the subject

In episode 7 with Jacob Kaplan-Moss we talked about how we define what a programmer is. Can you share your opinions on what separates someone who can understand code from someone who is a programmer?
Barriers to entry have been significantly lowered, making the distinction very fuzzy
Definition of programmer is becoming much wider

Books available at:
Automate the Boring Stuff
Invent With Python

Picks

Tobias
Logbook
Emacs Psychotherapist
Ex Machina
Mining the social web

Chris
Emacs Rocks
Working Copy
Feedly
Tom Collins

Al
PyCon
Selenium Python Module
Seven Eaves by Neal Stephenson

Keep In Touch

Twitter
Email</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>00:52:52</itunes:duration>
		</item>
		<item>
		<title>Episode 18 - Liza Avramenko on CheckIO and Empire of Code</title>
		<link>http://podcastinit.podbean.com/e/episode-18-liza-avramenko-on-checkio-and-empire-of-code/</link>
		<comments>http://podcastinit.podbean.com/e/episode-18-liza-avramenko-on-checkio-and-empire-of-code/#comments</comments>
		<pubDate>Thu, 06 Aug 2015 17:50:00 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Learning</category>
	<category>Community</category>
	<category>Open Source</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-18-liza-avramenko-on-checkio-and-empire-of-code/</guid>

		<description><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, find additional content, sign up for our newsletter or learn about the hosts.</p>
<h3>Summary</h3>
<p>In this episode we talked to Liza Avramenko, the CEO of CheckIO, about Empire of Code and CheckIO. We discussed what differentiates them from each other and from the other coding games that have been spreading on the internet. One of the main differentiators for CheckIO in particular is the strong focus on community. The bottom line is that if you use Python then you should check out CheckIO and Empire of Code as a great way to practice your skills.</p>
<h3>Brief Intro</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Follow us on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&#38;uo=6&#38;at=&#38;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&#38;refid=stpr">Stitcher</a> or <a href="%20%5B...%5D"></a></li></ul>]]></description>
			<content:encoded><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, find additional content, sign up for our newsletter or learn about the hosts.</p>
<h3>Summary</h3>
<p>In this episode we talked to Liza Avramenko, the CEO of CheckIO, about Empire of Code and CheckIO. We discussed what differentiates them from each other and from the other coding games that have been spreading on the internet. One of the main differentiators for CheckIO in particular is the strong focus on community. The bottom line is that if you use Python then you should check out CheckIO and Empire of Code as a great way to practice your skills.</p>
<h3>Brief Intro</h3>
<ul><li>Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.</li>
<li>Follow us on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&amp;refid=stpr">Stitcher</a> or <a href="http://tunein.com/radio/Podcast__init__-p726240/">TuneIn</a></li>
<li>Give us feedback on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="https://twitter.com/Podcast__init__">Twitter</a>, <a href="mailto:hosts@podcastinit.com">email</a> or <a href="http://podcastinit.com">Disqus</a></li>
<li>We donate our time to you because we love Python and its community. If you would like to return the favor you can send us a <a href="http://podcastinit.com/our-plans-for-your-donations.html">donation</a>. Everything that we don’t spend on producing the show will be donated to the PSF to keep the community alive.</li>
<li>We are recording today on July 27th, 2015 and your hosts as usual are Tobias Macey and Chris Patti</li>
<li>Today we are interviewing Liza Avramenko about CheckIO</li>
</ul><h3>Interview</h3>
<ul><li>Please introduce yourself</li>
<li>How did you get introduced to Python?
<ul><li>Learned about it from Co-Founder Alex</li>
</ul></li>
<li>For anyone not familiar with CheckIO, can you explain what it is?</li>
<li>What was the inspiration for creating the CheckIO platform?
<ul><li>Alex was bored working in a bank and wanted to create a place for sharing practice problems</li>
</ul></li>
<li>What is your goal with this platform?
<ul><li>Become global community for most popular coding languages</li>
<li>Remain open and supportive</li>
</ul></li>
<li>How do you deal with the question of ownership and licensing in CheckIO? Was this a tricky hurdle to get past in the site’s creation?
<ul><li>Being willing to share solutions publicly is a core part of the site.
<ul><li>This had to be more explicitly stated due to some users confusion early on.</li>
</ul></li>
</ul></li>
<li>Growing a community is difficult because of the chicken and egg problem. How did you kickstart the growth of the CheckIO community?
<ul><li>Community always number one priority</li>
<li>Started organically</li>
<li>Initially had 24/7 live chat to help new users</li>
<li>Openness was attractive, led to critical mass</li>
<li>As community grew, need for live chat decreased</li>
<li>Nature of Python community lends itself well to a collaborative, open community</li>
<li>Guido provided advice on how to grow and foster community</li>
</ul></li>
<li>Guido himself has participated in a number of conversations on your platform to critique submissions. Have you received any feedback from him directly about his impressions of the system?</li>
<li>How does diversity play into CheckIO? Are there aspects of the site’s design that are purposefully meant to attract a diverse audience?
<ul><li>CheckIO has always targeted people with basic coding experience</li>
<li>Early live chat feedback focused around very new coders wishing there was more material for them</li>
<li>These early challenges resulted in the development of <a href="https://empireofcode.com/">Empire of Code</a></li>
</ul></li>
<li>There are a number of other online programming-oriented games available. What makes CheckIO and Empire of Code stand out from them?
<ul><li>Priority of community</li>
<li>Others are more about gaming, showcasing talent</li>
</ul></li>
<li>How did you design the gamification aspects of CheckIO, and how important do you think they are to the site’s success?
<ul><li>CheckIO was never a game, more of a library of challenges that have game elements</li>
<li>Empire of Code is all about gamification, code and algo improvement are baked into the gameplay
<ul><li>You choose Python or Javascript “legions” at character creation time, this is a one time choice.</li>
<li>Buildings, troop movements, materials, etc. are all based in code</li>
<li>Players can steal code and algorithms from other players
<ul><li>Incredible innovation</li>
</ul></li>
<li>Great adoption story for new users - can start playing without writing any code
<ul><li>But in order to really excel you will WANT to start writing code</li>
<li>So many people have their original motivations for coding come from playing games</li>
</ul></li>
<li>Cooperative play in the form of training missions with other players
<ul><li>This is an opportunity to learn how people on the other side are solving the same problem</li>
</ul></li>
<li>New languages are planned - Ruby, maybe Java?</li>
</ul></li>
</ul></li>
<li>Do you think that there is something about the Python language or community that inspires adoption of this kind of gamified practice?</li>
<li>You recently released the beta of a new experience called Empire of Code which is more akin to the type of video game that many people are familiar with. What inspired that evolution?
<ul><li>As part of the new experience, you also added JavaScript as an available language. Do you intend to add new languages in the future?</li>
<li>Is there a particular demographic or set of demographics that you are targeting with Empire of Code vs CheckIO?</li>
</ul></li>
<li>What’s the monetization strategy for Empire of Code or CheckIO?
<ul><li>For Empire, you can play for free but you might keep losing your resources until you can learn to code more effectively, OR you can buy a shield which will protect your resources for a time.</li>
</ul></li>
<li>In CheckIO, how do you label the difficulty level of the individual puzzles, is there a set of guidelines for that or is it up to the puzzle writer / submitter?
<ul><li>CheckIO trusts its community
<ul><li>The community rates each challenge</li>
</ul></li>
</ul></li>
<li>Part of the CheckIO platform is the ability for users to submit their own problems. How much vetting is involved before these submissions are available to users of the site?</li>
<li>Where do you see CheckIO and Empire of Code going in the future?
<ul><li>Want to have Empire of Code known as the best online game that blends in programming by the end of 2016</li>
<li>In ~5 years want to see people saying the CheckIO/Empire of Code inspired people to program as a career</li>
<li>In ~10 years want to see all major languages represented</li>
<li>Aiming to become a major game publisher</li>
</ul></li>
</ul><h3>Picks</h3>
<ul><li>Tobias
<ul><li><a href="http://jwt.io/">JSON Web Tokens</a></li>
<li><a href="https://github.com/adobe-fonts/source-code-pro">Source Code Pro</a></li>
<li><a href="http://direnv.net/">DirEnv</a></li>
<li><a href="http://amzn.to/1KtXATF">Chappie</a></li>
</ul></li>
<li>Chris
<ul><li><a href="http://www.destructoid.com/prune-looks-like-a-must-play-for-ios-users-296607.phtml">Prune</a></li>
<li><a href="https://getnikola.com/blog/">Nikola</a></li>
<li><a href="http://barnotes.co/recipes/warday-s-cocktail">Warday’s Cocktail</a></li>
</ul></li>
<li>Liza
<ul><li><a href="https://en.wikipedia.org/wiki/Kiev">Kiev, Ukraine</a></li>
<li><a href="http://www.bulletproofexec.com/how-to-make-your-coffee-bulletproof-and-your-morning-too/">Bulletproof Coffee</a></li>
</ul></li>
</ul><h3>Keep In Touch</h3>
<ul><li>Twitter: <a href="https://twitter.com/avrliza">@avrliza</a></li>
</ul>]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/6j7wx3/Episode18-LizaAvramenkoonCheckIOandEmpireofCode.mp3" length="33310582" type="audio/mpeg"/>
				<itunes:subtitle>Visit our site to listen to past episodes, find additional content, sign up for our newsletter or learn about the hosts.

Summary

In this episode we talked ...</itunes:subtitle>
		<itunes:summary>Visit our site to listen to past episodes, find additional content, sign up for our newsletter or learn about the hosts.

Summary

In this episode we talked to Liza Avramenko, the CEO of CheckIO, about Empire of Code and CheckIO. We discussed what differentiates them from each other and from the other coding games that have been spreading on the internet. One of the main differentiators for CheckIO in particular is the strong focus on community. The bottom line is that if you use Python then you should check out CheckIO and Empire of Code as a great way to practice your skills.

Brief Intro

Hello and welcome to Podcast.__init__, the podcast about Python and the people who make it great.
Follow us on iTunes, Stitcher or TuneIn
Give us feedback on iTunes, Twitter, email or Disqus
We donate our time to you because we love Python and its community. If you would like to return the favor you can send us a donation. Everything that we don't spend on producing the show will be donated to the PSF to keep the community alive.
We are recording today on July 27th, 2015 and your hosts as usual are Tobias Macey and Chris Patti
Today we are interviewing Liza Avramenko about CheckIO
Interview

Please introduce yourself
How did you get introduced to Python?
Learned about it from Co-Founder Alex

For anyone not familiar with CheckIO, can you explain what it is?
What was the inspiration for creating the CheckIO platform?
Alex was bored working in a bank and wanted to create a place for sharing practice problems

What is your goal with this platform?
Become global community for most popular coding languages
Remain open and supportive

How do you deal with the question of ownership and licensing in CheckIO? Was this a tricky hurdle to get past in the site's creation?
Being willing to share solutions publicly is a core part of the site.
This had to be more explicitly stated due to some users confusion early on.


Growing a community is difficult because of the chicken and egg problem. How did you kickstart the growth of the CheckIO community?
Community always number one priority
Started organically
Initially had 24/7 live chat to help new users
Openness was attractive, led to critical mass
As community grew, need for live chat decreased
Nature of Python community lends itself well to a collaborative, open community
Guido provided advice on how to grow and foster community

Guido himself has participated in a number of conversations on your platform to critique submissions. Have you received any feedback from him directly about his impressions of the system?
How does diversity play into CheckIO? Are there aspects of the site's design that are purposefully meant to attract a diverse audience?
CheckIO has always targeted people with basic coding experience
Early live chat feedback focused around very new coders wishing there was more material for them
These early challenges resulted in the development of Empire of Code

There are a number of other online programming-oriented games available. What makes CheckIO and Empire of Code stand out from them?
Priority of community
Others are more about gaming, showcasing talent

How did you design the gamification aspects of CheckIO, and how important do you think they are to the site's success?
CheckIO was never a game, more of a library of challenges that have game elements
Empire of Code is all about gamification, code and algo improvement are baked into the gameplay
You choose Python or Javascript "legions" at character creation time, this is a one time choice.
Buildings, troop movements, materials, etc. are all based in code
Players can steal code and algorithms from other players
Incredible innovation

Great adoption story for new users - can start playing without writing any code
But in order to really excel you will WANT to start writing code
So many people have their original motivations for coding come from playing games

Cooperative play in the form of training missions with other players
This is an</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>00:48:16</itunes:duration>
		</item>
		<item>
		<title>Episode 17 - Glyph on Ethics in Software</title>
		<link>http://podcastinit.podbean.com/e/episode-17-glyph-on-ethics-in-software/</link>
		<comments>http://podcastinit.podbean.com/e/episode-17-glyph-on-ethics-in-software/#comments</comments>
		<pubDate>Mon, 03 Aug 2015 00:52:00 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Community</category>
	<category>Open Source</category>
	<category>Social Good</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-17-glyph-on-ethics-in-software/</guid>

		<description><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> for past episodes and extra content.</p>
<h3>Summary</h3>
<p>In this episode we had a nice long conversation with Glyph Lefkowitz of Twisted fame about his views on the need for an established code of ethics in the software industry. Some of the main points that were covered include the need for maintaining a proper scope in the ongoing discussion, the responsibilities of individuals and corporations, and how any such code might compare with those employed by other professions. This is something that every engineer should be thinking about and the material that we cover will give you a good starting point when talking to your compatriots.</p>
<h3>Brief Introduction</h3>
<ul><li>Welcome to Podcast.__init__ the podcast about Python and the people who make it great</li>
<li>Date of recording - July 21, 2015</li>
<li>Hosts Tobias Macey and Chris Patti</li>
<li>Follow us on <a href="https://itunes.apple.com/us/podcast/podcast.-init/%20%5B...%5D"></a></li></ul>]]></description>
			<content:encoded><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> for past episodes and extra content.</p>
<h3>Summary</h3>
<p>In this episode we had a nice long conversation with Glyph Lefkowitz of Twisted fame about his views on the need for an established code of ethics in the software industry. Some of the main points that were covered include the need for maintaining a proper scope in the ongoing discussion, the responsibilities of individuals and corporations, and how any such code might compare with those employed by other professions. This is something that every engineer should be thinking about and the material that we cover will give you a good starting point when talking to your compatriots.</p>
<h3>Brief Introduction</h3>
<ul><li>Welcome to Podcast.__init__ the podcast about Python and the people who make it great</li>
<li>Date of recording - July 21, 2015</li>
<li>Hosts Tobias Macey and Chris Patti</li>
<li>Follow us on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&amp;refid=stpr">Stitcher</a>, <a href="http://tunein.com/embed/follow/p726240/#">TuneIn</a>, <a href="https://plus.google.com/+Podcastinit-the-python-podcast">Google+</a> and <a href="https://twitter.com/Podcast__init__">Twitter</a></li>
<li>Give us feedback! (iTunes, Twitter, email, Disqus comments)</li>
<li>We donate our time to you because we love Python and its community. If you would like to return the favor you can send us a <a href="http://podcastinit.com/our-plans-for-your-donations.html">donation</a>. Everything that we don’t spend on producing the show will be donated to the PSF to keep the community alive.</li>
<li>Overview - Interview with Firstname Lastname about Topic</li>
</ul><h3>Interview with Glyph</h3>
<ul><li>Introductions</li>
<li>How did you get introduced to Python? - Chris
<ul><li>2000 - large scale collaborative gaming system in Java
<ul><li>Asynchronous IO</li>
<li>Twisted</li>
</ul></li>
</ul></li>
<li>Let’s start with the bad news <img src="http://www.podbean.com/smilies/icon_smile.gif" alt=":)" class="wp-smiley" />  What are some of the potential wide spread implications of less than ethical software that you were referring to in your Pycon talk? - Chris
<ul><li>Robot Apocalypse <img src="http://www.podbean.com/smilies/icon_smile.gif" alt=":)" class="wp-smiley" />  (Not really)
<ul><li>Much of the discussion around this derails into unrealistic nightmare scenarios</li>
<li>THERAC 25 radiation machine</li>
<li>Toyota unintended acceleration scandal</li>
</ul></li>
<li>Real worry - gradual erosion of trust in programmers and computers</li>
<li>First requirement for a code of ethics - a clear understanding of the reality you’re trying to litigate</li>
<li>The search for ethics will likely begin in academia where this aspect of software dev is more like psychology.</li>
</ul></li>
<li>In your talk you commented on the training courses that Lawyers are required to take as part of their certification. Do you think the fact that there is no standardized certification body for software development contributes to a lack of widely held ethical principles in software engineering? - Tobias
<ul><li>Do you think that it is necessary to form such a certification mechanism for developers as part of the effort to establish a recognized ethical code? - Tobias</li>
<li>If we were to create a certification to indicate proper training in the software engineers code of ethics, how do you think that would affect the rate at which people enter the industry? - Tobias</li>
</ul></li>
<li>Assuming we can all agree on a set of relatively strict professional ethics that would prevent the above from happening, how would we enforce those ethics? Or do you advocate an honor system? - Chris
<ul><li>Ethics are by definition an honors system</li>
<li>Enforcement would be straight forward - professional organizations to maintain a record and deviations from that record</li>
<li>Need better laws &amp; better jurisprudence</li>
<li>We need an Underwriters Laboratory seal for software development ethics</li>
<li>Code of software ethics will not and should not tell you how to be a decent human being.</li>
<li>Devs / companies can create software that could be used for evil - “We are merchants of death and these are lethal weapons” - could conceivably earn the ethical software developer’s seal of approval.</li>
</ul></li>
<li>Where does accessibility of the software we make fit into a code of ethics? Do you think there should be a minimum level of support for technologies such as screen readers or captioning for audio content in the software that we build? - Tobias
<ul><li>Minimum levels of knowledge required</li>
<li>Minimum levels of content in curriculum</li>
</ul></li>
<li>In your talk you mentioned how Rackspace’s stance on user support matches the ideals you’d previously laid out, can you flesh that out a bit for us? What does that mean to individual Rackers in their day to day work lives? - Chris</li>
<li>In your talk you mentioned that availability of the software source should be mandatory for compliance with a properly defined ethical framework. What mechanisms for providing that access do you think would be acceptable? Should there be a central repository for housing and providing access to that source? - Tobias
<ul><li>Would the list of acceptable mechanisms change according to the intended audience of the software? - Tobias</li>
<li>What responsibility do you think producers of software should have to maintain an archive of the source for past versions? - Tobias</li>
<li>How should we define what level of access is provided? In the case of commercial software should the source only be available to paying customers, perhaps delivered along with the product? This also poses an interesting quandary for SaaS providers. Should they provide the source to their systems only to paying customers, or to potential customers as well? - Tobias</li>
<li>This question of transparency and availability of source is especially interesting in the light of a number of stories that have come out recently about patients who have been provided with prostheses and other medical devices. In a number of cases, shortly after receiving the device, the company who made it, which are increasingly startups, goes out of business, leaving the patient with no way of obtaining support for something that they are dependent on for their health and well-being. Having the source for those devices available would help mitigate the impact of such a situation. - Tobias</li>
</ul></li>
<li>You brought up an interesting aspect of the trust equation and its relevance to the need for an ethical code. Because what we do as software engineers is effectively viewed as sorcery by a vast majority of the public, they must therefore wholly place their trust in us as part of using the products that we create. As you mentioned with the demise of the scribe with the rise of literacy, increasing the overall awareness of how software works at a basic level partially reduces that depency of trust. At what level of aptitude do you think our relationship with our users becomes more equitable? How does the concept of source availability play into this topic of general education? - Tobias</li>
<li>What can the Python community in particular do to start the ball rolling towards defining a set of professional ethics, and what has it already done in this area? - Chris
<ul><li>PSF Code of Conduct is a starting point
<ul><li>PSF is an organization of individuals</li>
<li>Corporations are cagey about getting involved for fear of it becoming a legally binding contract</li>
</ul></li>
<li>Django Code of Conduct more specific</li>
</ul></li>
</ul><h3>Picks</h3>
<ul><li>Tobias
<ul><li><a href="http://amzn.to/1CTVoCe">Phillips SHP9500</a></li>
<li><a href="https://keybase.io">keybase.io</a> - Tweet us with your favorite thing about the show to get an invite</li>
<li><a href="http://amzn.to/1SAkkR7">Paul Blart: Mall Cop 2</a></li>
</ul></li>
<li>Chris
<ul><li><a href="http://dontstarvegame.com/ipad">Don’t Starve for IOS</a></li>
<li><a href="http://blog.lerner.co.il/want-to-understand-pythons-comprehensions-think-like-an-accountant/">Want to understand Pythonâ€™s comprehensions? Think in Excel or SQL.</a></li>
<li><a href="http://caledoniaspirits.com/spirits/">Barr Hill Gin</a></li>
</ul></li>
<li>Glyph
<ul><li><a href="https://pythonhosted.org/py2app/">Py2App</a></li>
<li><a href="https://glyph.twistedmatrix.com/2015/07/just-a-button.html">Blog post</a></li>
<li><a href="http://pythonhosted.org/pyobjc/">PyObjC</a></li>
<li><a href="http://amzn.to/1Ol1uvZ">Sensair Sou Vide immersion circulator</a></li>
</ul></li>
</ul><h3>Keep In Touch</h3>
<ul><li><a href="https://twitter.com/glyph">Twitter</a></li>
<li><a href="https://keybase.io/glyph">Keybase.io</a></li>
<li><a href="mailto:glyph@twistedmatrix.com">email</a></li>
<li>Glyph everywhere on the internet</li>
</ul>]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/5xcezh/Episode17-GlyphonEthicsinSoftware.mp3" length="47187313" type="audio/mpeg"/>
				<itunes:subtitle>Visit our site for past episodes and extra content.

Summary

In this episode we had a nice long conversation with Glyph Lefkowitz of Twisted fame about his ...</itunes:subtitle>
		<itunes:summary>Visit our site for past episodes and extra content.

Summary

In this episode we had a nice long conversation with Glyph Lefkowitz of Twisted fame about his views on the need for an established code of ethics in the software industry. Some of the main points that were covered include the need for maintaining a proper scope in the ongoing discussion, the responsibilities of individuals and corporations, and how any such code might compare with those employed by other professions. This is something that every engineer should be thinking about and the material that we cover will give you a good starting point when talking to your compatriots.

Brief Introduction

Welcome to Podcast.__init__ the podcast about Python and the people who make it great
Date of recording - July 21, 2015
Hosts Tobias Macey and Chris Patti
Follow us on iTunes, Stitcher, TuneIn, Google+ and Twitter
Give us feedback! (iTunes, Twitter, email, Disqus comments)
We donate our time to you because we love Python and its community. If you would like to return the favor you can send us a donation. Everything that we don't spend on producing the show will be donated to the PSF to keep the community alive.
Overview - Interview with Firstname Lastname about Topic
Interview with Glyph

Introductions
How did you get introduced to Python? - Chris
2000 - large scale collaborative gaming system in Java
Asynchronous IO
Twisted


Let's start with the bad news :) What are some of the potential wide spread implications of less than ethical software that you were referring to in your Pycon talk? - Chris
Robot Apocalypse :) (Not really)
Much of the discussion around this derails into unrealistic nightmare scenarios
THERAC 25 radiation machine
Toyota unintended acceleration scandal

Real worry - gradual erosion of trust in programmers and computers
First requirement for a code of ethics - a clear understanding of the reality you're trying to litigate
The search for ethics will likely begin in academia where this aspect of software dev is more like psychology.

In your talk you commented on the training courses that Lawyers are required to take as part of their certification. Do you think the fact that there is no standardized certification body for software development contributes to a lack of widely held ethical principles in software engineering? - Tobias
Do you think that it is necessary to form such a certification mechanism for developers as part of the effort to establish a recognized ethical code? - Tobias
If we were to create a certification to indicate proper training in the software engineers code of ethics, how do you think that would affect the rate at which people enter the industry? - Tobias

Assuming we can all agree on a set of relatively strict professional ethics that would prevent the above from happening, how would we enforce those ethics? Or do you advocate an honor system? - Chris
Ethics are by definition an honors system
Enforcement would be straight forward - professional organizations to maintain a record and deviations from that record
Need better laws  better jurisprudence
We need an Underwriters Laboratory seal for software development ethics
Code of software ethics will not and should not tell you how to be a decent human being.
Devs / companies can create software that could be used for evil - "We are merchants of death and these are lethal weapons" - could conceivably earn the ethical software developer's seal of approval.

Where does accessibility of the software we make fit into a code of ethics? Do you think there should be a minimum level of support for technologies such as screen readers or captioning for audio content in the software that we build? - Tobias
Minimum levels of knowledge required
Minimum levels of content in curriculum

In your talk you mentioned how Rackspace's stance on user support matches the ideals you'd previously laid out, can you flesh that out a bit for us? What does that mean to individual Rackers in their day to </itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>01:19:24</itunes:duration>
		</item>
		<item>
		<title>Episode 16 - Holger Krekel on Py.Test</title>
		<link>http://podcastinit.podbean.com/e/episode-16-holger-krekel-on-pytest/</link>
		<comments>http://podcastinit.podbean.com/e/episode-16-holger-krekel-on-pytest/#comments</comments>
		<pubDate>Fri, 24 Jul 2015 00:54:06 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Open Source</category>
	<category>Testing</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-16-holger-krekel-on-pytest/</guid>

		<description><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, learn more about the show and sign up for our mailing list.</p>
<h3>Summary</h3>
<p>In this episode we talked to Holger Krekel about the py.test library. We discussed the various styles of testing that it supports, the plugin system and how it compares to the unittest library. We also reviewed some of the challenges around packaging and releasing Python software and our thoughts on some ways that they can be improved.</p>
<h3>Brief Introduction</h3>
<ul><li>Welcome to Podcast.__init__ the podcast about Python and the people who make it great</li>
<li>Date of recording - July 8th, 2015</li>
<li>Hosts Tobias Macey and Chris Patti</li>
<li>Follow us on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&#38;uo=6&#38;at=&#38;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&#38;refid=stpr">Stitcher</a> or <a href="http://tunein.com/radio/Podcast__init__-p726240/">TuneIn [...]</a></li></ul>]]></description>
			<content:encoded><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> to listen to past episodes, learn more about the show and sign up for our mailing list.</p>
<h3>Summary</h3>
<p>In this episode we talked to Holger Krekel about the py.test library. We discussed the various styles of testing that it supports, the plugin system and how it compares to the unittest library. We also reviewed some of the challenges around packaging and releasing Python software and our thoughts on some ways that they can be improved.</p>
<h3>Brief Introduction</h3>
<ul><li>Welcome to Podcast.__init__ the podcast about Python and the people who make it great</li>
<li>Date of recording - July 8th, 2015</li>
<li>Hosts Tobias Macey and Chris Patti</li>
<li>Follow us on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&amp;refid=stpr">Stitcher</a> or <a href="http://tunein.com/radio/Podcast__init__-p726240/">TuneIn</a></li>
<li>Give us feedback on <a>iTunes</a>, <a href="https://twitter.com/Podcast__init__">Twitter</a>, <a href="mailto:hosts@podcastinit.com">email</a> or <a href="http://podcastinit.com">Disqus</a>)</li>
<li>We donate our time to you because we love Python and its community. If you would like to return the favor you can send us a <a>donation</a>}. Everything that we don’t spend on producing the show will be donated to the PSF to keep the community alive.</li>
<li>Overview - Interview with Holger Krekel about his work on Pytest</li>
</ul><h3>Interview with Holger Krekel</h3>
<ul><li>Introductions
<ul><li>Programming for 25 years</li>
<li>Runs a consultancy</li>
<li>Been to almost every EuroPyCon and PyCon US</li>
</ul></li>
<li>How did you get introduced to Python? - Chris
<ul><li>Wanted to write an HTTP proxy and Java I/O was too confusing. Jython took less than a day to get it working after 2-3 days on it with Java.</li>
</ul></li>
<li>What inspired you to create Pytest, and how did the existing unittest framework play into the story? - Chris
<ul><li>Introduced to agile methods through the Zope community</li>
<li>Zope used unittest - didn’t like the boiler plate</li>
<li>Not in the spirit of Python</li>
<li>Only took ~200 lines of code to get a testing tool working</li>
<li>Original name was ‘utest’ - 2003</li>
<li>Pytest name came in 2004 on <a href="http://pypy.org/">Pypy project</a></li>
<li>Huge number of tests on that project (20,000) - distributed test runner - xdist helped solve this.</li>
</ul></li>
<li>There are many different styles of testing, such as BDD, unit testing, integration testing, functional testing, what attributes of py.test make it suitable or unsuitable for these different approaches? - Tobias
<ul><li>What are your views on black box testing and how would someone use py.test to implement this approach? - Tobias</li>
<li>Pytest’s plugin architecture enables you to hook into the various phases of test execution enabling you to extend Pytest in all kinds of ways beyond the original design.</li>
<li>I have been hearing a lot about property based testing which was popularized by the Quickcheck module in Haskell. Does py.test support anything like that? - Tobias</li>
<li><a href="https://pypi.python.org/pypi/hypothesis-pytest/0.11.0">hypothesis-pytest</a></li>
</ul></li>
<li>Do you think the characteristics and nature of the unit testing framework being used have any effect on the number and quality of the tests developers write? - Chris
<ul><li>Developers find writing tests in Pytest to be fun compared to unittest</li>
<li>Which will help people write better tests</li>
<li>Encourages refactoring</li>
</ul></li>
<li>Is there ever a time when you would advice _against_ writing tests? - Tobias
<ul><li>When exploring a problem, writing tests first doesn’t make sense</li>
<li>When getting feedback on a potential approach, writing tests first can be a waste of time</li>
</ul></li>
<li>What are some signs that you watch out for when writing tests that tell you that a particular feature needs to be refactored? - Tobias
<ul><li>When the test code is fragile it should be refactored</li>
<li>Requires experience to really understand when to refactor</li>
<li>When it’s not fun anymore or the tests are repetitive</li>
</ul></li>
<li>For someone who is converting their existing unit tests from UnitTest/Nose style to use py.test in an idiomatic manner, what are some of the biggest differences to be aware of? - Tobias
<ul><li>Generator/yield based testing should move to property based testing</li>
<li>If py.test can’t run a UnitTest/Nose style test it is considered a bug and gets fixed</li>
</ul></li>
<li>Has the strict backwards compatibility policy presented any interesting technical challenges thus far? - Chris
<ul><li>Yes it definitely makes more work</li>
<li>However breaking the API in a large project like this will cause too many problems for users</li>
</ul></li>
<li>py.test supports execution of tests written with other frameworks, how much ongoing maintenance does this feature require as changes are made to the other implementations? - Tobias</li>
<li>The web page says that Pytest is designed to work with domain specific and non Python tests, and in fact a coworker is using it to test a node.js project - how did Pytest’s design enable this? - Chris
<ul><li>Pytest uses a collection tree model to represent your project
<ul><li>This is not Python specific</li>
<li>All classes and functions are just mapped into this tree, not directly on the Python function</li>
</ul></li>
<li>There are few Python specific hooks for fixtures etc.</li>
<li>People have written plugins so they can express their tests in YAML, Microsoft Excel</li>
<li>Tests are represented as items</li>
<li>All plugins are written in Python</li>
</ul></li>
<li>What are some of the most interesting applications of py.test that you have seen? - Tobias
<ul><li>Plugins!</li>
<li>Pytest-BDD</li>
<li>Pytest-C++</li>
<li>Pytest-sugar</li>
<li><a href="http://pytest.org/latest/plugins_index/index.html">Py.test plugin list</a></li>
</ul></li>
<li>Speaking about adoption, do you have any sense of the relative adoption of Pytest versus unitest or other tools? - Tobias
<ul><li>Very hard to actually know</li>
<li>Download numbers are not a clear indicator due to robots, CI systems, etc.</li>
<li>Quantifying market share is hard to do</li>
<li>Popularity is not a useful heuristic in determining a good fot for technology adoption
<ul><li>But popularity is an indicator for the level of support you might receive</li>
<li>Tech can be popular but very poorly maintained</li>
</ul></li>
</ul></li>
<li>Are there any features of py.test that would make it suitable for use with configuration management tools and infrastructure testing? - Tobias
<ul><li>Example driven testing</li>
<li>Run py.test from a blackbox approach</li>
<li>Largest benefit would be from having one testing tool used across the organization</li>
</ul></li>
<li>Where do you see Pytest and more generally test frameworks headed in the future? - Chris
<ul><li>No big changes for Pytest - lots of incremental things</li>
<li>Plugins will add functionality</li>
<li>Holger is also the author of <a href="https://bitbucket.org/hpk42/tox">Tox</a></li>
<li>Integration testing and testing in more complex environments are a direction that test management tools will likely go</li>
<li>Tools like Jenkins can be a real headache in trying to have a good testing story for your company</li>
<li><a href="https://devpi.net/hpk/dev/devpi-server/2.2.0/+toxresults/devpi-server-2.2.0.tar.gz">https://devpi.net/hpk/dev/devpi-server/2.2.0/+toxresults/devpi-server-2.2.0.tar.gz</a></li>
</ul></li>
<li>Any questions we didn’t ask?
<ul><li>Pytest is a very healthy project! There are 10 regular contributors - this is exceptional among OSS projects</li>
</ul></li>
</ul><h3>Picks</h3>
<ul><li>Tobias
<ul><li><a href="http://python-future.org">python-future</a></li>
<li><a href="http://pythonhosted.org/six/">six</a></li>
<li><a href="http://www.imdb.com/title/tt1023114/?ref_=nv_sr_1">The Way Back</a></li>
<li><a href="http://amzn.to/1J42d0M">Rosewill BK-500A</a>} or <a>BK-500i</a></li>
<li><a href="https://github.com/naiquevin/pipdeptree">pipdeptree</a></li>
<li><a href="https://github.com/steder/pundler">pundler</a></li>
</ul></li>
<li>Chris
<ul><li><a href="https://untappd.com/b/crop-bistro-and-brewery-bavarian-weizen/330954">Crop Bavarian Weizen</a></li>
<li><a href="https://en.wikipedia.org/wiki/Pannekoek">Dutch Pancakes</a></li>
<li><a href="http://comicsalliance.com/prophet-the-barbarian-space-opera-you-should-already-be-readi/">Prophet</a></li>
</ul></li>
<li>Holger
<ul><li><a href="http://amzn.to/1fnhVgt">The Utopia of Rules</a></li>
<li><a href="http://ipfs.io/">IPFS.io</a> - The interplanetary file system</li>
<li><a href="https://www.youtube.com/watch?v=oCZMoY3q2uM">A New Way to Look at Networking</a></li>
</ul></li>
</ul><h3>Keep In Touch</h3>
<ul><li><a href="https://twitter.com/hpk42">Twitter</a></li>
<li><a href="http://holgerkrekel.net">Blog</a></li>
</ul><p>The intro and outro music is from Requiem for a Fish <a href="http://freemusicarchive.org/music/The_Freak_Fandango_Orchestra/">The Freak Fandango Orchestra</a>  / <a href="http://creativecommons.org/licenses/by-sa/3.0/">CC BY-SA</a></p>
]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/zpmvs4/Episode16-HolgerKrekelonPytest.mp3" length="70238855" type="audio/mpeg"/>
				<itunes:subtitle>Visit our site to listen to past episodes, learn more about the show and sign up for our mailing list.

Summary

In this episode we talked to ...</itunes:subtitle>
		<itunes:summary>Visit our site to listen to past episodes, learn more about the show and sign up for our mailing list.

Summary

In this episode we talked to Holger Krekel about the py.test library. We discussed the various styles of testing that it supports, the plugin system and how it compares to the unittest library. We also reviewed some of the challenges around packaging and releasing Python software and our thoughts on some ways that they can be improved.

Brief Introduction

Welcome to Podcast.__init__ the podcast about Python and the people who make it great
Date of recording - July 8th, 2015
Hosts Tobias Macey and Chris Patti
Follow us on iTunes, Stitcher or TuneIn
Give us feedback on iTunes, Twitter, email or Disqus)
We donate our time to you because we love Python and its community. If you would like to return the favor you can send us a donation}. Everything that we don't spend on producing the show will be donated to the PSF to keep the community alive.
Overview - Interview with Holger Krekel about his work on Pytest
Interview with Holger Krekel

Introductions
Programming for 25 years
Runs a consultancy
Been to almost every EuroPyCon and PyCon US

How did you get introduced to Python? - Chris
Wanted to write an HTTP proxy and Java I/O was too confusing. Jython took less than a day to get it working after 2-3 days on it with Java.

What inspired you to create Pytest, and how did the existing unittest framework play into the story? - Chris
Introduced to agile methods through the Zope community
Zope used unittest - didn't like the boiler plate
Not in the spirit of Python
Only took ~200 lines of code to get a testing tool working
Original name was 'utest' - 2003
Pytest name came in 2004 on Pypy project
Huge number of tests on that project (20,000) - distributed test runner - xdist helped solve this.

There are many different styles of testing, such as BDD, unit testing, integration testing, functional testing, what attributes of py.test make it suitable or unsuitable for these different approaches? - Tobias
What are your views on black box testing and how would someone use py.test to implement this approach? - Tobias
Pytest's plugin architecture enables you to hook into the various phases of test execution enabling you to extend Pytest in all kinds of ways beyond the original design.
I have been hearing a lot about property based testing which was popularized by the Quickcheck module in Haskell. Does py.test support anything like that? - Tobias
hypothesis-pytest

Do you think the characteristics and nature of the unit testing framework being used have any effect on the number and quality of the tests developers write? - Chris
Developers find writing tests in Pytest to be fun compared to unittest
Which will help people write better tests
Encourages refactoring

Is there ever a time when you would advice _against_ writing tests? - Tobias
When exploring a problem, writing tests first doesn't make sense
When getting feedback on a potential approach, writing tests first can be a waste of time

What are some signs that you watch out for when writing tests that tell you that a particular feature needs to be refactored? - Tobias
When the test code is fragile it should be refactored
Requires experience to really understand when to refactor
When it's not fun anymore or the tests are repetitive

For someone who is converting their existing unit tests from UnitTest/Nose style to use py.test in an idiomatic manner, what are some of the biggest differences to be aware of? - Tobias
Generator/yield based testing should move to property based testing
If py.test can't run a UnitTest/Nose style test it is considered a bug and gets fixed

Has the strict backwards compatibility policy presented any interesting technical challenges thus far? - Chris
Yes it definitely makes more work
However breaking the API in a large project like this will cause too many problems for users

py.test supports execution of tests written with other frameworks, how much ongo</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>01:11:01</itunes:duration>
		</item>
		<item>
		<title>Episode 15 - Damien George Talks To Us About MicroPython</title>
		<link>http://podcastinit.podbean.com/e/episode-15-damien-george-talks-to-us-about-micropython/</link>
		<comments>http://podcastinit.podbean.com/e/episode-15-damien-george-talks-to-us-about-micropython/#comments</comments>
		<pubDate>Thu, 16 Jul 2015 15:17:00 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Open Source</category>
	<category>Hardware</category>
	<category>Internet of Things</category>
	<category>IOT</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-15-damien-george-talks-to-us-about-micropython/</guid>

		<description><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> for more news, information and past episodes of Podcast.__init__!</p>
<h3>Summary</h3>
<p>We talked to Damien George about his work on the Micro Python interpreter and the PyBoard SOC (Systom On a Chip). The combination of the interpreter and SOC allows Python developers to get involved in hardware hacking, as well as letting electronics afficionados try their hand at development. Damien explained to us where this fits in with the expanding landscape of low cost embedded devices and why you should get one to start playing with it.</p>
<h3>Brief Introduction</h3>
<ul><li>Date of recording - June 29th, 2015</li>
<li>Hosts - Tobias Macey and Chris Patti</li>
<li>Follow us on iTunes, Stitcher or TuneIn</li>
<li>Give us feedback! (iTunes, Twitter, email, Disqus comments)</li>
<li>You can donate (if you want)!</li>
<li>Overview - Interview with Damien George from the Micro Python project</li>
</ul><h3>Interview with Damien George</h3>[...]]]></description>
			<content:encoded><![CDATA[<p>Visit our <a href="http://pythonpodcast.com">site</a> for more news, information and past episodes of Podcast.__init__!</p>
<h3>Summary</h3>
<p>We talked to Damien George about his work on the Micro Python interpreter and the PyBoard SOC (Systom On a Chip). The combination of the interpreter and SOC allows Python developers to get involved in hardware hacking, as well as letting electronics afficionados try their hand at development. Damien explained to us where this fits in with the expanding landscape of low cost embedded devices and why you should get one to start playing with it.</p>
<h3>Brief Introduction</h3>
<ul><li>Date of recording - June 29th, 2015</li>
<li>Hosts - Tobias Macey and Chris Patti</li>
<li>Follow us on iTunes, Stitcher or TuneIn</li>
<li>Give us feedback! (iTunes, Twitter, email, Disqus comments)</li>
<li>You can donate (if you want)!</li>
<li>Overview - Interview with Damien George from the Micro Python project</li>
</ul><h3>Interview with Damien George</h3>
<ul><li>Introductions
<ul><li>Postdoc in Theoretical Physics</li>
</ul></li>
<li>How did you get introduced to Python?</li>
<li>What problem were you trying to solve when you first had the idea to create the Micro Python board and interpreter?
<ul><li>Not really <img src="http://www.podbean.com/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /></li>
<li>Python lets you get things done quickly</li>
<li>Abstracts the hardware really well</li>
</ul></li>
<li>In the Kickstarter video you mention that Micro Python is a complete re-implementation of Python optimized to run on a micro-controller. How hard was it to create an alternative Python implementation? Did you have hard decisions to make as to what to include given the limitations of the hardware?
<ul><li>To start with, was it even possible?
<ul><li>Proof of Concept: Get a REPL running on the board</li>
</ul></li>
<li>Lots of tricks to get things to fit into RAM
<ul><li>Stuffing integers into pointers</li>
<li>Optimizing RAM at various points</li>
<li>Runs the parser 4 times, looking for different things each time</li>
<li>Lots of things are stored in ROM in the built-in Flash</li>
</ul></li>
<li>Very fine efficiency trade off between code size, memory usage, speed.</li>
<li>REPL runs in 1K of RAM!
<ul><li>Most of this is the parse tree</li>
</ul></li>
<li>20 line script might take ~5K RAM</li>
<li>128K RAM on the Micro Python board</li>
<li>Not 100% Python - but 90% - the most useful parts</li>
</ul></li>
<li>I know that people who have developed alternative Ruby implementations have run into issues due to the lack of a formal specification. Has the fact that there <em>is</em> a specification for Python made your job easier?
<ul><li>Definitely, Python is very well defined</li>
<li>Well documented</li>
<li>Already multiple implementations</li>
</ul></li>
<li>The WiPy chip seems like an interesting device. What are some ways in which it could be put to use? A Micro Python cluster for instance?
<ul><li>Small, cheap, low power little wireless chip that also runs Python</li>
<li>You can telnet in and have a Python REPL</li>
<li>Part of the Internet of Things</li>
</ul></li>
<li>What changes did you have to make to get the Python interpreter to run without an underlying operating system?</li>
<li>When you were designing the hardware, what were some of the requirements that you were targeting in terms of performance or peripherals?
<ul><li>Wanted the best chip for the least money</li>
<li>Didn’t know ahead of time how many resources were required</li>
</ul></li>
<li>What level of hardware knowledge is required to start working with the Micro Python board?
<ul><li>Virtually none</li>
<li>Just need to plug into USB and login with a terminal program to get a Python prompt</li>
<li>Can change frequency of CPU, turn on/off LEDs, etc.</li>
<li>Connecting peripherals requires some hardware knowledge</li>
<li>Module namespace to make hardware management easier</li>
</ul></li>
<li>For anyone who is interested in writing libraries, what kinds of restrictions do they need to be aware of?
<ul><li>Be aware of RAM size limitations</li>
<li>Prety much anything that will fit will work</li>
<li>Libraries with C extensions won’t work because they rely on the CPython API</li>
</ul></li>
<li>What license is used for the Micro Python interpreter and the PyBoard? Are the compatible with commercial uses?
<ul><li>MIT License</li>
<li>Hardware schematics are open source as well, open and accessible design</li>
</ul></li>
<li>What are some of the most interesting/innovative projects that you have seen people make with the Micro Python board or runtime?
<ul><li>Damien attempted to make a quadcopter - not completely finished</li>
<li>Micro Python controlled guitar - PyBoard connected to actuators to play guitar</li>
</ul></li>
<li>How does the experience of using Micro Python compare to some of the other hardware projects that are popular right now such as Arduino, Raspberry Pi or Tessel?
<ul><li>PyBoard in between Arduino and Raspberry Pi
<ul><li>More approachable than Arduino</li>
<li>Not a full OS like Raspberry Pi</li>
</ul></li>
<li>Tessel similar to Micro Python but runs Javascript</li>
</ul></li>
<li>EU Space Agency (Europe’s version of NASA) interested in Micro Python
<ul><li>Prepared to fund Micro Python development to explore possibilities of space based applications
<ul><li>Code needs to be well written and with few bugs</li>
<li>See if it can be used for real-time systems</li>
</ul></li>
</ul></li>
</ul><h3>Picks</h3>
<ul><li>Tobias
<ul><li><a href="http://www.imdb.com/title/tt1586752/">Machine Gun Preacher</a> - Real life story of Sam Childers’ work in Southern Sudan</li>
<li><a href="https://play.google.com/store/apps/details?id=com.obreey.reader&amp;hl=en">Pocket Book Android App</a> - E-Book app with good UI/UX and solid feature set</li>
<li>Online access to digital media through local library memberships
<ul><li><a href="https://www.hoopladigital.com/home;jsessionid=BA909933ECAB99A033C57A5620A272E4">Hoopla Digital</a></li>
<li><a href="http://app.overdrive.com/">Overdrive</a></li>
</ul></li>
</ul></li>
<li>Chris
<ul><li><a href="https://en.wikipedia.org/wiki/Ramen">Real Ramen</a></li>
<li><a href="http://www.redhat.com/summit/">RedHat Summit</a></li>
<li><a href="https://github.com/mairin/selinux-coloring-book/blob/master/PDF/en/selinux-coloring-book_USLetter-Stapled.pdf">The SELinux Coloring Book</a></li>
</ul></li>
<li>Damien
<ul><li><a href="http://mosh.mit.edu">MOSH</a> - Mobile shell, resilient SSH that allows for resuming sessions across networks, computer sleeps, etc.</li>
</ul></li>
</ul><h3>Keep in Touch</h3>
<ul><li>Twitter
<ul><li><a href="https://twitter.com/micropython">@micropython</a></li>
<li><a href="https://twitter.com/damienpgeorge">@damienpgeorge</a></li>
</ul></li>
<li>GitHub - <a href="https://github.com/micropython">micropython</a></li>
</ul><p>The intro and outro music is from Requiem for a Fish <a href="http://freemusicarchive.org/music/The_Freak_Fandango_Orchestra/">The Freak Fandango Orchestra</a>  / <a href="http://creativecommons.org/licenses/by-sa/3.0/">CC BY-SA</a></p>
]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/5zr8gu/Episode15DamienGeorgeonMicroPython.mp3" length="44082904" type="audio/mpeg"/>
				<itunes:subtitle>Visit our site for more news, information and past episodes of Podcast.__init__!

Summary

We talked to Damien George about his work on the Micro Python interpreter and ...</itunes:subtitle>
		<itunes:summary>Visit our site for more news, information and past episodes of Podcast.__init__!

Summary

We talked to Damien George about his work on the Micro Python interpreter and the PyBoard SOC (Systom On a Chip). The combination of the interpreter and SOC allows Python developers to get involved in hardware hacking, as well as letting electronics afficionados try their hand at development. Damien explained to us where this fits in with the expanding landscape of low cost embedded devices and why you should get one to start playing with it.

Brief Introduction

Date of recording - June 29th, 2015
Hosts - Tobias Macey and Chris Patti
Follow us on iTunes, Stitcher or TuneIn
Give us feedback! (iTunes, Twitter, email, Disqus comments)
You can donate (if you want)!
Overview - Interview with Damien George from the Micro Python project
Interview with Damien George

Introductions
Postdoc in Theoretical Physics

How did you get introduced to Python?
What problem were you trying to solve when you first had the idea to create the Micro Python board and interpreter?
Not really :)
Python lets you get things done quickly
Abstracts the hardware really well

In the Kickstarter video you mention that Micro Python is a complete re-implementation of Python optimized to run on a micro-controller. How hard was it to create an alternative Python implementation? Did you have hard decisions to make as to what to include given the limitations of the hardware?
To start with, was it even possible?
Proof of Concept: Get a REPL running on the board

Lots of tricks to get things to fit into RAM
Stuffing integers into pointers
Optimizing RAM at various points
Runs the parser 4 times, looking for different things each time
Lots of things are stored in ROM in the built-in Flash

Very fine efficiency trade off between code size, memory usage, speed.
REPL runs in 1K of RAM!
Most of this is the parse tree

20 line script might take ~5K RAM
128K RAM on the Micro Python board
Not 100% Python - but 90% - the most useful parts

I know that people who have developed alternative Ruby implementations have run into issues due to the lack of a formal specification. Has the fact that there is a specification for Python made your job easier?
Definitely, Python is very well defined
Well documented
Already multiple implementations

The WiPy chip seems like an interesting device. What are some ways in which it could be put to use? A Micro Python cluster for instance?
Small, cheap, low power little wireless chip that also runs Python
You can telnet in and have a Python REPL
Part of the Internet of Things

What changes did you have to make to get the Python interpreter to run without an underlying operating system?
When you were designing the hardware, what were some of the requirements that you were targeting in terms of performance or peripherals?
Wanted the best chip for the least money
Didn't know ahead of time how many resources were required

What level of hardware knowledge is required to start working with the Micro Python board?
Virtually none
Just need to plug into USB and login with a terminal program to get a Python prompt
Can change frequency of CPU, turn on/off LEDs, etc.
Connecting peripherals requires some hardware knowledge
Module namespace to make hardware management easier

For anyone who is interested in writing libraries, what kinds of restrictions do they need to be aware of?
Be aware of RAM size limitations
Prety much anything that will fit will work
Libraries with C extensions won't work because they rely on the CPython API

What license is used for the Micro Python interpreter and the PyBoard? Are the compatible with commercial uses?
MIT License
Hardware schematics are open source as well, open and accessible design

What are some of the most interesting/innovative projects that you have seen people make with the Micro Python board or runtime?
Damien attempted to make a quadcopter - not completely finished
Micro Python controlled guitar - PyBoard connected to ac</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>00:49:18</itunes:duration>
		</item>
		<item>
		<title>Episode 14 - Allen Downey on Teaching Computer Science with Python</title>
		<link>http://podcastinit.podbean.com/e/episode-14-allen-downey-on-teaching-computer-science-with-python/</link>
		<comments>http://podcastinit.podbean.com/e/episode-14-allen-downey-on-teaching-computer-science-with-python/#comments</comments>
		<pubDate>Thu, 09 Jul 2015 09:13:17 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Learning</category>
	<category>Data Science</category>
	<category>Data Analysis</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-14-allen-downey-on-teaching-computer-science-with-python/</guid>

		<description><![CDATA[<p>Find past episodes and more information about the show at <a href="http://pythonpodcast.com">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&#38;refid=stpr">Stitcher</a> or <a href="http://tunein.com/radio/Podcast__init__-p726240/">TuneIn</a>
</p>
<p>Give us feedback! (iTunes, Twitter, email, Disqus comments)
You can donate (if you want)
Overview - Interview with Allen Downey, Prolific Author and Professor of Computer Science</p>
<h3>Interview with Allen Downey</h3>
<ul><li>Introductions</li>
<li>How did you get introduced to Python? - Chris
<ul><li>Wrote a Java book with an open license to allow anyone to make changes</li>
<li>Jeff Elkner translated it to Python</li>
</ul></li>
<li>What attributes of Python make it well suited for use in teaching computer science principles?
<ul><li>Syntax is simple, makes a difference for beginners</li>
<li>Good error messages</li>
<li>Batteries included</li>
</ul></li>
<li>One of the things I found very compelling about <a href="htt%20%5B...%5D"></a></li></ul>]]></description>
			<content:encoded><![CDATA[<p>Find past episodes and more information about the show at <a href="http://pythonpodcast.com">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&amp;refid=stpr">Stitcher</a> or <a href="http://tunein.com/radio/Podcast__init__-p726240/">TuneIn</a>
</p>
<p>Give us feedback! (iTunes, Twitter, email, Disqus comments)
You can donate (if you want)
Overview - Interview with Allen Downey, Prolific Author and Professor of Computer Science</p>
<h3>Interview with Allen Downey</h3>
<ul><li>Introductions</li>
<li>How did you get introduced to Python? - Chris
<ul><li>Wrote a Java book with an open license to allow anyone to make changes</li>
<li>Jeff Elkner translated it to Python</li>
</ul></li>
<li>What attributes of Python make it well suited for use in teaching computer science principles?
<ul><li>Syntax is simple, makes a difference for beginners</li>
<li>Good error messages</li>
<li>Batteries included</li>
</ul></li>
<li>One of the things I found very compelling about <a href="http://interactivepython.org/courselib/static/thinkcspy/index.html">Think Like a Computer Scientist</a> is its use of interactive turtle graphics early on. What makes the turtle continue to be a compelling educational tool and what made you choose it for this book in particular?
<ul><li>Everything you do has a visible effect, makes it easier to see what’s happening and debug</li>
<li>Used to introduce functional decomposition because of no return value in turtle graphics</li>
<li>Great way to explore complex geometric concepts</li>
</ul></li>
<li>Did the structure of your courses change when you started using Python as the language used in the classroom? Were you able to cover more material as a result?
<ul><li>Able to make material more interesting</li>
<li>Less time spent fighting with syntax</li>
</ul></li>
<li>As a professor of computer science, do you attempt to incorporate the realities of software development in a business environment, such as unit testing and working with legacy code, into your lesson plans?
<ul><li>Unit tests useful as a teaching tool</li>
<li>Version control getting introduced earlier</li>
</ul></li>
<li>A number of your books are written around the format of ‘Think X’. Can you describe what a reader can expect from this approach and how you came up with it?
<ul><li>Learning how to program can be used as a lever to learn everything else</li>
<li>You can understand what a thing is by understanding what it does</li>
</ul></li>
<li>What are some of the more common stumbling blocks students and developers encounter when trying to learn about stastics and modeling, and how can they be overcome?
<ul><li>Traditional analytic methods for statistical computation - get in the way and impede understanding
<ul><li>P-values are a great example</li>
<li>What test should I do? is the wrong question</li>
</ul></li>
</ul></li>
<li>I’ve heard you refer to yourself as a ‘bayesian’. Can you elaborate on what that means and how bayesian statistics fits into the larger landscape of data science?
<ul><li>Frustration with frequentist approach to statistics
<ul><li>Wasted time over debate of objectivity vs subjectivity</li>
</ul></li>
<li>Bayesian approach takes modeling ideas and makes them explicit
<ul><li>Can directly compare and contrast results of competing models</li>
</ul></li>
<li>Classical approaches don’t answer the most interesting questions
*We’re big fans of iPython notebook which you’ve used in at least one of your books already - can you describe some of the ways you have implemented it in an educational context, as well as some of the benefits and drawbacks?</li>
<li>Started using about 2 years ago</li>
<li>Appreciated usefulness for books and teaching because of synthesis of text, code and results</li>
<li>Working on DSP really highlighted the usefulness of IPython notebooks</li>
</ul></li>
</ul><h3>Picks</h3>
<ul><li>Tobias
<ul><li><a href="https://github.com/vladimarius/imapy">IMAPy</a> - IMAP for humans</li>
<li><a href="https://github.com/raelgc/scudcloud">ScudCloud</a> - Linux desktop Slack client</li>
<li><a href="http://thrv.me/SCuHLd">Thrive</a> - Online purchasing club for healthy and organic foods</li>
<li><a href="https://floobits.com/">Floobits</a> - remote pair programming</li>
</ul></li>
<li>Chris
<ul><li><a href="http://www.imdb.com/title/tt1441953/">Testament of Youth</a></li>
<li><a href="https://www.masteringemacs.org/">Mastering Emacs - The Website / Blog</a></li>
<li><a href="https://chrome.google.com/webstore/detail/stayfocusd/laankejkbhbdhmipfmgcngdelahlfoji?hl=en">StayFocused</a></li>
<li><a href="http://bethsoft.com/en-us/games/fallout_shelter">Fallout Shelter</a></li>
</ul></li>
</ul><h3>Keep in Touch</h3>
<ul><li><a href="https://twitter.com/allendowney">Twitter</a></li>
<li><a href="http://allendowney.com">Blog</a></li>
</ul><p>The intro and outro music is from Requiem for a Fish <a href="http://freemusicarchive.org/music/The_Freak_Fandango_Orchestra/">The Freak Fandango Orchestra</a> / <a href="http://creativecommons.org/licenses/by-sa/3.0/">CC BY-SA</a></p>
]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/msh46w/Episode14-AllenDowneyonTeachingComputerSciencewithPython.mp3" length="44811525" type="audio/mpeg"/>
				<itunes:subtitle>Find past episodes and more information about the show at iTunes, Stitcher or TuneIn
Give us feedback! (iTunes, Twitter, email, Disqus comments)
You can donate (if you ...</itunes:subtitle>
		<itunes:summary>Find past episodes and more information about the show at iTunes, Stitcher or TuneIn
Give us feedback! (iTunes, Twitter, email, Disqus comments)
You can donate (if you want)
Overview - Interview with Allen Downey, Prolific Author and Professor of Computer Science


Interview with Allen Downey

Introductions
How did you get introduced to Python? - Chris
Wrote a Java book with an open license to allow anyone to make changes
Jeff Elkner translated it to Python

What attributes of Python make it well suited for use in teaching computer science principles?
Syntax is simple, makes a difference for beginners
Good error messages
Batteries included

One of the things I found very compelling about Think Like a Computer Scientist is its use of interactive turtle graphics early on. What makes the turtle continue to be a compelling educational tool and what made you choose it for this book in particular?
Everything you do has a visible effect, makes it easier to see what's happening and debug
Used to introduce functional decomposition because of no return value in turtle graphics
Great way to explore complex geometric concepts

Did the structure of your courses change when you started using Python as the language used in the classroom? Were you able to cover more material as a result?
Able to make material more interesting
Less time spent fighting with syntax

As a professor of computer science, do you attempt to incorporate the realities of software development in a business environment, such as unit testing and working with legacy code, into your lesson plans?
Unit tests useful as a teaching tool
Version control getting introduced earlier

A number of your books are written around the format of 'Think X'. Can you describe what a reader can expect from this approach and how you came up with it?
Learning how to program can be used as a lever to learn everything else
You can understand what a thing is by understanding what it does

What are some of the more common stumbling blocks students and developers encounter when trying to learn about stastics and modeling, and how can they be overcome?
Traditional analytic methods for statistical computation - get in the way and impede understanding
P-values are a great example
What test should I do? is the wrong question


I've heard you refer to yourself as a 'bayesian'. Can you elaborate on what that means and how bayesian statistics fits into the larger landscape of data science?
Frustration with frequentist approach to statistics
Wasted time over debate of objectivity vs subjectivity

Bayesian approach takes modeling ideas and makes them explicit
Can directly compare and contrast results of competing models

Classical approaches don't answer the most interesting questions
*We're big fans of iPython notebook which you've used in at least one of your books already - can you describe some of the ways you have implemented it in an educational context, as well as some of the benefits and drawbacks?
Started using about 2 years ago
Appreciated usefulness for books and teaching because of synthesis of text, code and results
Working on DSP really highlighted the usefulness of IPython notebooks

Picks

Tobias
IMAPy - IMAP for humans
ScudCloud - Linux desktop Slack client
Thrive - Online purchasing club for healthy and organic foods
Floobits - remote pair programming

Chris
Testament of Youth
Mastering Emacs - The Website / Blog
StayFocused
Fallout Shelter

Keep in Touch

Twitter
Blog
The intro and outro music is from Requiem for a Fish The Freak Fandango Orchestra / CC BY-SA</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>00:37:43</itunes:duration>
		</item>
		<item>
		<title>Episode 13 - Jacob Kovac on KivEnt</title>
		<link>http://podcastinit.podbean.com/e/episode-13-jacob-kovac-on-kivent/</link>
		<comments>http://podcastinit.podbean.com/e/episode-13-jacob-kovac-on-kivent/#comments</comments>
		<pubDate>Fri, 03 Jul 2015 02:32:47 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Open Source</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-13-jacob-kovac-on-kivent/</guid>

		<description><![CDATA[<p>Listen to past episodes and find out more about the show at our website <a href="http://pythonpodcast.com">pythonpodcast.com</a></p>
<h3>Synopsis</h3>
<p>In this episode we talked to Jacob Kovac, creator of the KivEnt game engine and one of the Kivy core developers. He told us about what inspired him to create the KivEnt project, some of the ways that he has managed to optimize rendering time and some of the problems that he has encountered as part of his work on the project. We also discussed what the use cases and limitations of the KivEnt engine are and he shared some of the projects that have been made with it.</p>
<h3>Brief Introduction</h3>
<ul><li>Date of recording - June 17th, 2015</li>
<li>Hosts - Tobias Macey and Chris Patti</li>
<li>Follow us on iTunes, Stitcher or TuneIn</li>
<li>Give us feedback! (iTunes, Twitter, email, Disqus comments)</li>
<li>We don’t have any corporate sponsorship or advertisements in the show because we are making it for the community and w [...]</li></ul>]]></description>
			<content:encoded><![CDATA[<p>Listen to past episodes and find out more about the show at our website <a href="http://pythonpodcast.com">pythonpodcast.com</a></p>
<h3>Synopsis</h3>
<p>In this episode we talked to Jacob Kovac, creator of the KivEnt game engine and one of the Kivy core developers. He told us about what inspired him to create the KivEnt project, some of the ways that he has managed to optimize rendering time and some of the problems that he has encountered as part of his work on the project. We also discussed what the use cases and limitations of the KivEnt engine are and he shared some of the projects that have been made with it.</p>
<h3>Brief Introduction</h3>
<ul><li>Date of recording - June 17th, 2015</li>
<li>Hosts - Tobias Macey and Chris Patti</li>
<li>Follow us on iTunes, Stitcher or TuneIn</li>
<li>Give us feedback! (iTunes, Twitter, email, Disqus comments)</li>
<li>We don’t have any corporate sponsorship or advertisements in the show because we are making it for the community and we respect our listeners and value your time. If you would like to help support the show and keep it ad-free you can find out how by visiting our <a href="http://podcastinit.com/our-plans-for-your-donations.html">website</a></li>
<li>Overview - Interview with Jacob Kovac about the KivEnt Game Engine, based off of Kivy</li>
</ul><h3>Interview with Jacob Kovac</h3>
<ul><li>Introductions</li>
<li>How did you get introduced to Python? - Chris</li>
<li>Could you please give us a high level overview of KivEnt and how it differs from other game builder frameworks like Unity or Unreal?
<ul><li>Manages memory for game objects and stores them contiguously in memory for greater efficiency</li>
<li>Real-time focused rendering engine for Kivy</li>
<li>Cython interface to provide performant game objects with Python API</li>
<li>Increased speed of main render loop by 38X by removing a single Python list lookup</li>
<li>Kivent is mainly 2D focused, vs 3D for Unity/Unreal</li>
<li>Python all the way down
<ul><li>Cython and pointer magic for optimization purposes</li>
</ul></li>
<li>Made to be familiar to Pythonistas</li>
<li>Aiming for “A” level games</li>
<li>Bringing modern advancements in making games to Python - GPU awareness</li>
<li>Built with constraints in mind</li>
<li>The Pacman Dossier</li>
</ul></li>
<li>What inspired you to create the KivEnt engine?
<ul><li>Tried to create an Android infinite runner in Kivy, performance was unacceptable</li>
<li>Looking for how to build games in Python with large amounts of data</li>
</ul></li>
<li>Is there a particular kind of game KivEnt is particularly suited for versus any of the other popular frameworks?
<ul><li>Focuses mainly on 2D, agnostic as to ‘type’ of game</li>
<li>Jacob’s interests largely focused on procedurally generated environments</li>
</ul></li>
<li>Could KivEnt be used to create networked multiplayer games and what challenges might that bring to the table for the aspiring KivEnt game developer?
<ul><li>Multiplayer thought to be largely out of scope
<ul><li>This doesn’t mean KivEnt is bad for multiplayer games, but that KivEnt in and of itself doesn’t wholly solve this problem.</li>
<li>Plenty of other frameworks to draw on for handling the multi-player server or pulling data from it, KivEnt solves the client side problems germane to making a game in Python</li>
</ul></li>
</ul></li>
<li>Does the fact that KivEnt games need to run on so many platforms present any unique difficulties in KivEnt’s development?
<ul><li>Kivy has solved most of the cross-platform problems</li>
<li>Difference in GPU vendors has proved the most difficult</li>
</ul></li>
<li>I hear game developers talk a lot about assets and asset formats. What kinds of assets can be used with KivEnt?
<ul><li>2D assets are simple - especially as compared to 3D</li>
<li>KivEnt supports any image format that Kivvy does for your platform</li>
<li>Coming next release - you can specify the vertex format for your model</li>
<li>https://youtu.be/qe9fWC-2e3M</li>
</ul></li>
<li>I have heard that unit testing games is difficult and rarely done for reasons of time pressure, as well as lack of determinism in the interactions. Does KivEnt provide any utilities to make this easier?
<ul><li>Not currently well tested, but targeting that for next release</li>
<li>Trying to add tooling to make testing games easier, though still somewhat difficult</li>
<li>Platform Biased Podcast - by a bunch of Microsoft Studios SDETs</li>
</ul></li>
<li>How does KivEnt handle input and what kids of input devices are supported?
<ul><li>Input handled entirely by Kivy, so any inputs supported by Kivy are accessible in KivEnt</li>
<li>Rumors of using Kinect camera with Kivy/KivEnt applications</li>
</ul></li>
<li>Is there a built in physics engine or is that something that is pluggable?
<ul><li>Mostly pluggable</li>
<li>Chipmunk 2D integration provided via a module</li>
<li>Particle Panda - one of the major inspirations for KivEnt</li>
<li>New Particle engine coming in the next version of KivEnt</li>
</ul></li>
<li>How does KivEnt handle collision tracking?
<ul><li>Mathematically difficult, very hard to get right</li>
<li>Don’t do it! Use the physics engine - Chipmunk 2D is also a collision detection engine</li>
<li>Kivy enables devs to use C, C++, Java and Objective C code in their games</li>
<li>Game development has been democratized</li>
<li>Entity / Component architecture enables great modularity</li>
<li>Game objects that appear on the screen (Gun, ball, etc.) are not represented as such in the system</li>
</ul></li>
<li>Can you tell us about some of the projects that you have seen built in KivEnt which you are most excited by?
<ul><li>https://github.com/chozabu/KivEntEd</li>
<li>https://play.google.com/store/apps/details?id=org.chozabu.boardzfree&amp;hl=en</li>
</ul></li>
<li>What are some ways in which our listeners could help contribute to the project?
<ul><li>Would like to see more people build games in KivEnt
<ul><li>Give feedback about the experience and what can be improved</li>
</ul></li>
<li>If you have Apple hardware, try out KivEnt and file issues with any errors that occur</li>
</ul></li>
</ul><h3>Picks</h3>
<ul><li>Tobias
<ul><li><a href="https://github.com/tkf/emacs-ipython-notebook">EIN (Emacs IPython Notebook)</a></li>
<li><a href="https://pip.pypa.io/en/latest/news.html">Pip 7.x</a></li>
<li><a href="http://www.tkqlhce.com/click-7841235-11260198-1430755877000?url=http%3A%2F%2Fshop.oreilly.com%2Fproduct%2F0636920028468.*do%3Fcmp%3Daf-webplatform-books-videos-product_cj_9781449358068_%2525zp&amp;cjsku=0636920028468*">RESTful Web APIs</a></li>
</ul></li>
<li>Chris
<ul><li><a href="http://www.imdb.com/title/tt1637727/">The Killing</a></li>
<li><a href="http://rethinkdb.com/blog/pythonista/">Data Science on the iPad with RethinkDB</a></li>
<li><a href="http://lefthandbrewing.com/beers/milk-stout-nitro/">Left Hand Nitro Milk Stout</a></li>
</ul></li>
<li>Jacob
<ul><li><a href="http://getpelican.com">Pelican Static Site Generator</a></li>
<li><a href="https://terraria.org/">Terraria 1.3</a></li>
<li>Amorone Homemade Red Wine</li>
</ul></li>
</ul><h3>Keep in Touch</h3>
<ul><li>E-Mail - kovac</li>
<li>Blog - chaosbuffalogames.com/blog</li>
<li>IRC - #kivy</li>
</ul><p>The intro and outro music is from Requiem for a Fish <a href="http://freemusicarchive.org/music/The_Freak_Fandango_Orchestra/">The Freak Fandango Orchestra</a> / <a href="http://creativecommons.org/licenses/by-sa/3.0/">CC BY-SA</a></p>
]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/43m9wk/Episode13-JacobKovaconKivEnt.mp3" length="76594996" type="audio/mpeg"/>
				<itunes:subtitle>Listen to past episodes and find out more about the show at our website pythonpodcast.com

Synopsis

In this episode we talked to Jacob Kovac, creator of the ...</itunes:subtitle>
		<itunes:summary>Listen to past episodes and find out more about the show at our website pythonpodcast.com

Synopsis

In this episode we talked to Jacob Kovac, creator of the KivEnt game engine and one of the Kivy core developers. He told us about what inspired him to create the KivEnt project, some of the ways that he has managed to optimize rendering time and some of the problems that he has encountered as part of his work on the project. We also discussed what the use cases and limitations of the KivEnt engine are and he shared some of the projects that have been made with it.

Brief Introduction

Date of recording - June 17th, 2015
Hosts - Tobias Macey and Chris Patti
Follow us on iTunes, Stitcher or TuneIn
Give us feedback! (iTunes, Twitter, email, Disqus comments)
We don't have any corporate sponsorship or advertisements in the show because we are making it for the community and we respect our listeners and value your time. If you would like to help support the show and keep it ad-free you can find out how by visiting our website
Overview - Interview with Jacob Kovac about the KivEnt Game Engine, based off of Kivy
Interview with Jacob Kovac

Introductions
How did you get introduced to Python? - Chris
Could you please give us a high level overview of KivEnt and how it differs from other game builder frameworks like Unity or Unreal?
Manages memory for game objects and stores them contiguously in memory for greater efficiency
Real-time focused rendering engine for Kivy
Cython interface to provide performant game objects with Python API
Increased speed of main render loop by 38X by removing a single Python list lookup
Kivent is mainly 2D focused, vs 3D for Unity/Unreal
Python all the way down
Cython and pointer magic for optimization purposes

Made to be familiar to Pythonistas
Aiming for "A" level games
Bringing modern advancements in making games to Python - GPU awareness
Built with constraints in mind
The Pacman Dossier

What inspired you to create the KivEnt engine?
Tried to create an Android infinite runner in Kivy, performance was unacceptable
Looking for how to build games in Python with large amounts of data

Is there a particular kind of game KivEnt is particularly suited for versus any of the other popular frameworks?
Focuses mainly on 2D, agnostic as to 'type' of game
Jacob's interests largely focused on procedurally generated environments

Could KivEnt be used to create networked multiplayer games and what challenges might that bring to the table for the aspiring KivEnt game developer?
Multiplayer thought to be largely out of scope
This doesn't mean KivEnt is bad for multiplayer games, but that KivEnt in and of itself doesn't wholly solve this problem.
Plenty of other frameworks to draw on for handling the multi-player server or pulling data from it, KivEnt solves the client side problems germane to making a game in Python


Does the fact that KivEnt games need to run on so many platforms present any unique difficulties in KivEnt's development?
Kivy has solved most of the cross-platform problems
Difference in GPU vendors has proved the most difficult

I hear game developers talk a lot about assets and asset formats. What kinds of assets can be used with KivEnt?
2D assets are simple - especially as compared to 3D
KivEnt supports any image format that Kivvy does for your platform
Coming next release - you can specify the vertex format for your model
https://youtu.be/qe9fWC-2e3M

I have heard that unit testing games is difficult and rarely done for reasons of time pressure, as well as lack of determinism in the interactions. Does KivEnt provide any utilities to make this easier?
Not currently well tested, but targeting that for next release
Trying to add tooling to make testing games easier, though still somewhat difficult
Platform Biased Podcast - by a bunch of Microsoft Studios SDETs

How does KivEnt handle input and what kids of input devices are supported?
Input handled entirely by Kivy, so any inputs supported by Kivy are acces</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>01:08:42</itunes:duration>
		</item>
		<item>
		<title>Episode 12 - Eric Schles on Fighting Human Trafficking with Python</title>
		<link>http://podcastinit.podbean.com/e/episode-12-eric-schles-on-fighting-human-trafficking-with-python/</link>
		<comments>http://podcastinit.podbean.com/e/episode-12-eric-schles-on-fighting-human-trafficking-with-python/#comments</comments>
		<pubDate>Thu, 25 Jun 2015 10:06:21 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Data Science</category>
	<category>Data Analysis</category>
	<category>Open Source</category>
	<category>Social Good</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-12-eric-schles-on-fighting-human-trafficking-with-python/</guid>

		<description><![CDATA[<p>Listen to past episodes, read about the hosts or donate to the show at <a href="http://podcastinit.com">podcastinit.com</a></p>
<h3>Brief Introduction</h3>
<ul><li>Date of recording - June 10th, 2015</li>
<li>Hosts Tobias Macey and Chris Patti</li>
<li>Follow us on iTunes, Stitcher or TuneIn</li>
<li>Give us feedback! (iTunes, Twitter, email, Disqus comments)</li>
<li>You can <a href="http://podcastinit.com/our-plans-for-your-donations.html">donate</a> (if you want)!</li>
<li>Overview - Interview with Eric Schles</li>
</ul><h3>Interview with Eric Schles</h3>
<ul><li>Introductions</li>
<li>How did you get introduced to Python?</li>
<li>What inspired you to take up the fight against slavery? Is there personal story behind this choice?</li>
<li>Some of your work touches on the “Deep Web”. Can you provide listeners with some context around what that term means and role it plays in what you do?
<ul><li>Tor .onion sites (Hidden Services) are examples</li>
<li>Anonymous Web [...]</li></ul></li></ul>]]></description>
			<content:encoded><![CDATA[<p>Listen to past episodes, read about the hosts or donate to the show at <a href="http://podcastinit.com">podcastinit.com</a></p>
<h3>Brief Introduction</h3>
<ul><li>Date of recording - June 10th, 2015</li>
<li>Hosts Tobias Macey and Chris Patti</li>
<li>Follow us on iTunes, Stitcher or TuneIn</li>
<li>Give us feedback! (iTunes, Twitter, email, Disqus comments)</li>
<li>You can <a href="http://podcastinit.com/our-plans-for-your-donations.html">donate</a> (if you want)!</li>
<li>Overview - Interview with Eric Schles</li>
</ul><h3>Interview with Eric Schles</h3>
<ul><li>Introductions</li>
<li>How did you get introduced to Python?</li>
<li>What inspired you to take up the fight against slavery? Is there personal story behind this choice?</li>
<li>Some of your work touches on the “Deep Web”. Can you provide listeners with some context around what that term means and role it plays in what you do?
<ul><li>Tor .onion sites (Hidden Services) are examples</li>
<li>Anonymous Web Experience</li>
<li>Anonymity allows for illegal, immoral things like buying selling people</li>
<li>Conceptually very important idea</li>
<li>Bruce Schneier - Web technologies need to be more privacy aware</li>
<li>Like a really scary version of “The Internet of the Old Days”</li>
<li>Photos of young, exploited men and women</li>
<li>Pedophiles are building communities, having parties through these hidden services</li>
<li>Eric feels that Tor is an extreme</li>
<li>Feels there had to be a way to protect the rights of legitimate while protecting against pedophiles</li>
<li>Maybe a voting system?</li>
<li>The Tor project feels that any compromise lessens the that’s so important for people in embattled or countries (Worded that poorly -Chris)</li>
<li>No metrics on the amount of pedophilia that actually happens Tor - probably a lot</li>
<li>Sexually abused victims of trafficking grow up damanged unable to do anything else</li>
<li>Consumers of this type of porn were often themselves victims sexual abuse</li>
<li>Structural dissonance which exists to create this problem society needs to be addressed</li>
<li>Google puts the number to the anti-trafficking hotline at top of any trafficking search results</li>
<li>Darren (Derek?) Hayes - redirect to trafficking resources when viewing advertisements for victims trafficking</li>
</ul></li>
<li>Why did you choose Python as opposed to any other tool for your search engine?
<ul><li>Needed solutions quickly with the ability to evolve as needed</li>
<li>Able to rapidly develop and incorporate new features rapidly</li>
<li>Easy to scale as needed</li>
<li>Flask is easier to prototype and iterate with</li>
<li>Python data science tools make the analysis easy</li>
<li>Able to finish a 2 year C++ project in 3 weeks using Python</li>
<li>Doing data science in Ruby is challenging</li>
<li>Pandas Dataframe galvanized the creation of a lot of other useful tools</li>
<li><a href="https://github.com/wrobstory/vincent">Vincent</a> - write Python which compiles to D3</li>
</ul></li>
<li>Can you provide a high level description of the technical details the search engine that you created, and what it’s like to with Tor through Python?
<ul><li>Directed search engine</li>
<li>“It would be like if you went to Google but everything watched was Porn which you were uncomfortabl seeing and you sad”</li>
<li>Get most case information through regular old detective work</li>
<li>Person arrested / in holding yields phone number, other attributes that can feed the search engine</li>
<li>Google can’t scrape the deep web</li>
<li>Memex tool indexes the deep web - Eric’s search engine uses that</li>
<li>Eric does design work for the Memex project</li>
<li>Developed by the amazing Chris White</li>
<li>Eric’s search engine uses the Tor driver in Selenium to .onion sites</li>
</ul></li>
<li>What are some of the technical and legal challenges that you experienced in the course of your work?
<ul><li>Most of the technical challenges are around automated processing</li>
<li>Legal structure provides some limits on what can be worked on</li>
</ul></li>
<li>Does your search engine try to infer who might be engaged in work voluntarily as opposed to those being forced into it their will?
<ul><li>No, because they get all their case referrals from detective work</li>
<li>You have to have been hospitalized or in some other way come the attention of the authorities for being deprived of rights</li>
<li>Trafficking looks very different in different cultures</li>
<li>Global similarities</li>
<li>Afraid to say why if hurt</li>
<li>Forced into having sex against your will</li>
<li>Clear patterns of indication</li>
<li>Urban versus Suburban versus Rural</li>
<li>Fracking towns</li>
<li>Demographics are very different - mostly men very women, LOTS of ads for sex workers</li>
<li>Only helping people that want to be helped</li>
</ul></li>
<li>What was the most surprising fact you uncovered as part of research?
<ul><li>Imagery of exploited children is so depressing and sad</li>
</ul></li>
<li>Without revealing anything you shouldn’t, are you aware of being set free as a result of your work?
<ul><li>“Not my work, our work”</li>
<li>Not an individual effort</li>
<li>lawyers, analysts, larger DAs office</li>
</ul></li>
<li>Given the complicated socio-economic aspects of human and prosecution of those who are responsible, can you discuss of the moral and ethical considerations that you have confronted with while building these tools?
<ul><li>Privacy is the biggest concern</li>
<li>Open source book to teach colleagues at the DA’s office how program to in Python</li>
<li>Sometimes Eric works at <a href="http://civichall.org/">Civic Hall</a></li>
</ul></li>
<li>Are there any projects out there that you consider similar to you are working on?
<ul><li>Thorn’s <a href="https://www.wearethorn.org/spotlight/">Spotlight tool</a></li>
<li><a href="http://opencatalog.darpa.mil/MEMEX.html">Memex Project</a></li>
<li><a href="http://www.polarisproject.org/">Polaris Project</a></li>
<li><a href="http://www.datakind.org/">Datakind</a> Anti Trafficking</li>
<li><a href="https://www.dosomething.org/">dosomething.org</a> - more broadly focused - help center for teens</li>
<li><a href="http://techcrunch.com/2015/02/20/software-eats-sex-trafficking-ycs-rescue-forensics-aids-law-enforcement-in-finding-victims/">RescueForensics - stage startup</a></li>
</ul></li>
<li>What would it take for other municipalities and law agencies to get started with using your tools?
<ul><li>Go to <a href="https://github.com/EricSchles">https://github.com/EricSchles</a></li>
<li>Alert System and investa_gator</li>
<li>Contact Eric at <a href="mailto:ericschles@gmail.com">ericschles@gmail.com</a> to collaborate</li>
</ul></li>
<li>How can our listeners get involved and help you with this Chris
<ul><li>Tweet at @EricSchles or E-mail Eric</li>
<li>Volunteer for any of the non profit anti-trafficking groups</li>
</ul></li>
<li>Message to the community: There is a world of good waiting to happen</li>
</ul><h3>Picks</h3>
<ul><li>Tobias
<ul><li><a href="https://twitter.com/accidental__aRt">@accidental_aRt</a></li>
<li><a href="https://tldrlegal.com/">tldrlegal.com</a></li>
<li><a href="http://amzn.to/1FFOPPr">Rishloo</a></li>
</ul></li>
<li>Chris
<ul><li><a href="http://www.vertigocomics.com/comics/the-sandman-overture-2013/the-sandman-overture-1">Neil Gaiman’s Sandman Overture</a></li>
<li><a href="http://www.beeradvocate.com/beer/profile/27039/16814/">Alchemist Brewing’s Heady Topper</a></li>
<li><a href="http://henofthewood.com/">Hen of the Wood</a></li>
</ul></li>
<li>Eric
<ul><li><a href="http://seriously.dontusethiscode.com/">James Powell’s Blog</a></li>
<li><a href="http://www.julianunes.com/">Julia Nunes</a></li>
<li><a href="http://www.xkcd.com">XKCD</a></li>
<li><a href="http://www.explainxkcd.com/wiki/index.php/Main_Page">Explain XKCD</a></li>
</ul></li>
</ul><h3>Keep in Touch</h3>
<ul><li>Twitter: <a href="https://twitter.com/ericschles">@EricSchles</a></li>
<li><a href="https://about.me/ericschles">Eric’s About.me page</a></li>
</ul><h3>More From Eric</h3>
<ul><li>He <a href="https://www.youtube.com/watch?v=NVsDUos_HHY">presented</a> at PyGotham 2014</li>
<li>He also <a href="http://opendatascicon.com/schedule/finding-patterns-that-indicate-human-trafficking-with-open-data/">talked</a> at the Open Data Science Conference 2015 Boston</li>
</ul><p>The intro and outro music is from Requiem for a Fish <a href="http://freemusicarchive.org/music/The_Freak_Fandango_Orchestra/">The Freak Fandango Orchestra</a> / <a href="http://creativecommons.org/licenses/by-sa/3.0/">CC BY-SA</a></p>
]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/x5bqmi/Episode12-EricSchlesonFightingHumanTrafficking.mp3" length="84928552" type="audio/mpeg"/>
				<itunes:subtitle>Listen to past episodes, read about the hosts or donate to the show at podcastinit.com
Brief Introduction

Date of recording - June 10th, 2015
Hosts Tobias Macey and ...</itunes:subtitle>
		<itunes:summary>Listen to past episodes, read about the hosts or donate to the show at podcastinit.com
Brief Introduction

Date of recording - June 10th, 2015
Hosts Tobias Macey and Chris Patti
Follow us on iTunes, Stitcher or TuneIn
Give us feedback! (iTunes, Twitter, email, Disqus comments)
You can donate (if you want)!
Overview - Interview with Eric Schles
Interview with Eric Schles

Introductions
How did you get introduced to Python?
What inspired you to take up the fight against slavery? Is there personal story behind this choice?
Some of your work touches on the "Deep Web". Can you provide listeners with some context around what that term means and role it plays in what you do?
Tor .onion sites (Hidden Services) are examples
Anonymous Web Experience
Anonymity allows for illegal, immoral things like buying selling people
Conceptually very important idea
Bruce Schneier - Web technologies need to be more privacy aware
Like a really scary version of "The Internet of the Old Days"
Photos of young, exploited men and women
Pedophiles are building communities, having parties through these hidden services
Eric feels that Tor is an extreme
Feels there had to be a way to protect the rights of legitimate while protecting against pedophiles
Maybe a voting system?
The Tor project feels that any compromise lessens the that's so important for people in embattled or countries (Worded that poorly -Chris)
No metrics on the amount of pedophilia that actually happens Tor - probably a lot
Sexually abused victims of trafficking grow up damanged unable to do anything else
Consumers of this type of porn were often themselves victims sexual abuse
Structural dissonance which exists to create this problem society needs to be addressed
Google puts the number to the anti-trafficking hotline at top of any trafficking search results
Darren (Derek?) Hayes - redirect to trafficking resources when viewing advertisements for victims trafficking

Why did you choose Python as opposed to any other tool for your search engine?
Needed solutions quickly with the ability to evolve as needed
Able to rapidly develop and incorporate new features rapidly
Easy to scale as needed
Flask is easier to prototype and iterate with
Python data science tools make the analysis easy
Able to finish a 2 year C++ project in 3 weeks using Python
Doing data science in Ruby is challenging
Pandas Dataframe galvanized the creation of a lot of other useful tools
Vincent - write Python which compiles to D3

Can you provide a high level description of the technical details the search engine that you created, and what it's like to with Tor through Python?
Directed search engine
"It would be like if you went to Google but everything watched was Porn which you were uncomfortabl seeing and you sad"
Get most case information through regular old detective work
Person arrested / in holding yields phone number, other attributes that can feed the search engine
Google can't scrape the deep web
Memex tool indexes the deep web - Eric's search engine uses that
Eric does design work for the Memex project
Developed by the amazing Chris White
Eric's search engine uses the Tor driver in Selenium to .onion sites

What are some of the technical and legal challenges that you experienced in the course of your work?
Most of the technical challenges are around automated processing
Legal structure provides some limits on what can be worked on

Does your search engine try to infer who might be engaged in work voluntarily as opposed to those being forced into it their will?
No, because they get all their case referrals from detective work
You have to have been hospitalized or in some other way come the attention of the authorities for being deprived of rights
Trafficking looks very different in different cultures
Global similarities
Afraid to say why if hurt
Forced into having sex against your will
Clear patterns of indication
Urban versus Suburban versus Rural
Fracking towns
Demographics are very different - mostly men very women</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>01:13:10</itunes:duration>
		</item>
		<item>
		<title>Episode 11 - Naomi Ceder, Lynn Root and Tracy Osborn on Diversity in the Python Community</title>
		<link>http://podcastinit.podbean.com/e/episode-11-naomi-ceder-lynn-root-and-tracy-osborn-on-diversity-in-the-python-community/</link>
		<comments>http://podcastinit.podbean.com/e/episode-11-naomi-ceder-lynn-root-and-tracy-osborn-on-diversity-in-the-python-community/#comments</comments>
		<pubDate>Thu, 18 Jun 2015 12:23:22 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Learning</category>
	<category>Community</category>
	<category>Open Source</category>
	<category>Diversity</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-11-naomi-ceder-lynn-root-and-tracy-osborn-on-diversity-in-the-python-community/</guid>

		<description><![CDATA[<p>Listen to past episodes, read about the show and check out our donations section at  <a href="http://www.podcastinit.com">podcastinit.com</a></p>
<h3>Brief Introduction</h3>
<ul><li>Date of recording - Jun-10th, 2015</li>
<li>Hosts  Macey and Chris Patti</li>
<li>Follow us on iTunes, Stitcher or TuneIn</li>
<li>Give us feedback! (iTunes, Twitter, email, Disqus comments)</li>
<li>You can donate (if you want)!</li>
<li>Overview - Interview with Tracy Osborn, Naomi Ceder, Lynn Root</li>
</ul><h3>Interview with Prominent PyLadies</h3>
<ul><li>Introductions
<ul><li>Tracy Osborn</li>
<li>Naomi Ceder</li>
<li>Lynn Root</li>
</ul></li>
<li>How did you get introduced to Python? </li>
<li>In what ways do you think the Python community has succeeded in making itself more friendly and welcoming to women and other under represented minorities, and where could it do better? 
<ul><li>Python community leadership takes a positive stance on diversity</li>
<li>Codes of conduct are taken very [...]</li></ul></li></ul>]]></description>
			<content:encoded><![CDATA[<p>Listen to past episodes, read about the show and check out our donations section at  <a href="http://www.podcastinit.com">podcastinit.com</a></p>
<h3>Brief Introduction</h3>
<ul><li>Date of recording - Jun-10th, 2015</li>
<li>Hosts  Macey and Chris Patti</li>
<li>Follow us on iTunes, Stitcher or TuneIn</li>
<li>Give us feedback! (iTunes, Twitter, email, Disqus comments)</li>
<li>You can donate (if you want)!</li>
<li>Overview - Interview with Tracy Osborn, Naomi Ceder, Lynn Root</li>
</ul><h3>Interview with Prominent PyLadies</h3>
<ul><li>Introductions
<ul><li>Tracy Osborn</li>
<li>Naomi Ceder</li>
<li>Lynn Root</li>
</ul></li>
<li>How did you get introduced to Python? </li>
<li>In what ways do you think the Python community has succeeded in making itself more friendly and welcoming to women and other under represented minorities, and where could it do better? 
<ul><li>Python community leadership takes a positive stance on diversity</li>
<li>Codes of conduct are taken very seriously</li>
<li>Financial diversity needs more focus</li>
</ul></li>
<li>What can you tell us about PyLadies and DJango Girls? 
<ul><li>PyLadies
<ul><li>started in a coffee shop in LA</li>
<li>pip install PyLadies</li>
<li>Over 70 locations on almost every continent - half on meetup.com</li>
</ul></li>
</ul></li>
<li>What are some of the challenges you still face in being a part of the Python community, and how can our listeners help? 
<ul><li>Don’t be disparaging about women-focused events</li>
</ul></li>
<li>I had to read up to page 17 of the top authors list on PyPi to find a woman. Can you provide some insight into what may be contributing to this state of affairs and how we can help to improve it? 
<ul><li>pypi is confusing and intimidating</li>
<li>Process and tools are tough to use</li>
<li>Maybe Pyladies should host a “make your own package” night</li>
<li>Mentorship and easy HOWTOs are needed</li>
</ul></li>
<li>You have all gained some notoriety in the Python community through work that you have done. Do you feel that you were faced with greater adversity than your peers in the course of your careers?
<ul><li>Startup community more hostile than Python community</li>
</ul></li>
<li>We are talking to each of you because of your involvement in the Python community. Have you worked with and been involved in other language communities? If so, can you provide some comparisons between that and Python in how they manage the subject of diversity, gender and otherwise? 
<ul><li>Design community - lots of conferences with “all dude” conference speaker line up</li>
<li>Startups very focused on males for employees and customers</li>
</ul></li>
<li>What effect do you think job descriptions play in excluding women and other minorities from roles in development positions? (In reference to <a href="https://blog.safaribooksonline.com/2015/06/08/on-recruiting-inclusiveness-and-crafting-better-job-descriptions/">https://blog.safaribooksonline.com/2015/06/08/on-recruiting-inclusiveness-and-crafting-better-job-descriptions/</a>)
<ul><li>Discourage more appropriate term than exclude</li>
<li>Women less likely to apply for roles that they are not completely qualified for</li>
<li>Spotify experimenting with blind resume review and cross-checking of job descriptions
<ul><li>Result is more women applying and having better results</li>
</ul></li>
</ul></li>
<li>For any women and young girls who may be considering a career in technology, do you have any words of advice? 
<ul><li>Go for it, but be aware that it’s hard</li>
</ul></li>
<li>Do you have any advice for the men in the Python community and technology as a whole? 
<ul><li>Actually listen when somebody tells you that it’s not the same for them (race, economics, gender)</li>
<li>Have some compassion and empathy</li>
<li>Men should educate themselves</li>
<li>Old habits die hard but getting over them is important</li>
</ul></li>
<li>
<p>Is there anything we haven’t discussed that any of you would like to bring up? </p>
<h3>Picks</h3>
</li>
<li>
<p>Tobias</p>
<ul><li><a href="http://amzn.to/1FFMqUT">The Banned and the Banished</a> series by James Clemens</li>
<li><a href="http://www.imdb.com/title/tt0061512/">Cool Hand Luke</a> with Paul Newman</li>
</ul></li>
<li>Chris
<ul><li><a href="http://www.baxterbrewing.com/beers/stowaway-ipa/">Baxter Stowaway IPA</a></li>
<li><a href="https://www.masteringemacs.org/">Mastering Emacs</a></li>
<li><a href="http://99percentinvisible.org/episode/the-nutshell-studies/">99% Invisible - The Nutshell Studies</a></li>
</ul></li>
<li>Naomi Ceder
<ul><li><a href="http://www.amazon.com/Dying-Living-Jesse-Sullivan-Novel-ebook/dp/B00IRIAA84">Korey Schrum - Dying for a Living</a></li>
<li><a href="http://www.amazon.com/Into-Brambles-Daniel-Roy-Greenfeld-ebook/dp/B00VC5UQHO">Into the Brambles - by “PyDanny - Danny Greenfeld”</a></li>
</ul></li>
<li>Lynn Root
<ul><li><a href="https://lambdaops.com/ipythonjupyter-tmpnb-debuts/">Jupyter - tmpnb - Kyle Kelly blog post</a></li>
<li><a href="http://www.amazon.com/Knit-Your-Own-Easy-Follow/dp/1579129609">Knit Your Own Zoo</a></li>
<li><a href="https://en.wikipedia.org/wiki/Bechdel_test">Bechdel Test</a></li>
<li><a href="http://www.cbs.com/shows/the_good_wife/">The Good Wife</a>
<ul><li>Passes the Bechdel Test</li>
<li>Inspiration for women being awesome in a male dominated industry</li>
</ul></li>
</ul></li>
<li>
<p>Tracy Osborn</p>
<ul><li><a href="http://www.easypost.com">EasyPost</a> - Simplifies generating shipping labels for USPS
<h3>Keep in Touch</h3>
</li>
</ul></li>
<li>
<p>Naomi Ceder</p>
<ul><li><a href="https://twitter.com/naomiceder">@naomiceder</a></li>
</ul></li>
<li>Lynn Root
<ul><li><a href="https://twitter.com/roguelynn">@roguelynn</a></li>
</ul></li>
<li>Tracy Osborn
<ul><li><a href="https://twitter.com/limedaring">@limedaring</a></li>
<li><a href="http://limedaring.com/">Blog</a></li>
<li><a href="http://hellowebapp.com">Hello Webapp</a></li>
</ul></li>
</ul><p>The intro and outro music is from Requiem for a Fish <a href="http://freemusicarchive.org/music/The_Freak_Fandango_Orchestra/">The Freak Fandango Orchestra</a> / <a href="http://creativecommons.org/licenses/by-sa/3.0/">CC BY-SA</a></p>
]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/u6nk47/Episode11-DiversityinthePythonCommunity.mp3" length="25403314" type="audio/mpeg"/>
				<itunes:subtitle>Listen to past episodes, read about the show and check out our donations section at  podcastinit.com

Brief Introduction
Date of recording - Jun-10th, 2015
Hosts  Macey ...</itunes:subtitle>
		<itunes:summary>Listen to past episodes, read about the show and check out our donations section at  podcastinit.com

Brief Introduction
Date of recording - Jun-10th, 2015
Hosts  Macey and Chris Patti
Follow us on iTunes, Stitcher or TuneIn
Give us feedback! (iTunes, Twitter, email, Disqus comments)
You can donate (if you want)!
Overview - Interview with Tracy Osborn, Naomi Ceder, Lynn Root
Interview with Prominent PyLadies
Introductions
Tracy Osborn
Naomi Ceder
Lynn Root

How did you get introduced to Python? 
In what ways do you think the Python community has succeeded in making itself more friendly and welcoming to women and other under represented minorities, and where could it do better? 
Python community leadership takes a positive stance on diversity
Codes of conduct are taken very seriously
Financial diversity needs more focus

What can you tell us about PyLadies and DJango Girls? 
PyLadies
started in a coffee shop in LA
pip install PyLadies
Over 70 locations on almost every continent - half on meetup.com


What are some of the challenges you still face in being a part of the Python community, and how can our listeners help? 
Don't be disparaging about women-focused events

I had to read up to page 17 of the top authors list on PyPi to find a woman. Can you provide some insight into what may be contributing to this state of affairs and how we can help to improve it? 
pypi is confusing and intimidating
Process and tools are tough to use
Maybe Pyladies should host a "make your own package" night
Mentorship and easy HOWTOs are needed

You have all gained some notoriety in the Python community through work that you have done. Do you feel that you were faced with greater adversity than your peers in the course of your careers?
Startup community more hostile than Python community

We are talking to each of you because of your involvement in the Python community. Have you worked with and been involved in other language communities? If so, can you provide some comparisons between that and Python in how they manage the subject of diversity, gender and otherwise? 
Design community - lots of conferences with "all dude" conference speaker line up
Startups very focused on males for employees and customers

What effect do you think job descriptions play in excluding women and other minorities from roles in development positions? (In reference to https://blog.safaribooksonline.com/2015/06/08/on-recruiting-inclusiveness-and-crafting-better-job-descriptions/)
Discourage more appropriate term than exclude
Women less likely to apply for roles that they are not completely qualified for
Spotify experimenting with blind resume review and cross-checking of job descriptions
Result is more women applying and having better results


For any women and young girls who may be considering a career in technology, do you have any words of advice? 
Go for it, but be aware that it's hard

Do you have any advice for the men in the Python community and technology as a whole? 
Actually listen when somebody tells you that it's not the same for them (race, economics, gender)
Have some compassion and empathy
Men should educate themselves
Old habits die hard but getting over them is important

Is there anything we haven't discussed that any of you would like to bring up? 

Picks
Tobias
The Banned and the Banished series by James Clemens
Cool Hand Luke with Paul Newman

Chris
Baxter Stowaway IPA
Mastering Emacs
99% Invisible - The Nutshell Studies

Naomi Ceder
Korey Schrum - Dying for a Living
Into the Brambles - by "PyDanny - Danny Greenfeld"

Lynn Root
Jupyter - tmpnb - Kyle Kelly blog post
Knit Your Own Zoo
Bechdel Test
The Good Wife
Passes the Bechdel Test
Inspiration for women being awesome in a male dominated industry


Tracy Osborn
EasyPost - Simplifies generating shipping labels for USPS
Keep in Touch

Naomi Ceder
@naomiceder

Lynn Root
@roguelynn

Tracy Osborn
@limedaring
Blog
Hello Webapp

The intro and outro music is from Requiem for a Fish The Freak Fandango Orche</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>00:49:15</itunes:duration>
		</item>
		<item>
		<title>Episode 10 - Brian Granger and Fernando Perez of the IPython Project</title>
		<link>http://podcastinit.podbean.com/e/episode-10-brian-granger-and-fernando-perez-of-the-ipython-project-1434193715/</link>
		<comments>http://podcastinit.podbean.com/e/episode-10-brian-granger-and-fernando-perez-of-the-ipython-project-1434193715/#comments</comments>
		<pubDate>Sat, 13 Jun 2015 11:08:35 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Data Science</category>
	<category>Data Analysis</category>
	<category>Data Visualization</category>
	<category>Community</category>
	<category>Open Source</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-10-brian-granger-and-fernando-perez-of-the-ipython-project-1434193715/</guid>

		<description><![CDATA[<p>You can find past episodes and other information about the show at <a href="http://www.podcastinit.com">podcastinit.com</a></p>
<h3>Brief Introduction</h3>
<ul><li>Date of recording - June 3rd, 2015</li>
<li>Hosts - Tobias Macey and Chris Patti</li>
<li>Overview - Interview with Fernando Perez and Brian Granger, core developers of IPython/Project Jupyter</li>
<li>Follow us on iTunes, Stitcher or TuneIn</li>
<li>Give us feedback! (iTunes, Twitter, email, Disqus comments)</li>
<li>You can donate (if you want)!</li>
</ul><h3>Interview with Brian Granger and Fernando Perez</h3>
<ul><li>Introductions</li>
<li>How did you get introduced to Python? - Chris</li>
<li>For anyone who may not have heard of or used IPython, can you describe what it is?</li>
<li>How challenging was it to port IPython to Python 3?
<ul><li><a href="https://twitter.com/takluyver">Thomas Kluyver</a></li>
</ul></li>
<li>What prompted the name change from IPython to Project Jupyter and were there any associated c [...]</li></ul>]]></description>
			<content:encoded><![CDATA[<p>You can find past episodes and other information about the show at <a href="http://www.podcastinit.com">podcastinit.com</a></p>
<h3>Brief Introduction</h3>
<ul><li>Date of recording - June 3rd, 2015</li>
<li>Hosts - Tobias Macey and Chris Patti</li>
<li>Overview - Interview with Fernando Perez and Brian Granger, core developers of IPython/Project Jupyter</li>
<li>Follow us on iTunes, Stitcher or TuneIn</li>
<li>Give us feedback! (iTunes, Twitter, email, Disqus comments)</li>
<li>You can donate (if you want)!</li>
</ul><h3>Interview with Brian Granger and Fernando Perez</h3>
<ul><li>Introductions</li>
<li>How did you get introduced to Python? - Chris</li>
<li>For anyone who may not have heard of or used IPython, can you describe what it is?</li>
<li>How challenging was it to port IPython to Python 3?
<ul><li><a href="https://twitter.com/takluyver">Thomas Kluyver</a></li>
</ul></li>
<li>What prompted the name change from IPython to Project Jupyter and were there any associated changes in the project itself?
<ul><li>Name inspired by Julia, Python and R - the three programming languages of data science</li>
</ul></li>
<li>Data scientists have adopted the use of IPython notebooks in their work on a large scale, what is it about notebooks that lend themselves to this particular problem domain?
<ul><li><a href="http://camdavidsonpilon.github.io/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers/">Bayesian methods for Hackers - Cameron Davidson-Pilon</a></li>
<li><a href="http://www.springer.com/us/book/9783319013411">Signal processing in Python</a></li>
<li><a href="https://beta.oreilly.com/ideas/jupyter-at-oreilly">O’Reilly added support for notebooks into Atlas publishing platform</a></li>
</ul></li>
<li>IPython Notebook seems like an incredible tool for educators is advanced fields. Have you seen wide spread adoption in this area and is it a focus for the project?
<ul><li><a href="https://github.com/jupyter/nbgrader">NBGrader - notebook grader</a></li>
</ul></li>
<li>Github recently added the ability to <a href="http://blog.jupyter.org/2015/05/07/rendering-notebooks-on-github/">render notebooks in a repo</a>. Did you work with them to build that integration?</li>
<li>What are some of the most interesting uses of IPython notebooks that you have seen?
<ul><li>Gallery of interesting notebooks on the <a href="https://github.com/ipython/ipython/wiki/A-gallery-of-interesting-IPython-Notebooks">wiki</a>
<ul><li><a href="https://github.com/ipython/ipython/wiki/A-gallery-of-interesting-IPython-Notebooks#reproducible-academic-publications">Reproducible academic publications</a></li>
<li>Couple of dozen scientific papers, some very high profile</li>
</ul></li>
<li>Educational notebooks on various subjects</li>
<li>Great learning resource, as well as entertaining</li>
<li><a href="https://github.com/numerical-mooc/numerical-mooc">MOOC taught between distributed team on Open EdX using IPython notebooks about numerical computing with Python</a></li>
<li>Peter Norvig collection of IPython notebooks
<ul><li><a href="http://nbviewer.ipython.org/url/norvig.com/ipython/TSPv3.ipynb">Includes analysis of traveling salesman problem</a></li>
</ul></li>
<li><a href="http://notebooks.codeneuro.org/">notebooks.codeneuro.org</a>- time series data analysis &lt;- Couldn’t get this to work. -Chris</li>
</ul></li>
<li>Are there any notable projects that use IPython as one of their components?
<ul><li><a href="https://bcrc.bio.umass.edu/courses/spring2012/micbio/micbio660/content/ipython-and-systems-biology-knowledgebase-kbase">KBase for computational biology</a></li>
<li><a href="http://www.sagemath.org/">Sage - Open source mathematics project written in Python</a>
<ul><li>Created by number theorist William Stein</li>
<li>Custom parser to allow for non-python syntax</li>
</ul></li>
<li><a href="https://www.quantopian.com/">Quantopian</a> - Collaborative platform for financial modeling. Runs on top of IPython</li>
<li><a href="https://wakari.io/">Wakari from Continuum Analytics</a> - hosted IPython with computing environment</li>
<li>Rackspace hosts TempNB and other IPython services</li>
</ul></li>
<li>Where do you see Project Jupyter going in the future? Are there any particular new features you’d like to see added? - Tobias
<ul><li>One of the biggest targeted features is real-time collaboration
<ul><li>Prototyped by engineers from Google</li>
</ul></li>
<li>More modular UI and architecture</li>
<li>Multi-user deployments with <a href="https://github.com/jupyter/jupyterhub">Jupyter Hub</a></li>
</ul></li>
<li>A few weeks ago we interviewed Jonathan Slenders who wrote ptpython, which brings IDE like capabilities to interactive Python. Have you ever considered including this in IPython?</li>
<li>What are some of the features that an average user might not know about?</li>
<li>Is there anything in particular that you would like to ask our listeners for help with?
<ul><li>Pitch in with the development effort</li>
<li>Organize community events on behalf of IPython/Jupyter</li>
<li>Be patient while documentation improves <img src="http://www.podbean.com/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /></li>
</ul></li>
</ul><h3>Picks</h3>
<ul><li>Tobias
<ul><li><a href="http://en.wikipedia.org/wiki/Dayworld_%28trilogy%29">Dayworld trilogy by Phillip Jose Farmer</a></li>
<li><a href="http://readruler.com">ReadRuler.com</a></li>
</ul></li>
<li>Chris
<ul><li><a href="http://www.rubytapas.com/">RubyTapas by Avdi Grimm</a></li>
<li><a href="http://www.codenewbies.com">CodeNewbies</a></li>
<li><a href="http://tapbots.com/tweetbot/mac/">Tweetbot</a></li>
</ul></li>
<li>Brian Granger
<ul><li><a href="http://shop.oreilly.com/product/0636920033400.do">Data Science from Scratch - Joel Gruß</a></li>
<li><a href="http://www.stat.purdue.edu/~wsc/elements.html">Elements of Graphing Data - William Cleveland</a></li>
</ul></li>
<li>Fernando Perez
<ul><li><a href="http://lesterland.lessig.org/pdf/republic-lost.pdf">Republic Lost - Lawrence Lessig</a></li>
<li><a href="http://www.nytimes.com/2013/09/29/books/alvaro-mutis-novelist-who-created-a-rambling-ruminative-soul-dies-at-90.html">Alvaro Mutis</a></li>
</ul></li>
</ul><h3>Keep in Touch</h3>
<ul><li>Twitter <a href="https://twitter.com/projectjupyter">@projectjupyter</a>, <a href="https://twitter.com/ipythondev">@ipythondev</a>, <a href="https://twitter.com/ellisonbg">@ellisonbg</a>, <a href="https://twitter.com/fperez_org">@fperez_org</a></li>
</ul><p>The intro and outro music is from Requiem for a Fish <a href="http://freemusicarchive.org/music/The_Freak_Fandango_Orchestra/">The Freak Fandango
Orchestra</a>
/ <a href="http://creativecommons.org/licenses/by-sa/*0/">CC BY-SA</a></p>
]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/xjsm5n/Episode10-BrianGrangerandFernandoPerezoftheIPythonProject.mp3" length="64774887" type="audio/mpeg"/>
				<itunes:subtitle>You can find past episodes and other information about the show at podcastinit.comBrief Introduction

Date of recording - June 3rd, 2015
Hosts - Tobias Macey and Chris ...</itunes:subtitle>
		<itunes:summary>You can find past episodes and other information about the show at podcastinit.comBrief Introduction

Date of recording - June 3rd, 2015
Hosts - Tobias Macey and Chris Patti
Overview - Interview with Fernando Perez and Brian Granger, core developers of IPython/Project Jupyter
Follow us on iTunes, Stitcher or TuneIn
Give us feedback! (iTunes, Twitter, email, Disqus comments)
You can donate (if you want)!
Interview with Brian Granger and Fernando Perez

Introductions
How did you get introduced to Python? - Chris
For anyone who may not have heard of or used IPython, can you describe what it is?
How challenging was it to port IPython to Python 3?
Thomas Kluyver

What prompted the name change from IPython to Project Jupyter and were there any associated changes in the project itself?
Name inspired by Julia, Python and R - the three programming languages of data science

Data scientists have adopted the use of IPython notebooks in their work on a large scale, what is it about notebooks that lend themselves to this particular problem domain?
Bayesian methods for Hackers - Cameron Davidson-Pilon
Signal processing in Python
O'Reilly added support for notebooks into Atlas publishing platform

IPython Notebook seems like an incredible tool for educators is advanced fields. Have you seen wide spread adoption in this area and is it a focus for the project?
NBGrader - notebook grader

Github recently added the ability to render notebooks in a repo. Did you work with them to build that integration?
What are some of the most interesting uses of IPython notebooks that you have seen?
Gallery of interesting notebooks on the wiki
Reproducible academic publications
Couple of dozen scientific papers, some very high profile

Educational notebooks on various subjects
Great learning resource, as well as entertaining
MOOC taught between distributed team on Open EdX using IPython notebooks about numerical computing with Python
Peter Norvig collection of IPython notebooks
Includes analysis of traveling salesman problem

notebooks.codeneuro.org- time series data analysis - Couldn't get this to work. -Chris

Are there any notable projects that use IPython as one of their components?
KBase for computational biology
Sage - Open source mathematics project written in Python
Created by number theorist William Stein
Custom parser to allow for non-python syntax

Quantopian - Collaborative platform for financial modeling. Runs on top of IPython
Wakari from Continuum Analytics - hosted IPython with computing environment
Rackspace hosts TempNB and other IPython services

Where do you see Project Jupyter going in the future? Are there any particular new features you'd like to see added? - Tobias
One of the biggest targeted features is real-time collaboration
Prototyped by engineers from Google

More modular UI and architecture
Multi-user deployments with Jupyter Hub

A few weeks ago we interviewed Jonathan Slenders who wrote ptpython, which brings IDE like capabilities to interactive Python. Have you ever considered including this in IPython?
What are some of the features that an average user might not know about?
Is there anything in particular that you would like to ask our listeners for help with?
Pitch in with the development effort
Organize community events on behalf of IPython/Jupyter
Be patient while documentation improves :)

Picks

Tobias
Dayworld trilogy by Phillip Jose Farmer
ReadRuler.com

Chris
RubyTapas by Avdi Grimm
CodeNewbies
Tweetbot

Brian Granger
Data Science from Scratch - Joel Gruß
Elements of Graphing Data - William Cleveland

Fernando Perez
Republic Lost - Lawrence Lessig
Alvaro Mutis

Keep in Touch

Twitter @projectjupyter, @ipythondev, @ellisonbg, @fperez_org
The intro and outro music is from Requiem for a Fish The Freak Fandango
Orchestra
/ CC BY-SA</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>01:21:49</itunes:duration>
		</item>
		<item>
		<title>Episode 9 - David Baumgold on Flask-Dance, WebhookDB and Open EdX</title>
		<link>http://podcastinit.podbean.com/e/episode-9-david-baumgold-on-flask-dance-webhookdb-and-open-edx/</link>
		<comments>http://podcastinit.podbean.com/e/episode-9-david-baumgold-on-flask-dance-webhookdb-and-open-edx/#comments</comments>
		<pubDate>Sun, 07 Jun 2015 15:12:00 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Open Source</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-9-david-baumgold-on-flask-dance-webhookdb-and-open-edx/</guid>

		<description><![CDATA[<p>You can find out more about us and view previous episodes at <a href="http://www.podcastinit.com">podcastinit.com</a>.</p>
<h3>Brief Introduction</h3>
<ul><li>Date of recording - 2015-06-02</li>
<li>Hosts - Tobias Macey and Chris Patti</li>
<li>Follow us on - <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&#38;uo=6&#38;at=&#38;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&#38;refid=stpr">Stitcher</a> or <a href="http://tunein.com/radio/Podcast__init__-p726240/">TuneIn</a></li>
<li>Give us feedback on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&#38;uo=6&#38;at=&#38;ct=">iTunes</a>, <a href="https://twitter.com/Podcast__init__">Twitter</a>, <a href="mailto:hosts@podcastinit.com">email</a> or <a href="http://podcastinit.com">Disqus</a></li>
</ul><h3>Interview with David Baumgold</h3>
<ul><li>Introduction</li>
<li>How did you get introduced to Python?</li>
<li>What problem does <a href="https://github.com/sin%20%5B...%5D"></a></li></ul>]]></description>
			<content:encoded><![CDATA[<p>You can find out more about us and view previous episodes at <a href="http://www.podcastinit.com">podcastinit.com</a>.</p>
<h3>Brief Introduction</h3>
<ul><li>Date of recording - 2015-06-02</li>
<li>Hosts - Tobias Macey and Chris Patti</li>
<li>Follow us on - <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="http://www.stitcher.com/s?fid=64838&amp;refid=stpr">Stitcher</a> or <a href="http://tunein.com/radio/Podcast__init__-p726240/">TuneIn</a></li>
<li>Give us feedback on <a href="https://itunes.apple.com/us/podcast/podcast.-init/id981834425?mt=2&amp;uo=6&amp;at=&amp;ct=">iTunes</a>, <a href="https://twitter.com/Podcast__init__">Twitter</a>, <a href="mailto:hosts@podcastinit.com">email</a> or <a href="http://podcastinit.com">Disqus</a></li>
</ul><h3>Interview with David Baumgold</h3>
<ul><li>Introduction</li>
<li>How did you get introduced to Python?</li>
<li>What problem does <a href="https://github.com/singingwolfboy/flask-dance">Flask-Dance</a> solve that wasn’t covered by other libraries?</li>
<li>What were some of the technical issues that you encountered while building Flask-Dance?</li>
<li>What are some of the design considerations that you had when building Flask-Dance?</li>
<li>You also built <a href="https://github.com/singingwolfboy/webhookdb">webhookdb</a> for replicating GitHub’s information to be queryable. What are some use cases for which you would want to do that?</li>
<li>What is <a href="https://open.edx.org/">Open EdX</a> and what is its intended audience?</li>
<li>What are some of the challenges implementing a system like Open EdX, and what can Python developers learn from the implementation of the project?</li>
</ul><h3>Picks</h3>
<ul><li>Tobias
<ul><li><a href="https://gitorious.org/evil/pages/Home">Evil mode</a></li>
<li><a href="http://forgotify.com/">Forgotify</a></li>
<li><a href="http://www.imdb.com/title/tt0993846/?ref_=fn_al_tt_2">Wolf of Wall Street</a></li>
<li><a href="https://github.com/bndr/pipreqs">pipreqs</a></li>
</ul></li>
<li>Chris
<ul><li><a href="http://www.ratebeer.com/beer/dark-horse-smells-like-a-safety-meeting-ipa/107403/">Dark Horse Brewing - “Smells Like a Safety Meeting”</a></li>
<li><a href="https://medium.com/">Medium</a></li>
<li><a href="http://www.gnu.org/software/emacs/">Modern Gnu Emacs</a></li>
</ul></li>
<li>David
<ul><li><a href="http://brew.sh/">Homebrewhttps://open.edx.org/ for OSX</a></li>
<li><a href="http://caskroom.io/">Homebrew Cask</a></li>
<li><a href="http://crsmithdev.com/arrow/">Arrow</a></li>
<li><a href="http://momentjs.com/">Moment.js</a></li>
<li><a href="http://www.imdb.com/title/tt2084970/?ref_=fn_al_tt_1">The Imitation Game</a></li>
</ul></li>
</ul><h3>Keep in touch</h3>
<ul><li><a href="https://twitter.com/singingwolfboy">Twitter: @singingwolfboy</a></li>
<li><a href="https://github.com/singingwolfboy">GitHub</a></li>
<li><a href="http://davidbaumgold.com">Website</a></li>
<li><a href="mailto:david@davidbaumgold.com">Email</a></li>
</ul>]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/ac65js/Episode9-DavidBaumgoldonFlask-DanceWebhookDBandOpenEdX.mp3" length="24451615" type="audio/mpeg"/>
				<itunes:subtitle>You can find out more about us and view previous episodes at podcastinit.com.
Brief Introduction

Date of recording - 2015-06-02
Hosts - Tobias Macey and Chris Patti
Follow us ...</itunes:subtitle>
		<itunes:summary>You can find out more about us and view previous episodes at podcastinit.com.
Brief Introduction

Date of recording - 2015-06-02
Hosts - Tobias Macey and Chris Patti
Follow us on - iTunes, Stitcher or TuneIn
Give us feedback on iTunes, Twitter, email or Disqus
Interview with David Baumgold

Introduction
How did you get introduced to Python?
What problem does Flask-Dance solve that wasn't covered by other libraries?
What were some of the technical issues that you encountered while building Flask-Dance?
What are some of the design considerations that you had when building Flask-Dance?
You also built webhookdb for replicating GitHub's information to be queryable. What are some use cases for which you would want to do that?
What is Open EdX and what is its intended audience?
What are some of the challenges implementing a system like Open EdX, and what can Python developers learn from the implementation of the project?
Picks

Tobias
Evil mode
Forgotify
Wolf of Wall Street
pipreqs

Chris
Dark Horse Brewing - "Smells Like a Safety Meeting"
Medium
Modern Gnu Emacs

David
Homebrewhttps://open.edx.org/ for OSX
Homebrew Cask
Arrow
Moment.js
The Imitation Game

Keep in touch

Twitter: @singingwolfboy
GitHub
Website
Email</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>00:32:22</itunes:duration>
		</item>
		<item>
		<title>Episode 8 - Mark Baggett on Python for InfoSec</title>
		<link>http://podcastinit.podbean.com/e/episode-8-mark-baggett-on-python-for-infosec/</link>
		<comments>http://podcastinit.podbean.com/e/episode-8-mark-baggett-on-python-for-infosec/#comments</comments>
		<pubDate>Wed, 03 Jun 2015 15:23:51 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Data Analysis</category>
	<category>Open Source</category>
	<category>Security</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-8-mark-baggett-on-python-for-infosec/</guid>

		<description><![CDATA[<p>Read all of our show notes and find more information about us at <a href="http://www.podcastinit.com">Beautiful Soup</a>
</p>
<h3>Brief Introduction</h3>
<ul><li>Date of recording - May 28th, 2015</li>
<li>Hosts - Tobias Macey and Chris Patti</li>
<li>Overview - Interview with Mark Bagett</li>
<li>Follow us on iTunes, Stitcher or TuneIn</li>
<li>Give us feedback! (iTunes, Twitter, email, Disqus comments)</li>
<li>You can donate (if you want)!</li>
</ul><h3>Interview with Mark Bagett</h3>
<ul><li>Introductions</li>
<li>How were you first introduced to Python? - Chris
<ul><li>Started using it for automating tasks while working as a sysadmin</li>
<li>Found code that launched an attack on FTP server - in Python</li>
</ul></li>
<li>What are some of the tasks in your job that you use Python for? -Tobias
<ul><li>Trusted command &#38; control backdoor for Windows
<ul><li>Mostly not used by malware authors - thus far (at least Mark  hasn’t seen it used that way)</li>
<li>Fla [...]</li></ul></li></ul></li></ul>]]></description>
			<content:encoded><![CDATA[<p>Read all of our show notes and find more information about us at <a href="http://www.podcastinit.com">Beautiful Soup</a>
</p>
<h3>Brief Introduction</h3>
<ul><li>Date of recording - May 28th, 2015</li>
<li>Hosts - Tobias Macey and Chris Patti</li>
<li>Overview - Interview with Mark Bagett</li>
<li>Follow us on iTunes, Stitcher or TuneIn</li>
<li>Give us feedback! (iTunes, Twitter, email, Disqus comments)</li>
<li>You can donate (if you want)!</li>
</ul><h3>Interview with Mark Bagett</h3>
<ul><li>Introductions</li>
<li>How were you first introduced to Python? - Chris
<ul><li>Started using it for automating tasks while working as a sysadmin</li>
<li>Found code that launched an attack on FTP server - in Python</li>
</ul></li>
<li>What are some of the tasks in your job that you use Python for? -Tobias
<ul><li>Trusted command &amp; control backdoor for Windows
<ul><li>Mostly not used by malware authors - thus far (at least Mark  hasn’t seen it used that way)</li>
<li>Flame virus - 5MB payload - incredibly advanced
<ul><li>Lua interpreter bundled along with the scripts</li>
</ul></li>
<li>Vale framework - Python framework that takes payloads out of penetration testing executables</li>
</ul></li>
</ul></li>
<li>What is it about Python that makes it useful for penetration testing and other information security tasks?
<ul><li>Same thing that makes it useful for anything else</li>
<li>mpacket from core security</li>
</ul></li>
<li>What are some of the more useful Python penetration testing tools?
<ul><li>OFFENSE
<ul><li><a href="http://www.crummy.com/software/BeautifulSoup/">Beautiful Soup</a></li>
<li><a href="http://www.secdev.org/projects/scapy/">scapy</a></li>
<li><a href="https://code.google.com/p/volatility/">Volatility</a></li>
</ul></li>
<li>DEFENSE
<ul><li><a href="https://docs.python.org/2/library/collections.html#collections.Counter">Counter dictionary from collections</a></li>
<li>Pandas</li>
<li>iPython</li>
<li>matplotlib</li>
</ul></li>
</ul></li>
<li>We’ve noticed that a lot of the literature around information security and penetration testing focuses on targeting Windows. Can you enlighten us as to why that is?
<ul><li>Windows event tracing
<ul><li>logman</li>
<li>event trace providers - implement packet sniffing (Can turn every browser into a key logger)</li>
</ul></li>
<li>Primary attack surface - Where most attacks are targeted</li>
<li>Fewer purely Linux systems
<ul><li>Very few ports open - maybe 80, 22</li>
<li>Very likely no user just sitting there waiting to run an executable you send</li>
</ul></li>
<li>More freedom on Linux - less formalized patching process, more variable tools = more exploits</li>
<li>Will write code to only use built in modules for Python that will run in customer target environments</li>
</ul></li>
<li>What are some of the legal considerations that you have to deal with on a regular basis as a penetration tester?</li>
<li>There have recently been a number of attacks based on hijacking the TCP/IP stack. Is Python being used for any of these exploits or tools to defend against them?
<ul><li>Data analytics</li>
<li>Detect repeated sequence numbers - Man in the Middle Attack
<ul><li>As simple as 5 lines of Python code</li>
<li>import scapy, start sniffing packets, pull together all packets - make list of associated packets</li>
<li>Can pull together all packets inside of stream</li>
<li>Time spefic source communicates with specific destination</li>
<li>Bro - intrusion detection suite
<ul><li>Built into Security Onion - Doug Berks</li>
<li>FLOSS Weekly episode 296 with <a href="http://twit.tv/show/floss-weekly/296">Bro developers</a></li>
</ul></li>
</ul></li>
</ul></li>
<li>What are some activities that you do on a regular basis for which you would turn to another language or toolchain, rather than using Python?
<ul><li>Powershell - The Python of windows
<ul><li>Whitelisted and ubiquitous</li>
</ul></li>
<li>Password cracking - compiled language like C or assembly</li>
</ul></li>
<li>For anyone who is interested in getting involved in the security industry, and penetration testing in particular, what resources or tools would you recommend?
<ul><li>Developers make the best InfoSec professionals
<ul><li>Lots of jobs and opportunities</li>
</ul></li>
<li>Developer -&gt; Systems Administration -&gt; Information Security</li>
<li>Security conferences - BSides, Defcon, Black Hat</li>
<li>Online capture the flag challenges (google it) - good practice for critical thinking and using code for security exercises</li>
<li>Get involved in the industry - Meetups, etc.</li>
<li>SANS institute course, Python for Penetration Testers, SEC573 by  Mark Baggett - sans.org</li>
<li>Lots of free online resources</li>
<li><a href="http://shop.oreilly.com/product/978159749957*do">Violent Python</a></li>
<li><a href="https://picoctf.com/">PicoCTF</a></li>
<li><a href="https://www.counterhackchallenges.com/">Counter Hack Challenges</a></li>
</ul></li>
</ul><h3>Picks</h3>
<ul><li>Tobias
<ul><li><a href="https://www.authy.com/">Authy</a></li>
<li><a href="https://openwrt.org/">OpenWRT</a></li>
<li><a href="http://amzn.to/1FR46Ac">TP-Link Archer C7</a></li>
<li><a href="https://www.youtube.com/watch?v=PYYfVqtcWQY">Schemas For The Real World by Carina C. Zona</a></li>
<li><a href="https://youtu.be/IgbHzFb1hGw">The Soul of Software by Avdi Grimm</a></li>
<li><a href="http://en.wikipedia.org/wiki/China_Mi%C3%A9ville">China Mieville</a></li>
</ul></li>
<li>Chris
<ul><li><a href="http://www.beeradvocate.com/beer/profile/18639/121363/">Rapscallion Munich Dark</a></li>
<li><a href="http://writeapp.net/mac/">Write</a></li>
<li><a href="http://marginalwayfund.org/">Marginal Way</a></li>
<li><a href="http://frankie-johnnys.com/">Frankie and Johnny’s</a></li>
<li><a href="https://github.com/yyuu/pyenv">pyenv</a></li>
</ul></li>
<li>Mark Bagett
<ul><li><a href="http://corelabs.coresecurity.com/index.php?module=Wiki&amp;action=view&amp;type=tool&amp;name=Impacket">Corelabs impacket</a></li>
<li><a href="http://www.rekall-forensic.com/">Google Labs - Rekall</a></li>
<li><a href="http://www.thecheesecakefactory.com/menu/desserts/cheesecakes/adams-peanut-butter-cup-fudge-ripple-cheesecake/">Adams peanut butter cup fudge ripple cheesecake</a></li>
<li><a href="http://www.securitybsides.com/w/page/12194156/FrontPage">BSides security conference</a></li>
</ul></li>
</ul><h3>Keep in Touch</h3>
<ul><li>Twitter: <a href="https://twitter.com/markbaggett">@markbaggett</a></li>
<li><a href="http://www.indepthdefense.com/">In Depth Defense</a></li>
</ul><p>The intro and outro music is from Requiem for a Fish <a href="http://freemusicarchive.org/music/The_Freak_Fandango_Orchestra/">The Freak Fandango Orchestra</a>  / <a href="http://creativecommons.org/licenses/by-sa/3.0/">CC BY-SA</a></p>
]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/46tgpf/Episode8-MarkBaggettonPythonforInfoSec.mp3" length="55411200" type="audio/mpeg"/>
				<itunes:subtitle>Read all of our show notes and find more information about us at Beautiful Soup
Brief Introduction

Date of recording - May 28th, 2015
Hosts - Tobias Macey ...</itunes:subtitle>
		<itunes:summary>Read all of our show notes and find more information about us at Beautiful Soup
Brief Introduction

Date of recording - May 28th, 2015
Hosts - Tobias Macey and Chris Patti
Overview - Interview with Mark Bagett
Follow us on iTunes, Stitcher or TuneIn
Give us feedback! (iTunes, Twitter, email, Disqus comments)
You can donate (if you want)!
Interview with Mark Bagett

Introductions
How were you first introduced to Python? - Chris
Started using it for automating tasks while working as a sysadmin
Found code that launched an attack on FTP server - in Python

What are some of the tasks in your job that you use Python for? -Tobias
Trusted command  control backdoor for Windows
Mostly not used by malware authors - thus far (at least Mark  hasn't seen it used that way)
Flame virus - 5MB payload - incredibly advanced
Lua interpreter bundled along with the scripts

Vale framework - Python framework that takes payloads out of penetration testing executables


What is it about Python that makes it useful for penetration testing and other information security tasks?
Same thing that makes it useful for anything else
mpacket from core security

What are some of the more useful Python penetration testing tools?
OFFENSE
Beautiful Soup
scapy
Volatility

DEFENSE
Counter dictionary from collections
Pandas
iPython
matplotlib


We've noticed that a lot of the literature around information security and penetration testing focuses on targeting Windows. Can you enlighten us as to why that is?
Windows event tracing
logman
event trace providers - implement packet sniffing (Can turn every browser into a key logger)

Primary attack surface - Where most attacks are targeted
Fewer purely Linux systems
Very few ports open - maybe 80, 22
Very likely no user just sitting there waiting to run an executable you send

More freedom on Linux - less formalized patching process, more variable tools = more exploits
Will write code to only use built in modules for Python that will run in customer target environments

What are some of the legal considerations that you have to deal with on a regular basis as a penetration tester?
There have recently been a number of attacks based on hijacking the TCP/IP stack. Is Python being used for any of these exploits or tools to defend against them?
Data analytics
Detect repeated sequence numbers - Man in the Middle Attack
As simple as 5 lines of Python code
import scapy, start sniffing packets, pull together all packets - make list of associated packets
Can pull together all packets inside of stream
Time spefic source communicates with specific destination
Bro - intrusion detection suite
Built into Security Onion - Doug Berks
FLOSS Weekly episode 296 with Bro developers



What are some activities that you do on a regular basis for which you would turn to another language or toolchain, rather than using Python?
Powershell - The Python of windows
Whitelisted and ubiquitous

Password cracking - compiled language like C or assembly

For anyone who is interested in getting involved in the security industry, and penetration testing in particular, what resources or tools would you recommend?
Developers make the best InfoSec professionals
Lots of jobs and opportunities

Developer - Systems Administration - Information Security
Security conferences - BSides, Defcon, Black Hat
Online capture the flag challenges (google it) - good practice for critical thinking and using code for security exercises
Get involved in the industry - Meetups, etc.
SANS institute course, Python for Penetration Testers, SEC573 by  Mark Baggett - sans.org
Lots of free online resources
Violent Python
PicoCTF
Counter Hack Challenges

Picks

Tobias
Authy
OpenWRT
TP-Link Archer C7
Schemas For The Real World by Carina C. Zona
The Soul of Software by Avdi Grimm
China Mieville

Chris
Rapscallion Munich Dark
Write
Marginal Way
Frankie and Johnny's
pyenv

Mark Bagett
Corelabs impacket
Google Labs - Rekall
Adams peanut butter cup fudge ripple cheesecake
BSides se</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>01:14:31</itunes:duration>
		</item>
		<item>
		<title>Episode 7 - Jacob Kaplan-Moss on Addressing Cultural Issues in Tech</title>
		<link>http://podcastinit.podbean.com/e/episode-7-jacob-kaplan-moss-on-addressing-cultural-issues-in-tech/</link>
		<comments>http://podcastinit.podbean.com/e/episode-7-jacob-kaplan-moss-on-addressing-cultural-issues-in-tech/#comments</comments>
		<pubDate>Tue, 26 May 2015 13:58:00 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Community</category>
	<category>Open Source</category>
	<category>Diversity</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-7-jacob-kaplan-moss-on-addressing-cultural-issues-in-tech/</guid>

		<description><![CDATA[<p><span style="font-size:10pt;">Read all of our show notes and find more information about us at </span><a href="http://www.podcastinit.com" style="font-size:10pt;">podcastinit.com</a></p>
<h3>Brief Introduction</h3>
<ul><li>Date of recording - May 18th, 2015</li>
<li>Hosts - Tobias Macey and Chris Patti</li>
<li>Follow us on iTunes, Stitcher or TuneIn</li>
<li>Give us feedback! (iTunes, Twitter, email, Disqus comments)</li>
<li>Overview - Interview with Jacob Kaplan-Moss</li>
</ul><h3>Interview with Jacob Kaplan-Moss</h3>
<ul><li>Introductions</li>
<li>How were you first introduced to Python?</li>
<li>So, we wanted to invite you on the show to discuss the keynote that you gave at this years PyCon. Can you tell us what you mean when you say that you’re a mediocre programmer and why that is such an important admission to make?</li>
<li>What are some ways that we can change the tone of the conversation around programming skill?</li>
<li>What do we gain by admitting to ourselves [...]</li></ul>]]></description>
			<content:encoded><![CDATA[<p><span style="font-size:10pt;">Read all of our show notes and find more information about us at </span><a href="http://www.podcastinit.com" style="font-size:10pt;">podcastinit.com</a></p>
<h3>Brief Introduction</h3>
<ul><li>Date of recording - May 18th, 2015</li>
<li>Hosts - Tobias Macey and Chris Patti</li>
<li>Follow us on iTunes, Stitcher or TuneIn</li>
<li>Give us feedback! (iTunes, Twitter, email, Disqus comments)</li>
<li>Overview - Interview with Jacob Kaplan-Moss</li>
</ul><h3>Interview with Jacob Kaplan-Moss</h3>
<ul><li>Introductions</li>
<li>How were you first introduced to Python?</li>
<li>So, we wanted to invite you on the show to discuss the keynote that you gave at this years PyCon. Can you tell us what you mean when you say that you’re a mediocre programmer and why that is such an important admission to make?</li>
<li>What are some ways that we can change the tone of the conversation around programming skill?</li>
<li>What do we gain by admitting to ourselves and others that we are not all phenomenal engineers?</li>
<li>Where does the myth of exceptional vs terrible programmers come from? Can you provide some examples of times that you came in contact with this narrative?</li>
<li>How do you think hiring tactics in technology companies contribute to this misconception and how can they be more accepting of average programmers?</li>
<li>What are some ways that we can work toward eradicating the myth of the 10x programmer?</li>
<li>Thinking about our industry’s problems retaining women and other undervalued groups, do you think the way many managers do performance reviews play a role? If so, how can we do better?
<ul><li><a href="http://nyupress.org/books/9781479835454/">What Works For Women At Work</a></li>
</ul></li>
<li>Can you tell us about some other ongoing narratives in the technology industry that you find equally as damaging as our misconceptions around skills and knowledge? - Tobias
<ul><li><a href="http://indie.vc/">indie.vc</a></li>
</ul></li>
</ul><h3>Picks</h3>
<ul><li>Tobias
<ul><li><a href="https://trueability.com/">True Ability</a></li>
<li><a href="https://manjaro.github.io/">Manjaro Linux</a></li>
<li><a href="http://www.vultr.com/?ref=6824205">Vultr VPS</a></li>
<li><a href="http://amzn.to/1JsRWzd">Mage Wars</a></li>
</ul></li>
<li>Chris
<ul><li><a href="http://brooklynbrewery.com/brooklyn-beers/bqe/k-is-for-kriek">K is for Kriek</a></li>
<li><a href="https://trello.com/">Trello</a></li>
<li><a href="http://www.dancarlin.com/hh-55/">Dan Carlin’s Hardcore History</a></li>
</ul></li>
<li>Jacob Kaplan-Moss
<ul><li><a href="https://hellowebapp.com/">Hello Web App</a></li>
<li><a href="http://smile.amazon.com/What-Works-Women-Work-Patterns-ebook/dp/B00GXA1QN6">What Works For Women At Work</a></li>
<li><a href="https://docs.google.com/document/d/1soIYek-YEIvqtu9brv3ecdPbuVzQKp_GhAozC06UrLo/edit#heading=h.y5edmltiob9c">Why Women Leave Tech: What the Research Says</a></li>
<li><a href="https://www.libraryextension.com/">Library Extension for Chrome and Firefox</a></li>
</ul></li>
</ul><h3>Keep In Touch</h3>
<ul><li><a href="https://twitter.com/jacobian">@jacobian</a></li>
</ul>]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/g4vr5w/Episode7-JacobKaplan-MossonAddressingCulturalIssuesinTech.mp3" length="46669889" type="audio/mpeg"/>
				<itunes:subtitle>Read all of our show notes and find more information about us at podcastinit.com
Brief Introduction

Date of recording - May 18th, 2015
Hosts - Tobias Macey and ...</itunes:subtitle>
		<itunes:summary>Read all of our show notes and find more information about us at podcastinit.com
Brief Introduction

Date of recording - May 18th, 2015
Hosts - Tobias Macey and Chris Patti
Follow us on iTunes, Stitcher or TuneIn
Give us feedback! (iTunes, Twitter, email, Disqus comments)
Overview - Interview with Jacob Kaplan-Moss
Interview with Jacob Kaplan-Moss

Introductions
How were you first introduced to Python?
So, we wanted to invite you on the show to discuss the keynote that you gave at this years PyCon. Can you tell us what you mean when you say that you're a mediocre programmer and why that is such an important admission to make?
What are some ways that we can change the tone of the conversation around programming skill?
What do we gain by admitting to ourselves and others that we are not all phenomenal engineers?
Where does the myth of exceptional vs terrible programmers come from? Can you provide some examples of times that you came in contact with this narrative?
How do you think hiring tactics in technology companies contribute to this misconception and how can they be more accepting of average programmers?
What are some ways that we can work toward eradicating the myth of the 10x programmer?
Thinking about our industry's problems retaining women and other undervalued groups, do you think the way many managers do performance reviews play a role? If so, how can we do better?
What Works For Women At Work

Can you tell us about some other ongoing narratives in the technology industry that you find equally as damaging as our misconceptions around skills and knowledge? - Tobias
indie.vc

Picks

Tobias
True Ability
Manjaro Linux
Vultr VPS
Mage Wars

Chris
K is for Kriek
Trello
Dan Carlin's Hardcore History

Jacob Kaplan-Moss
Hello Web App
What Works For Women At Work
Why Women Leave Tech: What the Research Says
Library Extension for Chrome and Firefox

Keep In Touch

@jacobian</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>00:49:36</itunes:duration>
		</item>
		<item>
		<title>Episode 6 - Jonathan Slenders Talks About Prompt Toolkit</title>
		<link>http://podcastinit.podbean.com/e/episode-6-jonathan-slenders-talks-about-prompt-toolkit/</link>
		<comments>http://podcastinit.podbean.com/e/episode-6-jonathan-slenders-talks-about-prompt-toolkit/#comments</comments>
		<pubDate>Tue, 19 May 2015 13:40:17 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Open Source</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-6-jonathan-slenders-talks-about-prompt-toolkit/</guid>

		<description><![CDATA[<p>Visit our site at <a href="http://www.podcastinit.com">podcastinit.com</a> for more show notes and news.</p>
<h1>Brief Introduction</h1>
<ul><li>Date of recording - May 17th, 2015</li>
<li>Hosts - Tobias Macey and Chris Patti</li>
<li>Follow us on iTunes, Stitcher or TuneIn</li>
<li>Give us feedback! (iTunes, Twitter, email, Disqus comments)</li>
<li>
<p>Overview - Interview with Jonathan Slenders</p>
<h1>Interview with Jonathan Slenders</h1>
</li>
<li>
<p>Introductions</p>
</li>
<li>How were you first introduced to Python? -Chris</li>
<li>What inspired you to create the python-prompt-toolkit?</li>
<li>What are some design considerations that you made when building prompt-toolkit?
<ul><li>Make minimal use of inheritance
<ul><li>Overly strong coupling</li>
<li>Better clarity for the API of your library</li>
<li>Completely event driven / asynchronous</li>
<li>No global state</li>
</ul></li>
<li>ptpython completion benefits from asynchrony - The jedi completion library is too s [...]</li></ul></li></ul>]]></description>
			<content:encoded><![CDATA[<p>Visit our site at <a href="http://www.podcastinit.com">podcastinit.com</a> for more show notes and news.</p>
<h1>Brief Introduction</h1>
<ul><li>Date of recording - May 17th, 2015</li>
<li>Hosts - Tobias Macey and Chris Patti</li>
<li>Follow us on iTunes, Stitcher or TuneIn</li>
<li>Give us feedback! (iTunes, Twitter, email, Disqus comments)</li>
<li>
<p>Overview - Interview with Jonathan Slenders</p>
<h1>Interview with Jonathan Slenders</h1>
</li>
<li>
<p>Introductions</p>
</li>
<li>How were you first introduced to Python? -Chris</li>
<li>What inspired you to create the python-prompt-toolkit?</li>
<li>What are some design considerations that you made when building prompt-toolkit?
<ul><li>Make minimal use of inheritance
<ul><li>Overly strong coupling</li>
<li>Better clarity for the API of your library</li>
<li>Completely event driven / asynchronous</li>
<li>No global state</li>
</ul></li>
<li>ptpython completion benefits from asynchrony - The jedi completion library is too slow - completion happens in its own thread</li>
</ul></li>
<li>You have built a number of projects that use the prompt-toolkit as a core component, did you have them in mind from the beginning, or are they experiments to test the capabilities of the toolkit?
<ul><li>tmux rewrite in Python, abandoned, original motivation for prompt-toolkit</li>
<li><a href="https://github.com/jonathanslenders/ptpython">ptpython</a></li>
<li><a href="https://github.com/dbcli/pgcli">pgcli</a></li>
<li><a href="https://github.com/jonathanslenders/ptpdb">ptpdb</a></li>
<li><a href="https://github.com/jonathanslenders/pyvim">pyvim</a></li>
</ul></li>
<li>Do you intend to bring PyVim to feature parity with Vim, or is it just intended for experimentation?
<ul><li>Short answer: Don’t know - but will probably never be in full parity with Vim</li>
</ul></li>
<li>What inspired you to create ptpython and why did you choose to make it a stand-along project rather than extending iPython?</li>
<li>How difficult was it to integrate with IPython and what were the benefits?
<ul><li>IPython has its own event loop - this presented difficulties as prompt-toolkit has its own as well</li>
</ul></li>
<li>
<p>What are some of the most interesting uses that you have seen of the prompt-toolkit?</p>
<ul><li>PyVim - really challenged the design</li>
<li>pgcli
<h1>Picks</h1>
</li>
</ul></li>
<li>
<p>Tobias</p>
<ul><li><a href="https://github.com/gabesullice/vimsert">vimsert</a></li>
<li><a href="http://www.thejohnnycashproject.com/">Johnny Cash Project</a></li>
<li><a href="http://www.imdb.com/title/tt0816692/">Interstellar</a></li>
</ul></li>
<li>Chris
<ul><li><a href="http://grimmales.com/telekinesis/">Grimm Telekinesis</a></li>
<li><a href="http://pandoc.org/">pandoc</a></li>
<li><a href="https://github.com/rkitover/vimpager">vimpager</a></li>
<li><a href="https://github.com/caskroom/homebrew-cask">Homebrew Cask</a></li>
</ul></li>
<li>
<p>Jonathan Slenders</p>
<ul><li>Belgian Beer
<ul><li>Rochefort</li>
</ul></li>
<li>Western European Folk Dancing
<h1>Keep in touch</h1>
</li>
</ul></li>
<li>
<p>Twitter - <a href="https://twitter.com/jonathan_s">@jonathan_s</a></p>
</li>
<li>GitHub - <a href="https://github.com/jonathanslenders">jonathanslenders</a></li>
</ul>]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/d4uyxm/Episode6-JonathanSlenders-prompt-toolkit.mp3" length="35868189" type="audio/mpeg"/>
				<itunes:subtitle>Visit our site at podcastinit.com for more show notes and news.
Brief Introduction

Date of recording - May 17th, 2015
Hosts - Tobias Macey and Chris Patti
Follow us ...</itunes:subtitle>
		<itunes:summary>Visit our site at podcastinit.com for more show notes and news.
Brief Introduction

Date of recording - May 17th, 2015
Hosts - Tobias Macey and Chris Patti
Follow us on iTunes, Stitcher or TuneIn
Give us feedback! (iTunes, Twitter, email, Disqus comments)
Overview - Interview with Jonathan Slenders

Interview with Jonathan Slenders
Introductions
How were you first introduced to Python? -Chris
What inspired you to create the python-prompt-toolkit?
What are some design considerations that you made when building prompt-toolkit?
Make minimal use of inheritance
Overly strong coupling
Better clarity for the API of your library
Completely event driven / asynchronous
No global state

ptpython completion benefits from asynchrony - The jedi completion library is too slow - completion happens in its own thread

You have built a number of projects that use the prompt-toolkit as a core component, did you have them in mind from the beginning, or are they experiments to test the capabilities of the toolkit?
tmux rewrite in Python, abandoned, original motivation for prompt-toolkit
ptpython
pgcli
ptpdb
pyvim

Do you intend to bring PyVim to feature parity with Vim, or is it just intended for experimentation?
Short answer: Don't know - but will probably never be in full parity with Vim

What inspired you to create ptpython and why did you choose to make it a stand-along project rather than extending iPython?
How difficult was it to integrate with IPython and what were the benefits?
IPython has its own event loop - this presented difficulties as prompt-toolkit has its own as well

What are some of the most interesting uses that you have seen of the prompt-toolkit?

PyVim - really challenged the design
pgcli
Picks

Tobias

vimsert
Johnny Cash Project
Interstellar

Chris
Grimm Telekinesis
pandoc
vimpager
Homebrew Cask

Jonathan Slenders

Belgian Beer
Rochefort

Western European Folk Dancing
Keep in touch

Twitter - @jonathan_s
GitHub - jonathanslenders</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>00:40:54</itunes:duration>
		</item>
		<item>
		<title>Episode 5 - Ned Batchelder</title>
		<link>http://podcastinit.podbean.com/e/episode-5-ned-batchelder/</link>
		<comments>http://podcastinit.podbean.com/e/episode-5-ned-batchelder/#comments</comments>
		<pubDate>Tue, 12 May 2015 12:07:00 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Learning</category>
	<category>Community</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-5-ned-batchelder/</guid>

		<description><![CDATA[<p>Visit <a href="http://www.podcastinit.com">podcastinit.com</a> for information about the show and links to our iTunes and Stitcher feeds.</p>
<h3>Brief Introduction</h3>
<ul><li>Date of recording - May 4th, 2015</li>
<li>Hosts - Tobias Macey and Chris Patti</li>
<li>Overview - Interview with Ned Batchelder</li>
<li>Follow us on iTunes, Stitcher or TuneIn</li>
<li>Give us feedback! (iTunes, Twitter, email, Disqus comments)</li>
<li>You can donate (if you want)!</li>
</ul><h3>Interview with Ned Batchelder</h3>
<ul><li>Introductions</li>
<li>How did you get introduced to Python?
<ul><li>Zope</li>
<li>… Implemented in Python</li>
</ul></li>
<li>How did you get started as the organizer for Boston Python Meetup?
<ul><li>History is long and varied (Why is this switching to numbers?</li>
<li>Started - 6 people sitting around a coffee table</li>
<li>5 or 6 years</li>
<li>Co-organizer Jessica McKeller
<ul><li>Built structures to help keep the community goingr</li>
</ul></li>
<li></li></ul></li></ul>]]></description>
			<content:encoded><![CDATA[<p>Visit <a href="http://www.podcastinit.com">podcastinit.com</a> for information about the show and links to our iTunes and Stitcher feeds.</p>
<h3>Brief Introduction</h3>
<ul><li>Date of recording - May 4th, 2015</li>
<li>Hosts - Tobias Macey and Chris Patti</li>
<li>Overview - Interview with Ned Batchelder</li>
<li>Follow us on iTunes, Stitcher or TuneIn</li>
<li>Give us feedback! (iTunes, Twitter, email, Disqus comments)</li>
<li>You can donate (if you want)!</li>
</ul><h3>Interview with Ned Batchelder</h3>
<ul><li>Introductions</li>
<li>How did you get introduced to Python?
<ul><li>Zope</li>
<li>… Implemented in Python</li>
</ul></li>
<li>How did you get started as the organizer for Boston Python Meetup?
<ul><li>History is long and varied (Why is this switching to numbers?</li>
<li>Started - 6 people sitting around a coffee table</li>
<li>5 or 6 years</li>
<li>Co-organizer Jessica McKeller
<ul><li>Built structures to help keep the community goingr</li>
</ul></li>
<li>Weekend Python Workshop
<ul><li>People ‘adjacent’ to the male members - wives, mothers, etc.</li>
</ul></li>
<li>“What comes next” from weekend workshops - became Project Night</li>
</ul></li>
<li>How much of your time ends up being dedicated to the Python community?
<ul><li>Also maitainer of <a href="http://nedbatchelder.com/code/coverage/">coverage.py</a></li>
<li>Active on Freenode IRC #python</li>
<li>20 hours a week</li>
</ul></li>
<li>What are your goals for the Boston Python community?
<ul><li>Continue to grow</li>
<li>More events, different events?</li>
<li><a href="http://www.chipy.org/">chipy</a> - Chicago UG very active - 1 on 1 mentoring program</li>
<li>Smaller events - 5 person events - study groups
<ul><li>All levels not just beginners</li>
<li>Computational Biologists - study genomics</li>
<li>Three user groups
<ul><li>Pyladies Boston</li>
<li>DJango Boston</li>
<li>Boston Python Meetup</li>
</ul></li>
</ul></li>
</ul></li>
<li>What do you find to be the most important thing(s) for building a healthy community (particularly in reference to programming)?
<ul><li>Consistency - good to know what to expect</li>
<li>Pick a cadence - don’t burn out</li>
</ul></li>
<li>Speakers aren’t superheroes, they’re just people. ‘Everyone has at least one talk in them’.</li>
<li>Value in having a blog, twitter stream - people talk back to you and  by correcting your mistakes everyone benefits.</li>
<li>How do you keep people engaged outside of the monthly meetings?
<ul><li><a href="http://www.meetup.com/">Meetup.com</a> - requires moderation</li>
<li><a href="https://mail.python.org/mailman/listinfo">python.org mailing lists</a> - unmoderated - low traffic</li>
<li>Need to do more in that regard</li>
</ul></li>
<li>What do you like the most/least about the Python community?
<ul><li>Communities can improve - IRC has gotten better</li>
<li>Turmoil on PSF mailing list over election for directors</li>
</ul></li>
<li>How do you strike a balance between sponsors and the rest of the community? Do you have policies around sponsored presentations / talks?
<ul><li>Tend not to do sponsored talks</li>
<li><a href="https://microsoftnewengland.com/">Microsoft NERD</a> - great benefit to Boston Python</li>
<li>Provides monthly space for the group</li>
<li>1 minute slots for sponsors</li>
<li>No sales pitches</li>
</ul></li>
<li>What are the steps I can take to start my own tech community?
<ul><li>How can you get the word out?</li>
<li>Meetup.com is useful</li>
<li>People like free food and beer <img src="http://www.podbean.com/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /></li>
<li>Be predictable. Pick something sustainable</li>
</ul></li>
<li>What is the State of Python, from your perspective?
<ul><li>No signs of slowing down</li>
<li>Ruby people are moving to other environments</li>
<li>Python people are still using Python</li>
<li>Python 2 to 3 conflict is unfortunate - transition could have been handled more smoothly</li>
<li>Python 3 ecosystem is getting much better</li>
<li>Next big drama - type hinting proposal</li>
<li>Appears to be contrary to one of the basics tenets of the language at first blush</li>
</ul></li>
<li>Do you feel that Boston will ever have its own regional Python conference?
<ul><li>Toyed with bid to bring Pycon to Boston</li>
<li>Would require someone stepping up to do it</li>
<li>Not sure how a regional conference ‘feels’ as a local event</li>
<li>Try to have Boston Python be like a year long conference all year long</li>
<li>Huge undertaking</li>
</ul></li>
</ul><h3>Picks</h3>
<ul><li>Tobias
<ul><li><a href="https://www.scribd.com/g/4ko3os">Scribd</a></li>
<li><a href="https://github.com/sloria/konch">Konch</a></li>
<li><a href="http://www.hardcoded.net/dupeguru/">DupeGuru</a></li>
</ul></li>
<li>Chris
<ul><li><a href="http://therivercafe.com/">The River Cafe</a></li>
<li><a href="http://omz-software.com/pythonista/">Pythonista</a></li>
<li><a href="https://robots.thoughtbot.com/rototo-space-survival">Rototo - IOS Game</a></li>
<li><a href="http://www.arrogantbastard.com/">Stone Brewing Arrogant Bastard</a></li>
</ul></li>
<li>Ned
<ul><li><a href="https://pypi.python.org/pypi/tox">Tox</a></li>
<li><a href="https://github.com/saghul/pythonz">Pythonz</a></li>
<li><a href="http://www.spelltower.com/">Spell Tower</a></li>
<li><a href="http://io9.com/watch-a-series-of-seven-brilliant-lectures-by-richard-f-5894600">Richard Feynman’s Cornell Lectures</a></li>
</ul></li>
</ul><h3>Keep in Touch</h3>
<ul><li>Twitter: <a href="https://twitter.com/nedbat">@nedbat</a> and <a href="https://twitter.com/bostonpython">@bostonpython</a></li>
<li>IRC: nedbat</li>
<li><a href="http://nedbatchelder.com/">nedbatchelder.com</a></li>
<li><a href="http://www.meetup.com/bostonpython/">bostonpython.com</a></li>
</ul>]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/6phzbe/Episode5-NedBatchelder.mp3" length="71677653" type="audio/mpeg"/>
				<itunes:subtitle>Visit podcastinit.com for information about the show and links to our iTunes and Stitcher feeds.
Brief Introduction

Date of recording - May 4th, 2015
Hosts - Tobias Macey ...</itunes:subtitle>
		<itunes:summary>Visit podcastinit.com for information about the show and links to our iTunes and Stitcher feeds.
Brief Introduction

Date of recording - May 4th, 2015
Hosts - Tobias Macey and Chris Patti
Overview - Interview with Ned Batchelder
Follow us on iTunes, Stitcher or TuneIn
Give us feedback! (iTunes, Twitter, email, Disqus comments)
You can donate (if you want)!
Interview with Ned Batchelder

Introductions
How did you get introduced to Python?
Zope
... Implemented in Python

How did you get started as the organizer for Boston Python Meetup?
History is long and varied (Why is this switching to numbers?
Started - 6 people sitting around a coffee table
5 or 6 years
Co-organizer Jessica McKeller
Built structures to help keep the community goingr

Weekend Python Workshop
People 'adjacent' to the male members - wives, mothers, etc.

"What comes next" from weekend workshops - became Project Night

How much of your time ends up being dedicated to the Python community?
Also maitainer of coverage.py
Active on Freenode IRC #python
20 hours a week

What are your goals for the Boston Python community?
Continue to grow
More events, different events?
chipy - Chicago UG very active - 1 on 1 mentoring program
Smaller events - 5 person events - study groups
All levels not just beginners
Computational Biologists - study genomics
Three user groups
Pyladies Boston
DJango Boston
Boston Python Meetup



What do you find to be the most important thing(s) for building a healthy community (particularly in reference to programming)?
Consistency - good to know what to expect
Pick a cadence - don't burn out

Speakers aren't superheroes, they're just people. 'Everyone has at least one talk in them'.
Value in having a blog, twitter stream - people talk back to you and  by correcting your mistakes everyone benefits.
How do you keep people engaged outside of the monthly meetings?
Meetup.com - requires moderation
python.org mailing lists - unmoderated - low traffic
Need to do more in that regard

What do you like the most/least about the Python community?
Communities can improve - IRC has gotten better
Turmoil on PSF mailing list over election for directors

How do you strike a balance between sponsors and the rest of the community? Do you have policies around sponsored presentations / talks?
Tend not to do sponsored talks
Microsoft NERD - great benefit to Boston Python
Provides monthly space for the group
1 minute slots for sponsors
No sales pitches

What are the steps I can take to start my own tech community?
How can you get the word out?
Meetup.com is useful
People like free food and beer :)
Be predictable. Pick something sustainable

What is the State of Python, from your perspective?
No signs of slowing down
Ruby people are moving to other environments
Python people are still using Python
Python 2 to 3 conflict is unfortunate - transition could have been handled more smoothly
Python 3 ecosystem is getting much better
Next big drama - type hinting proposal
Appears to be contrary to one of the basics tenets of the language at first blush

Do you feel that Boston will ever have its own regional Python conference?
Toyed with bid to bring Pycon to Boston
Would require someone stepping up to do it
Not sure how a regional conference 'feels' as a local event
Try to have Boston Python be like a year long conference all year long
Huge undertaking

Picks

Tobias
Scribd
Konch
DupeGuru

Chris
The River Cafe
Pythonista
Rototo - IOS Game
Stone Brewing Arrogant Bastard

Ned
Tox
Pythonz
Spell Tower
Richard Feynman's Cornell Lectures

Keep in Touch

Twitter: @nedbat and @bostonpython
IRC: nedbat
nedbatchelder.com
bostonpython.com</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>01:15:56</itunes:duration>
		</item>
		<item>
		<title>Episode 4 - Travis Oliphant</title>
		<link>http://podcastinit.podbean.com/e/episode-4-travis-oliphant/</link>
		<comments>http://podcastinit.podbean.com/e/episode-4-travis-oliphant/#comments</comments>
		<pubDate>Mon, 04 May 2015 12:27:00 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Data Science</category>
	<category>Data Analysis</category>
	<category>Data Visualization</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-4-travis-oliphant/</guid>

		<description><![CDATA[<p>For show notes and other content, visit our site at <a href="http://www.podcastinit.com">http://www.podcastinit.com</a></p>
<h3>Brief Introduction</h3>
<ul><li>Date of recording - Apr 28th 2015</li>
<li>Hosts - Tobias Macey and Chris Patti</li>
<li>Overview - Interview with Travis Oliphant</li>
</ul><h3>Interview with Travis Oliphant</h3>
<ul><li>
<p>Introductions</p>
</li>
<li>
<p>How did you get introduced to Python?</p>
</li>
<li>
<p>I’m curious what inspired you to create NumPy and SciPy?</p>
</li>
<li>
<p>Why did you choose Python for those libraries?</p>
<ul><li>Numeric, <a href="http://hugunin.net/">Jim Hugunin</a></li>
<li>Morphology library in NumArray</li>
</ul></li>
<li>
<p>For those of us who aren’t in the know, can you provide a brief definition of what data science is and how you got involved in it?</p>
<ul><li>Term coined by <a href="http://en.wikipedia.org/wiki/DJ_Patil">DJ Patil</a></li>
<li>Answer: Anybody who takes data and tries to derive insi [...]</li></ul></li></ul>]]></description>
			<content:encoded><![CDATA[<p>For show notes and other content, visit our site at <a href="http://www.podcastinit.com">http://www.podcastinit.com</a></p>
<h3>Brief Introduction</h3>
<ul><li>Date of recording - Apr 28th 2015</li>
<li>Hosts - Tobias Macey and Chris Patti</li>
<li>Overview - Interview with Travis Oliphant</li>
</ul><h3>Interview with Travis Oliphant</h3>
<ul><li>
<p>Introductions</p>
</li>
<li>
<p>How did you get introduced to Python?</p>
</li>
<li>
<p>I’m curious what inspired you to create NumPy and SciPy?</p>
</li>
<li>
<p>Why did you choose Python for those libraries?</p>
<ul><li>Numeric, <a href="http://hugunin.net/">Jim Hugunin</a></li>
<li>Morphology library in NumArray</li>
</ul></li>
<li>
<p>For those of us who aren’t in the know, can you provide a brief definition of what data science is and how you got involved in it?</p>
<ul><li>Term coined by <a href="http://en.wikipedia.org/wiki/DJ_Patil">DJ Patil</a></li>
<li>Answer: Anybody who takes data and tries to derive insights from it</li>
<li>Nobody really knows what this means <img src="http://www.podbean.com/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /></li>
</ul></li>
<li>
<p>Can you tell us the story of how <a href="http://continuum.io/">Continuum Analytics</a> came to be?</p>
</li>
<li>
<p>What are some interesting projects that you have worked on with Continuum Analytics?</p>
<ul><li><a href="http://bokeh.pydata.org/en/latest/">Bokeh</a></li>
<li><a href="http://continuum.io/wakari">Wakari</a></li>
<li><a href="https://store.continuum.io/cshop/anaconda/">Anaconda</a></li>
<li><a href="http://numba.pydata.org/">Numba</a></li>
<li><a href="http://blaze.pydata.org/en/latest/">Blaze</a></li>
</ul></li>
<li>
<p>Can you explain a bit about what <a href="http://numfocus.org/">NumFocus</a> is and how it got started?</p>
</li>
<li>
<p>How can our audience get involved with <a href="http://numfocus.org/">NumFocus</a>?</p>
</li>
<li>
<p>For someone just starting out in the data science and data analytics space, what advice would you give?</p>
<ul><li>Download Anaconda, learn as much Python as you can</li>
<li>Google search “Data Analysis in Python”</li>
<li>iPython Notebooks in data analysis</li>
<li>R community</li>
<li>Meetups</li>
<li>Online classes</li>
<li>R Community can be helpful</li>
</ul></li>
<li>
<p>Of your myriad achievements, what are you most proud of?</p>
</li>
</ul><h3>Picks</h3>
<ul><li>
<p>Tobias</p>
<ul><li>Used bookstores
<ul><li><a href="http://www.bookbarnniantic.com/">The Book Barn</a></li>
</ul></li>
<li><a href="http://www.imdb.com/title/tt0844471/">Cloudy with a Chance of Meatballs</a></li>
<li><a href="http://www.imdb.com/title/tt0772178/">Kickin’ it Old School</a></li>
</ul></li>
<li>
<p>Chris</p>
<ul><li><a href="http://en.wikipedia.org/wiki/The_Kids_in_the_Hall">Kids In The Hall</a></li>
<li><a href="http://www.mfa.org/programs/series/art-bloom">MFA Boston Art in Bloom</a></li>
<li><a href="http://www.codenewbie.org/">CodeNewbies</a></li>
<li><a href="https://www.apple.com/imac-with-retina/">Apple 27″ Retina iMac 5K</a></li>
</ul></li>
<li>
<p>Travis Oliphant</p>
<ul><li><a href="http://datacarpentry.org/">Data Carpentry</a>
<ul><li>Tracy Teal (<a href="http://twitter.com/tracykteal">@tracykteal</a>)</li>
<li>Patterned on <a href="https://software-carpentry.org/">Software Carpentry</a></li>
</ul></li>
<li><a href="http://brainsciencepodcast.com/">Brain Science Podcast - Ginger Campbell, MD</a></li>
<li><a href="https://mises.org/library/money-bank-credit-and-economic-cycles">Money, Bank Credit and Economic Cycles</a></li>
</ul></li>
<li>
<p>Travis Contacts</p>
<ul><li>Twitter:
<ul><li>Travis - <a href="https://twitter.com/teoliphant">@teoliphant</a></li>
<li>NumFocus - <a href="https://twitter.com/numfocus">@numfocus</a></li>
<li>Continuum Analytics - <a href="https://twitter.com/continuumio">@ContinuumIO</a></li>
</ul></li>
</ul></li>
</ul><p>The intro and outro music is from Requiem for a Fish <a href="http://freemusicarchive.org/music/The_Freak_Fandango_Orchestra/">The Freak Fandango Orchestra</a>  / <a href="http://creativecommons.org/licenses/by-sa/3.0/">CC BY-SA</a></p>
]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/hgj49i/Episode4-TravisOliphant.mp3" length="49108751" type="audio/mpeg"/>
				<itunes:subtitle>For show notes and other content, visit our site at http://www.podcastinit.com

Brief Introduction

Date of recording - Apr 28th 2015
Hosts - Tobias Macey and Chris Patti
Overview - Interview ...</itunes:subtitle>
		<itunes:summary>For show notes and other content, visit our site at http://www.podcastinit.com

Brief Introduction

Date of recording - Apr 28th 2015
Hosts - Tobias Macey and Chris Patti
Overview - Interview with Travis Oliphant
Interview with Travis Oliphant

Introductions
How did you get introduced to Python?
I'm curious what inspired you to create NumPy and SciPy?
Why did you choose Python for those libraries?

Numeric, Jim Hugunin
Morphology library in NumArray

For those of us who aren't in the know, can you provide a brief definition of what data science is and how you got involved in it?

Term coined by DJ Patil
Answer: Anybody who takes data and tries to derive insights from it
Nobody really knows what this means :)

Can you tell us the story of how Continuum Analytics came to be?
What are some interesting projects that you have worked on with Continuum Analytics?

Bokeh
Wakari
Anaconda
Numba
Blaze

Can you explain a bit about what NumFocus is and how it got started?
How can our audience get involved with NumFocus?
For someone just starting out in the data science and data analytics space, what advice would you give?

Download Anaconda, learn as much Python as you can
Google search "Data Analysis in Python"
iPython Notebooks in data analysis
R community
Meetups
Online classes
R Community can be helpful

Of your myriad achievements, what are you most proud of?
Picks

Tobias

Used bookstores
The Book Barn

Cloudy with a Chance of Meatballs
Kickin' it Old School

Chris

Kids In The Hall
MFA Boston Art in Bloom
CodeNewbies
Apple 27" Retina iMac 5K

Travis Oliphant

Data Carpentry
Tracy Teal (@tracykteal)
Patterned on Software Carpentry

Brain Science Podcast - Ginger Campbell, MD
Money, Bank Credit and Economic Cycles

Travis Contacts

Twitter:
Travis - @teoliphant
NumFocus - @numfocus
Continuum Analytics - @ContinuumIO


The intro and outro music is from Requiem for a Fish The Freak Fandango Orchestra  / CC BY-SA</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>00:52:17</itunes:duration>
	<itunes:image href="http://podcastinit.podbean.com/mf/web/29u8gq/podcast_init_logo.png" />	</item>
		<item>
		<title>Episode 3 - Kivy Core Developers</title>
		<link>http://podcastinit.podbean.com/e/episode-3-kivy-core-developers/</link>
		<comments>http://podcastinit.podbean.com/e/episode-3-kivy-core-developers/#comments</comments>
		<pubDate>Mon, 27 Apr 2015 13:33:28 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-3-kivy-core-developers/</guid>

		<description><![CDATA[<p>You can view all of the show notes for every episode at http://podcastinit.com</p>
<h3>Brief Introduction</h3>
<ul><li>Date of recording - Apr 21st 2015</li>
<li>Hosts - Tobias Macey and Chris Patti</li>
<li>Overview - Interview with members of the Kivy core development team</li>
</ul><h3>Interview with Kivy Core Developers</h3>
<ul><li>Introductions</li>
<li>How did you get introduced to Python?</li>
<li>How did the Kivy project get started?</li>
<li>What made you choose Python as the basis for Kivy?</li>
<li>What were some influences on and inspirations for Kivy’s  design?
<ul><li><a href="https://www.youtube.com/watch?v=wf-BqAjZb8M">Raymond Hettinger - Beyond Pep 8</a></li>
</ul></li>
<li>One of the amazing things about Kivy is that it’s comparatively simple to learn and get started with. Did this ease of use occur by design or accident?</li>
<li>What were some of the biggest challenges to designing or implementing Kivy?</li>
<li>If you could start the project ov [...]</li></ul>]]></description>
			<content:encoded><![CDATA[<p>You can view all of the show notes for every episode at http://podcastinit.com</p>
<h3>Brief Introduction</h3>
<ul><li>Date of recording - Apr 21st 2015</li>
<li>Hosts - Tobias Macey and Chris Patti</li>
<li>Overview - Interview with members of the Kivy core development team</li>
</ul><h3>Interview with Kivy Core Developers</h3>
<ul><li>Introductions</li>
<li>How did you get introduced to Python?</li>
<li>How did the Kivy project get started?</li>
<li>What made you choose Python as the basis for Kivy?</li>
<li>What were some influences on and inspirations for Kivy’s  design?
<ul><li><a href="https://www.youtube.com/watch?v=wf-BqAjZb8M">Raymond Hettinger - Beyond Pep 8</a></li>
</ul></li>
<li>One of the amazing things about Kivy is that it’s comparatively simple to learn and get started with. Did this ease of use occur by design or accident?</li>
<li>What were some of the biggest challenges to designing or implementing Kivy?</li>
<li>If you could start the project over, what would you do differently?</li>
<li>What are some of the most interesting things you’ve seen Kivy used for?
<ul><li>Gabriel Pettier - <a href="http://www.tangibledisplay.com/en/">http://www.tangibledisplay.com/en/</a></li>
<li>Mathieu Virbel - <a href="https://www.digital-stories.fr/">https://www.digital-stories.fr/</a> and  <a href="https://vimeo.com/80051846">https://vimeo.com/80051846</a></li>
</ul></li>
<li>What are some changes/features that you are particularly excited about for the future of Kivy?
<ul><li><a href="https://github.com/kivy/kivy/wiki/Kivy-2.0-api-breaks">Wiki for roadmap to 2.0</a></li>
<li><a href="https://github.com/kivy/pyjnius">PyJnius</a></li>
<li><a href="https://github.com/kivy/pyobjus">PyObjus</a></li>
<li><a href="https://github.com/kivy/kivy-ios">Kivy-iOS</a></li>
<li><a href="https://github.com/kivy/buildozer">Buildozer</a></li>
<li><a href="https://github.com/kivy/kivy-remote-shell">Kivy Remote Shell</a></li>
<li><a href="https://github.com/kivy/plyer">Plyer</a></li>
</ul></li>
<li>Are there any platforms/operating systems that you are trying to add support for (e.g. Sailfish OS, Ubuntu Phone, Firefox  OS)?</li>
<li>Is there anything in particular that you would like to ask for our listeners to help with?
<ul><li>Google Summer of Code - If you didn’t get accepted, DO it anyway! <img src="http://www.podbean.com/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /></li>
<li>Start small - documentation fixes</li>
<li>Fix issues</li>
<li>Huge backlog - help answering questions</li>
<li>Maintainers for subprojects - like PyJnius</li>
<li>Sponsors - Kivy core team looking for new hardware</li>
<li>Increase unit test coverage
<ul><li>If you find a bug submit a test case</li>
</ul></li>
</ul></li>
</ul><h3>Picks</h3>
<ul><li>Tobias
<ul><li><a>Zeal</a></li>
<li><a href="http://www.commitstrip.com/en/">CommitStrip</a></li>
</ul></li>
<li>Chris
<ul><li><a href="http://www.beeradvocate.com/beer/profile/26520/71501/">Jack’s Abbey Smoke &amp; Dagger</a></li>
<li><a href="http://www.imdb.com/title/tt2404425/">Woman in Gold</a></li>
</ul></li>
<li>Mathieu Virbel
<ul><li><a href="http://eli.thegreenplace.net/2015/yapf-yet-another-python-formatter/">YAPF Yet Another Python Formatter</a></li>
<li><a href="http://ninchanese.com/">Learn Chinese With Cats!</a></li>
<li><a href="http://fr.wikipedia.org/wiki/Rince_Cochon">Rince Cochon</a></li>
</ul></li>
<li>Akshay Aurora
<ul><li><a href="http://en.wikipedia.org/wiki/Mango">Mangoes!</a></li>
<li><a href="https://www.youtube.com/watch?v=FhRXAD8-UkE">Tic-Tac-Toe machine controlled by Kivy</a></li>
</ul></li>
<li>Ryan Pessa
<ul><li><a href="http://www.thevapingrabbit.com/">E-Cigarettes - The MilkMan by Vaping Rabbit</a></li>
</ul></li>
<li>Gabriel Pettier
<ul><li><a href="http://i3wm.org/">I3WM Tiling window manager</a></li>
<li><a href="http://english.bouletcorp.com/">Boulet Corp</a></li>
<li><a href="http://www.smbc-comics.com/">SMBC</a></li>
</ul></li>
</ul><h3>Contacting the Kivy Core Team</h3>
<ul><li><a href="http://kivy.org/#aboutus">Kivy.org - About Us page</a></li>
</ul><p>The intro and outro music is from Requiem for a Fish <a href="http://freemusicarchive.org/music/The_Freak_Fandango_Orchestra/">The Freak Fandango Orchestra</a>  / <a href="http://creativecommons.org/licenses/by-sa/3.0/">CC BY-SA</a></p>
]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/ztgfpr/Episode3-KivyCoreDevelopers.mp3" length="79176300" type="audio/mpeg"/>
				<itunes:subtitle>You can view all of the show notes for every episode at http://podcastinit.com

Brief Introduction

Date of recording - Apr 21st 2015
Hosts - Tobias Macey and Chris ...</itunes:subtitle>
		<itunes:summary>You can view all of the show notes for every episode at http://podcastinit.com

Brief Introduction

Date of recording - Apr 21st 2015
Hosts - Tobias Macey and Chris Patti
Overview - Interview with members of the Kivy core development team
Interview with Kivy Core Developers

Introductions
How did you get introduced to Python?
How did the Kivy project get started?
What made you choose Python as the basis for Kivy?
What were some influences on and inspirations for Kivy's  design?
Raymond Hettinger - Beyond Pep 8

One of the amazing things about Kivy is that it's comparatively simple to learn and get started with. Did this ease of use occur by design or accident?
What were some of the biggest challenges to designing or implementing Kivy?
If you could start the project over, what would you do differently?
What are some of the most interesting things you've seen Kivy used for?
Gabriel Pettier - http://www.tangibledisplay.com/en/
Mathieu Virbel - https://www.digital-stories.fr/ and  https://vimeo.com/80051846

What are some changes/features that you are particularly excited about for the future of Kivy?
Wiki for roadmap to 2.0
PyJnius
PyObjus
Kivy-iOS
Buildozer
Kivy Remote Shell
Plyer

Are there any platforms/operating systems that you are trying to add support for (e.g. Sailfish OS, Ubuntu Phone, Firefox  OS)?
Is there anything in particular that you would like to ask for our listeners to help with?
Google Summer of Code - If you didn't get accepted, DO it anyway! :)
Start small - documentation fixes
Fix issues
Huge backlog - help answering questions
Maintainers for subprojects - like PyJnius
Sponsors - Kivy core team looking for new hardware
Increase unit test coverage
If you find a bug submit a test case


Picks

Tobias
Zeal
CommitStrip

Chris
Jack's Abbey Smoke  Dagger
Woman in Gold

Mathieu Virbel
YAPF Yet Another Python Formatter
Learn Chinese With Cats!
Rince Cochon

Akshay Aurora
Mangoes!
Tic-Tac-Toe machine controlled by Kivy

Ryan Pessa
E-Cigarettes - The MilkMan by Vaping Rabbit

Gabriel Pettier
I3WM Tiling window manager
Boulet Corp
SMBC

Contacting the Kivy Core Team

Kivy.org - About Us page
The intro and outro music is from Requiem for a Fish The Freak Fandango Orchestra  / CC BY-SA</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>01:30:34</itunes:duration>
	<itunes:image href="http://podcastinit.podbean.com/mf/web/29u8gq/podcast_init_logo.png" />	</item>
		<item>
		<title>Episode 2 - Reuven Lerner</title>
		<link>http://podcastinit.podbean.com/e/episode-2-reuven-lerner/</link>
		<comments>http://podcastinit.podbean.com/e/episode-2-reuven-lerner/#comments</comments>
		<pubDate>Thu, 23 Apr 2015 13:45:00 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
	<category>Learning</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-2-reuven-lerner/</guid>

		<description><![CDATA[<p>Full show notes can be found at http://podcastinit.com/episode-2-reuven-lerner.html</p>
<h3>Episode 2 Brief intro</h3>
<ul><li>Recording date/time</li>
<li>Hosts</li>
<li>Overview</li>
</ul><h3>Reuven Lerner Interview</h3>
<ul><li>Please introduce yourself</li>
<li>How did you get introduced to Python?</li>
<li>How did you break into the field of providing Python trainings? </li>
<li>What are the most common languages that your students are coming from?</li>
<li>What are some of the biggest obstacles that people encounter when learning Python?</li>
<li>Where does Python draw the inspiration for its object system from?</li>
<li>In what way(s) does learning Python differ from learning other languages?</li>
<li>What sorts of materials/mediums do you use for training people in Python?
<ul><li><a href="http://pythontutor.com">Python Tutor</a></li>
</ul></li>
<li>Do you use your book (Practice make Python) as follow up material for your trainings?</li>
<li>In your freelance work, w [...]</li></ul>]]></description>
			<content:encoded><![CDATA[<p>Full show notes can be found at http://podcastinit.com/episode-2-reuven-lerner.html</p>
<h3>Episode 2 Brief intro</h3>
<ul><li>Recording date/time</li>
<li>Hosts</li>
<li>Overview</li>
</ul><h3>Reuven Lerner Interview</h3>
<ul><li>Please introduce yourself</li>
<li>How did you get introduced to Python?</li>
<li>How did you break into the field of providing Python trainings? </li>
<li>What are the most common languages that your students are coming from?</li>
<li>What are some of the biggest obstacles that people encounter when learning Python?</li>
<li>Where does Python draw the inspiration for its object system from?</li>
<li>In what way(s) does learning Python differ from learning other languages?</li>
<li>What sorts of materials/mediums do you use for training people in Python?
<ul><li><a href="http://pythontutor.com">Python Tutor</a></li>
</ul></li>
<li>Do you use your book (Practice make Python) as follow up material for your trainings?</li>
<li>In your freelance work, what portion of your projects use Python?
<ul><li><a href="http://blog.lerner.co.il/ruby-and-python-and-felix-and-oscar/">Ruby is Oscar, Python is Felix</a></li>
</ul></li>
<li>Have you seen a change in the demand for Python skills in the time between when you first started using it and now?</li>
<li>What types of projects would cause you to choose something other than Python?</li>
</ul><h3>Picks</h3>
<ul><li>Reuven Lerner
<ul><li><a href="http://DailyTechVideo.com">Daily Tech Video</a></li>
<li><a href="http://www.amazon.com/Mindless-Eating-More-Than-Think/dp/0345526880">Mindless Eating: Why We Eat More Than We Think by Brian Wansink</a></li>
<li><a href="http://www.amazon.com/Age-Ambition-Chasing-Fortune-Truth/dp/0374535272/ref=tmm_pap_swatch_0?_encoding=UTF8&amp;sr=&amp;qid=">Age of Ambition: Chasing Fortune, Truth, and Faith in the New China by Evan Osnos</a></li>
</ul></li>
<li>Chris Patti
<ul><li><a href="http://spencerbrewery.com/">Spencer Trappist Ale</a></li>
<li><a href="https://www.youtube.com/watch?v=-6BsiVyC1kM">Rich Hickey’s The Value of Values</a></li>
<li><a href="https://github.com/Valloric/YouCompleteMe">YouCompleteMe - Vim auto-completion</a></li>
<li><a href="http://www.irradiatedsoftware.com/sizeup/">SizeUp for OSX</a></li>
</ul></li>
<li>Tobias Macey
<ul><li><a href="http://www.checkio.org/">CheckIO - Gamified practice programming</a></li>
<li><a href="http://www.amazon.com/s/ref=as_li_ss_tl?_encoding=UTF8&amp;camp=1789&amp;creative=390957&amp;fst=as%3Aoff&amp;keywords=Snap%20circuits&amp;linkCode=ur2&amp;qid=1429692519&amp;rh=n%3A165793011%2Ck%3ASnap%20circuits&amp;rnid=2941120011&amp;tag=renaidev-20&amp;linkId=T5GAEL27J5YUV4ZJ">Snap Circuits</a><img src="https://ir-na.amazon-adsystem.com/e/ir?t=renaidev-20&amp;l=ur2&amp;o=1" width="1" height="1" border="0" alt="" style="border:none;margin:0px;" /></li>
<li><a href="http://www.amazon.com/s/ref=as_li_ss_tl?_encoding=UTF8&amp;camp=1789&amp;creative=390957&amp;hidden-keywords=B00LULVD40%7C%20B00LM6KF7O%7C&amp;ie=UTF8&amp;linkCode=ur2&amp;pf_rd_i=Nvidia%20shield%20tablet&amp;pf_rd_m=ATVPDKIKX0DER&amp;pf_rd_p=1976077942&amp;pf_rd_r=1KAT0GN4AB5JB285FQM6&amp;pf_rd_s=desktop-auto-sparkle&amp;pf_rd_t=301&amp;qid=1429692667&amp;ref=spkl_2_0_1976077942&amp;rh=i%3Aaps%2Ck%3ANVIDIA%20SHIELD&amp;tag=renaidev-20&amp;linkId=KDMMPTU5JURLPGQH">Nvidia Shield Tablet</a><img src="https://ir-na.amazon-adsystem.com/e/ir?t=renaidev-20&amp;l=ur2&amp;o=1" width="1" height="1" border="0" alt="" style="border:none;margin:0px;" /></li>
<li><a href="http://www.amazon.com/gp/product/B001R76D42/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B001R76D42&amp;linkCode=as2&amp;tag=renaidev-20&amp;linkId=NJNJ3BOH7MGMPLNX">Samson Go Mic Portable USB Condenser Microphone</a><img src="http://ir-na.amazon-adsystem.com/e/ir?t=renaidev-20&amp;l=as2&amp;o=1&amp;a=B001R76D42" width="1" height="1" border="0" alt="" style="border:none;margin:0px;" /></li>
<li><a href="https://www.zoho.com/">Zoho Apps</a></li>
</ul></li>
</ul><h3>Closing remarks</h3>
<ul><li>Reuven Contact: 
<ul><li><a href="http://lerner.co.il">Website</a></li>
<li><a href="http://lerner.co.il/blog">blog</a></li>
<li><a href="https://twitter.com/reuvenmlerner">Twitter: @reuvenmlerner</a></li>
</ul></li>
</ul>]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/7zmxw4/Episode2-ReuvenLerner.mp3" length="62638609" type="audio/mpeg"/>
				<itunes:subtitle>Learning and Teaching Python</itunes:subtitle>
		<itunes:summary>Full show notes can be found at http://podcastinit.com/episode-2-reuven-lerner.html

Episode 2 Brief intro
Recording date/time
Hosts
Overview
Reuven Lerner Interview
Please introduce yourself
How did you get introduced to Python?
How did you break into the field of providing Python trainings? 
What are the most common languages that your students are coming from?
What are some of the biggest obstacles that people encounter when learning Python?
Where does Python draw the inspiration for its object system from?
In what way(s) does learning Python differ from learning other languages?
What sorts of materials/mediums do you use for training people in Python?Python Tutor

Do you use your book (Practice make Python) as follow up material for your trainings?
In your freelance work, what portion of your projects use Python?Ruby is Oscar, Python is Felix

Have you seen a change in the demand for Python skills in the time between when you first started using it and now?
What types of projects would cause you to choose something other than Python?
Picks
Reuven LernerDaily Tech Video
Mindless Eating: Why We Eat More Than We Think by Brian Wansink
Age of Ambition: Chasing Fortune, Truth, and Faith in the New China by Evan Osnos

Chris PattiSpencer Trappist Ale
Rich Hickey's The Value of Values
YouCompleteMe - Vim auto-completion
SizeUp for OSX

Tobias MaceyCheckIO - Gamified practice programming
Snap Circuits
Nvidia Shield Tablet
Samson Go Mic Portable USB Condenser Microphone
Zoho Apps

Closing remarks
Reuven Contact: Website
blog
Twitter: @reuvenmlerner</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>01:07:32</itunes:duration>
	<itunes:image href="http://podcastinit.podbean.com/mf/web/29u8gq/podcast_init_logo.png" />	</item>
		<item>
		<title>Episode 1 - Thomas Hatch</title>
		<link>http://podcastinit.podbean.com/e/episode-1-thomas-hatch/</link>
		<comments>http://podcastinit.podbean.com/e/episode-1-thomas-hatch/#comments</comments>
		<pubDate>Sat, 11 Apr 2015 20:51:00 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/episode-1-thomas-hatch/</guid>

		<description><![CDATA[<p>Full show notes can be found at http://podcastinit.com/episode-1-thomas-hatch.html</p>
<h4>Brief Intro</h4>
<ul><li>Hosts</li>
<li>Overview</li>
<li>Python at Chefconf!</li>
<li>Plug for <a href="http://www.talkpythontome.com">Talk Python To Me</a></li>
</ul><h4>Thomas Hatch Interview</h4>
<h4>Picks</h4>
<ul><li>Thomas Hatch
<ul><li>Flow Based Programming
<ul><li><a href="http://ioflo.com/">IOFlo</a></li>
</ul></li>
<li><a href="http://en.wikipedia.org/wiki/Imagine_Dragons">Imagine Dragons</a></li>
</ul></li>
<li>Chris Patti
<ul><li><a href="http://www.stonebrewing.com/irs/">Stone Imperial Russian Stout</a></li>
<li><a href="http://arunrocks.com/python-one-liner-games/">Python One Liner Games</a></li>
<li><a href="http://www.meetup.com/bostonpython/">Boston Python User Group</a></li>
</ul></li>
<li>Tobias Macey
<ul><li><a href="http://www.noisli.com/">Noisli</a></li>
<li><a href="https://github.com/hluk/CopyQ">CopyQ</a></li>
<li><a href="http://blog.getpelican.com/">Peli [...]</a></li></ul></li></ul>]]></description>
			<content:encoded><![CDATA[<p>Full show notes can be found at http://podcastinit.com/episode-1-thomas-hatch.html</p>
<h4>Brief Intro</h4>
<ul><li>Hosts</li>
<li>Overview</li>
<li>Python at Chefconf!</li>
<li>Plug for <a href="http://www.talkpythontome.com">Talk Python To Me</a></li>
</ul><h4>Thomas Hatch Interview</h4>
<h4>Picks</h4>
<ul><li>Thomas Hatch
<ul><li>Flow Based Programming
<ul><li><a href="http://ioflo.com/">IOFlo</a></li>
</ul></li>
<li><a href="http://en.wikipedia.org/wiki/Imagine_Dragons">Imagine Dragons</a></li>
</ul></li>
<li>Chris Patti
<ul><li><a href="http://www.stonebrewing.com/irs/">Stone Imperial Russian Stout</a></li>
<li><a href="http://arunrocks.com/python-one-liner-games/">Python One Liner Games</a></li>
<li><a href="http://www.meetup.com/bostonpython/">Boston Python User Group</a></li>
</ul></li>
<li>Tobias Macey
<ul><li><a href="http://www.noisli.com/">Noisli</a></li>
<li><a href="https://github.com/hluk/CopyQ">CopyQ</a></li>
<li><a href="http://blog.getpelican.com/">Pelican</a></li>
<li><a href="http://blog.renaissancedev.com/from-heroku-to-aws-with-saltstack-part-1.html">Moving From Heroku to AWS With Salt Part 1</a></li>
<li><a href="http://blog.renaissancedev.com/from-heroku-to-aws-with-saltstack-part-1.html">Moving From Heroku to AWS With Salt Part 2</a></li>
</ul></li>
</ul><h4>Closing Remarks</h4>
]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/vg2eu9/Episode1-ThomasHatch.mp3" length="55674787" type="audio/mpeg"/>
				<itunes:subtitle>Full show notes can be found at http://podcastinit.com/episode-1-thomas-hatch.html

Brief Intro
Hosts
Overview
Python at Chefconf!
Plug for Talk Python To Me
Thomas Hatch Interview
Picks
Thomas HatchFlow Based ProgrammingIOFlo

Imagine Dragons

Chris Pat</itunes:subtitle>
		<itunes:summary>Full show notes can be found at http://podcastinit.com/episode-1-thomas-hatch.html

Brief Intro
Hosts
Overview
Python at Chefconf!
Plug for Talk Python To Me
Thomas Hatch Interview
Picks
Thomas HatchFlow Based ProgrammingIOFlo

Imagine Dragons

Chris PattiStone Imperial Russian Stout
Python One Liner Games
Boston Python User Group

Tobias MaceyNoisli
CopyQ
Pelican
Moving From Heroku to AWS With Salt Part 1
Moving From Heroku to AWS With Salt Part 2

Closing Remarks</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>01:06:51</itunes:duration>
	<itunes:image href="http://podcastinit.podbean.com/mf/web/29u8gq/podcast_init_logo.png" />	</item>
		<item>
		<title>Podcast.__init__ - Introduction</title>
		<link>http://podcastinit.podbean.com/e/podbean_best_podcast_hosting_audio_video_blog_hosting/</link>
		<comments>http://podcastinit.podbean.com/e/podbean_best_podcast_hosting_audio_video_blog_hosting/#comments</comments>
		<pubDate>Sat, 21 Mar 2015 14:21:00 +0000</pubDate>
		<dc:creator>podcastinit</dc:creator>
		
	<category>Technology</category>
	<category>Programming</category>
	<category>Software</category>
	<category>Python</category>
		<guid isPermaLink="false">http://podcastinit.podbean.com/e/podbean_best_podcast_hosting_audio_video_blog_hosting/</guid>

		<description><![CDATA[<p><font face="Arial, Verdana"><span style="font-size:10pt;">Welcome to the first episode of a new podcast focused on bringing you the stories of the people who make the Python language and ecosystem great.</span></font>
</p><div style="font-family:Arial, Verdana;font-size:10pt;font-style:normal;font-variant:normal;line-height:normal;font-weight:normal;"><br /></div>
<div style="font-family:Arial, Verdana;font-size:10pt;font-style:normal;font-variant:normal;line-height:normal;"><strong>Outline</strong></div>
<div>
<ul><li><font face="Arial, Verdana"><span style="font-size:13.3333330154419px;">Introduction</span></font></li>
<li><font face="Arial, Verdana"><span style="font-size:13.3333330154419px;">Brief Host Biographies</span></font></li>
<li><font face="Arial, Verdana"><span style="font-size:13.3333330154419px;">Why We’re Doing This</span></font></li>
<li><font face="Arial, Verdana"><span style="font-size:13.3333330154419px;">Why We Love Python &#38; Favor [...]</span></font></li></ul></div>]]></description>
			<content:encoded><![CDATA[<p><font face="Arial, Verdana"><span style="font-size:10pt;">Welcome to the first episode of a new podcast focused on bringing you the stories of the people who make the Python language and ecosystem great.</span></font>
</p><div style="font-family:Arial, Verdana;font-size:10pt;font-style:normal;font-variant:normal;line-height:normal;font-weight:normal;"><br /></div>
<div style="font-family:Arial, Verdana;font-size:10pt;font-style:normal;font-variant:normal;line-height:normal;"><strong>Outline</strong></div>
<div>
<ul><li><font face="Arial, Verdana"><span style="font-size:13.3333330154419px;">Introduction</span></font></li>
<li><font face="Arial, Verdana"><span style="font-size:13.3333330154419px;">Brief Host Biographies</span></font></li>
<li><font face="Arial, Verdana"><span style="font-size:13.3333330154419px;">Why We’re Doing This</span></font></li>
<li><font face="Arial, Verdana"><span style="font-size:13.3333330154419px;">Why We Love Python &amp; Favorite Tools</span></font></li>
<li><font face="Arial, Verdana"><span style="font-size:13.3333330154419px;">Thank You</span></font></li>
<li><font face="Arial, Verdana"><span style="font-size:13.3333330154419px;">Picks!</span></font></li>
</ul><div style="font-family:Arial, Verdana;font-size:10pt;font-style:normal;font-variant:normal;line-height:normal;"><strong>Picks</strong></div>
<div>
<ul><li><font face="Arial, Verdana"><span style="font-size:13.3333330154419px;">Tobias</span></font><ul><li><a href="http://www.amazon.com/gp/product/B005E7A3OM/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B005E7A3OM&amp;linkCode=as2&amp;tag=renaidev-20&amp;linkId=IFYC5LWSEFBOSQ7K" title="">Summoner Wars</a></li>
<li><a href="http://dbeaver.jkiss.org/" title="http://">Dbeaver</a></li>
<li><a href="https://community.kde.org/KDEConnect" title="http://">KDE Connect</a></li>
<li><a href="https://github.com/acrisci/playerctl" title="http://">Playerctl</a></li>
</ul></li><li>Chris<ul><li><a href="https://github.com/jonathanslenders/ptpython" title="http://">ptpython</a></li>
<li><a href="http://en.wikipedia.org/wiki/Duchesse_de_Bourgogne_%28beer%29" title="http://">Duchesse de Bourgogne</a></li>
</ul></li></ul></div>
<div style="font-family:Arial, Verdana;font-size:10pt;font-style:normal;font-variant:normal;line-height:normal;font-weight:normal;">The intro and outro music is from 
<div><span>Requiem for a Fish</span> (<a href="http://freemusicarchive.org/music/The_Freak_Fandango_Orchestra/">The Freak Fandango Orchestra</a>) / <a href="http://creativecommons.org/licenses/by-sa/3.0/">CC BY-SA 3.0</a></div>
</div>
</div>
]]></content:encoded>
		
			<enclosure url="http://podcastinit.podbean.com/mf/feed/792ew5/introductory_episode.mp3" length="26299794" type="audio/mpeg"/>
				<itunes:subtitle>Welcome to the first episode of a new podcast focused on bringing you the stories of the people who make the Python language and ecosystem ...</itunes:subtitle>
		<itunes:summary>This is a long form podcast about Python and the people who make it great. We conduct interviews about projects and topics that are of particular interest to people in the Python community.</itunes:summary>
				<itunes:author>Tobias Macey &#x26; Chris Patti</itunes:author>
		<itunes:explicit>No</itunes:explicit>
		<itunes:block>No</itunes:block>
		<itunes:duration>00:27:23</itunes:duration>
	<itunes:image href="http://podcastinit.podbean.com/mf/web/29u8gq/podcast_init_logo.png" />	</item>
	</channel>
</rss>
